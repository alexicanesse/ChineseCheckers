
;; Function boost::detail::sp_counted_base::destroy (_ZN5boost6detail15sp_counted_base7destroyEv, funcdef_no=6052, decl_uid=146518, cgraph_uid=1684, symbol_order=2541)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 84 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":97:18 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 85)
        (mem/f:DI (reg/f:DI 84 [ this ]) [5 this_3(D)->_vptr.sp_counted_base+0 S8 A64])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":99:16 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 86)
        (mem/f:DI (plus:DI (reg/f:DI 85)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_1 + 8B]+0 S8 A64])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":99:16 74 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 84 [ this ])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":99:16 74 {*movdi_internal}
     (nil))
(call_insn/j 9 8 0 2 (call (mem:QI (reg/f:DI 86) [0 *OBJ_TYPE_REF(_2;this_3(D)->1) S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":99:16 817 {*sibcall}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::detail::converter_target_type<int>::get_pytype (_ZN5boost6python6detail21converter_target_typeIiE10get_pytypeEv, funcdef_no=7092, decl_uid=163766, cgraph_uid=2099, symbol_order=2962)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 9 2 (set (reg/f:DI 82 [ <retval> ])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":109:16 74 {*movdi_internal}
     (nil))
(insn 9 5 10 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 82 [ <retval> ])) "/usr/include/boost/python/detail/caller.hpp":110:5 74 {*movdi_internal}
     (nil))
(insn 10 9 0 2 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":110:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::to_python_converter<std::vector<std::vector<Color> >, gridtype_to_list>::get_pytype_impl (_ZN5boost6python19to_python_converterISt6vectorIS2_I5ColorSaIS3_EESaIS5_EE16gridtype_to_listLb0EE15get_pytype_implEv, funcdef_no=11869, decl_uid=264427, cgraph_uid=3780, symbol_order=4686)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 9 2 (set (reg/f:DI 82 [ <retval> ])
        (const_int 0 [0])) "/usr/include/boost/python/to_python_converter.hpp":64:45 74 {*movdi_internal}
     (nil))
(insn 9 5 10 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 82 [ <retval> ])) "/usr/include/boost/python/to_python_converter.hpp":65:5 74 {*movdi_internal}
     (nil))
(insn 10 9 0 2 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/to_python_converter.hpp":65:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::to_python_converter<std::vector<std::vector<std::vector<int> > >, vector_of_vector_of_positiontype_to_list>::get_pytype_impl (_ZN5boost6python19to_python_converterISt6vectorIS2_IS2_IiSaIiEESaIS4_EESaIS6_EE40vector_of_vector_of_positiontype_to_listLb0EE15get_pytype_implEv, funcdef_no=11872, decl_uid=264471, cgraph_uid=3783, symbol_order=4689)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 9 2 (set (reg/f:DI 82 [ <retval> ])
        (const_int 0 [0])) "/usr/include/boost/python/to_python_converter.hpp":64:45 74 {*movdi_internal}
     (nil))
(insn 9 5 10 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 82 [ <retval> ])) "/usr/include/boost/python/to_python_converter.hpp":65:5 74 {*movdi_internal}
     (nil))
(insn 10 9 0 2 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/to_python_converter.hpp":65:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::non_polymorphic_id_generator<ChineseCheckers>::execute (_ZN5boost6python7objects28non_polymorphic_id_generatorI15ChineseCheckersE7executeEPv, funcdef_no=12842, decl_uid=298844, cgraph_uid=4753, symbol_order=5678)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 82 -> 87 88
; Splitting reg 83 -> 89 90
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 84 [ p_ ])
        (reg:DI 5 di [ p_ ])) "/usr/include/boost/python/object/inheritance.hpp":50:25 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 87 [ D.320046 ])
        (reg/v/f:DI 84 [ p_ ])) 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 8 7 16 2 (set (reg:DI 88 [ D.320046+8 ])
        (reg:DI 85)) 74 {*movdi_internal}
     (nil))
(insn 16 8 17 2 (set (reg:DI 89 [ <retval> ])
        (reg:DI 87 [ D.320046 ])) "/usr/include/boost/python/object/inheritance.hpp":52:55 74 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 90 [ <retval>+8 ])
        (reg:DI 88 [ D.320046+8 ])) "/usr/include/boost/python/object/inheritance.hpp":52:55 74 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 0 ax)
        (reg:DI 89 [ <retval> ])) "/usr/include/boost/python/object/inheritance.hpp":53:5 74 {*movdi_internal}
     (nil))
(insn 19 18 14 2 (set (reg:DI 1 dx [+8 ])
        (reg:DI 90 [ <retval>+8 ])) "/usr/include/boost/python/object/inheritance.hpp":53:5 74 {*movdi_internal}
     (nil))
(insn 14 19 0 2 (use (reg/i:TI 0 ax)) "/usr/include/boost/python/object/inheritance.hpp":53:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::to_python_converter<ChineseCheckers, boost::python::objects::class_cref_wrapper<ChineseCheckers, boost::python::objects::make_instance<ChineseCheckers, boost::python::objects::value_holder<ChineseCheckers> > >, true>::get_pytype_impl (_ZN5boost6python19to_python_converterI15ChineseCheckersNS0_7objects18class_cref_wrapperIS2_NS3_13make_instanceIS2_NS3_12value_holderIS2_EEEEEELb1EE15get_pytype_implEv, funcdef_no=12845, decl_uid=296624, cgraph_uid=4756, symbol_order=5681)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 86)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/pytype_function.hpp":94:42 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:DI 85)
        (mem/f/c:DI (reg/f:DI 86) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/pytype_function.hpp":94:42 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87)
        (mem/f:DI (plus:DI (reg/f:DI 85)
                (const_int 24 [0x18])) [9 converters.85_2->m_class_object+0 S8 A64])) "/usr/include/boost/python/to_python_converter.hpp":64:45 74 {*movdi_internal}
     (nil))
(insn 8 7 12 2 (set (reg/f:DI 83 [ <retval> ])
        (reg/f:DI 87)) "/usr/include/boost/python/to_python_converter.hpp":64:45 74 {*movdi_internal}
     (nil))
(insn 12 8 13 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/to_python_converter.hpp":65:5 74 {*movdi_internal}
     (nil))
(insn 13 12 0 2 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/to_python_converter.hpp":65:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<void (*)(_object*), boost::python::default_call_policies, boost::mpl::vector2<void, _object*> > >::min_arity (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEE9min_arityEv, funcdef_no=13464, decl_uid=308079, cgraph_uid=5375, symbol_order=7102)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 10 2 (set (reg:SI 82 [ <retval> ])
        (const_int 1 [0x1])) "/usr/include/boost/python/object/py_function.hpp":43:35 75 {*movsi_internal}
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 82 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":44:5 75 {*movsi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":44:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::get_local_deleter (_ZN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEE17get_local_deleterERKSt9type_info, funcdef_no=13475, decl_uid=305832, cgraph_uid=5386, symbol_order=7113)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 5 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 11 2 (set (reg/f:DI 82 [ <retval> ])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":179:104 74 {*movdi_internal}
     (nil))
(insn 11 7 12 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 82 [ <retval> ])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":180:5 74 {*movdi_internal}
     (nil))
(insn 12 11 0 2 (use (reg/i:DI 0 ax)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":180:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::get_untyped_deleter (_ZN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEE19get_untyped_deleterEv, funcdef_no=13476, decl_uid=305835, cgraph_uid=5387, symbol_order=7114)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":182:12 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (parallel [
            (set (reg:DI 84)
                (plus:DI (reg/f:DI 83 [ this ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":184:46 210 {*adddi_1}
     (nil))
(insn 7 6 11 2 (set (reg/f:DI 82 [ <retval> ])
        (reg:DI 84)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":184:46 74 {*movdi_internal}
     (nil))
(insn 11 7 12 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 82 [ <retval> ])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":185:5 74 {*movdi_internal}
     (nil))
(insn 12 11 0 2 (use (reg/i:DI 0 ax)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":185:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<int, ChineseCheckers&> > >::min_arity (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEE9min_arityEv, funcdef_no=13478, decl_uid=294580, cgraph_uid=5389, symbol_order=7116)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 10 2 (set (reg:SI 82 [ <retval> ])
        (const_int 1 [0x1])) "/usr/include/boost/python/object/py_function.hpp":43:35 75 {*movsi_internal}
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 82 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":44:5 75 {*movsi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":44:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<std::vector<std::vector<std::vector<int> > > (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<std::vector<std::vector<std::vector<int> > >, ChineseCheckers&> > >::min_arity (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEE9min_arityEv, funcdef_no=13481, decl_uid=294511, cgraph_uid=5392, symbol_order=7119)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 10 2 (set (reg:SI 82 [ <retval> ])
        (const_int 1 [0x1])) "/usr/include/boost/python/object/py_function.hpp":43:35 75 {*movsi_internal}
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 82 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":44:5 75 {*movsi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":44:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<std::vector<std::vector<Color> > (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<std::vector<std::vector<Color> >, ChineseCheckers&> > >::min_arity (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEE9min_arityEv, funcdef_no=13484, decl_uid=294442, cgraph_uid=5395, symbol_order=7122)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 10 2 (set (reg:SI 82 [ <retval> ])
        (const_int 1 [0x1])) "/usr/include/boost/python/object/py_function.hpp":43:35 75 {*movsi_internal}
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 82 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":44:5 75 {*movsi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":44:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<void (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<void, ChineseCheckers&> > >::min_arity (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEE9min_arityEv, funcdef_no=13487, decl_uid=294373, cgraph_uid=5398, symbol_order=7125)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 10 2 (set (reg:SI 82 [ <retval> ])
        (const_int 1 [0x1])) "/usr/include/boost/python/object/py_function.hpp":43:35 75 {*movsi_internal}
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 82 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":44:5 75 {*movsi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":44:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<Result (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<Result, ChineseCheckers&> > >::min_arity (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEE9min_arityEv, funcdef_no=13490, decl_uid=294304, cgraph_uid=5401, symbol_order=7128)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 10 2 (set (reg:SI 82 [ <retval> ])
        (const_int 1 [0x1])) "/usr/include/boost/python/object/py_function.hpp":43:35 75 {*movsi_internal}
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 82 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":44:5 75 {*movsi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":44:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<bool (ChineseCheckers::*)(int, const std::vector<std::vector<int> >&), boost::python::default_call_policies, boost::mpl::vector4<bool, ChineseCheckers&, int, const std::vector<std::vector<int> >&> > >::min_arity (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEE9min_arityEv, funcdef_no=13493, decl_uid=294209, cgraph_uid=5404, symbol_order=7131)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 10 2 (set (reg:SI 82 [ <retval> ])
        (const_int 3 [0x3])) "/usr/include/boost/python/object/py_function.hpp":43:35 75 {*movsi_internal}
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 82 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":44:5 75 {*movsi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":44:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::detail::converter_target_type<boost::python::to_python_value<const int&> >::get_pytype (_ZN5boost6python6detail21converter_target_typeINS0_15to_python_valueIRKiEEE10get_pytypeEv, funcdef_no=13648, decl_uid=316723, cgraph_uid=5559, symbol_order=7312)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyLong_Type") [flags 0x40]  <var_decl 0x7f1a404116c0 PyLong_Type>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":100:109 74 {*movdi_internal}
     (nil))
(insn 6 5 10 2 (set (reg/f:DI 82 [ <retval> ])
        (reg:DI 84)) "/usr/include/boost/python/detail/caller.hpp":100:109 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("PyLong_Type") [flags 0x40]  <var_decl 0x7f1a404116c0 PyLong_Type>)
        (nil)))
(insn 10 6 11 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 82 [ <retval> ])) "/usr/include/boost/python/detail/caller.hpp":101:5 74 {*movdi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":101:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::detail::converter_target_type<boost::python::to_python_value<const bool&> >::get_pytype (_ZN5boost6python6detail21converter_target_typeINS0_15to_python_valueIRKbEEE10get_pytypeEv, funcdef_no=13683, decl_uid=317419, cgraph_uid=5594, symbol_order=7347)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyBool_Type") [flags 0x40]  <var_decl 0x7f1a404117e0 PyBool_Type>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":100:109 74 {*movdi_internal}
     (nil))
(insn 6 5 10 2 (set (reg/f:DI 82 [ <retval> ])
        (reg:DI 84)) "/usr/include/boost/python/detail/caller.hpp":100:109 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("PyBool_Type") [flags 0x40]  <var_decl 0x7f1a404117e0 PyBool_Type>)
        (nil)))
(insn 10 6 11 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 82 [ <retval> ])) "/usr/include/boost/python/detail/caller.hpp":101:5 74 {*movdi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":101:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function iterable_converter::convertible (_ZN18iterable_converter11convertibleEP7_object, funcdef_no=11082, decl_uid=260206, cgraph_uid=2970, symbol_order=3859)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 84 [ object ])
        (reg:DI 5 di [ object ])) "src/ChineseCheckersWrapper.cpp":47:16 74 {*movdi_internal}
     (nil))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg:DI 5 di)
        (reg/v/f:DI 84 [ object ])) "src/ChineseCheckersWrapper.cpp":48:28 74 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_GetIter") [flags 0x41]  <function_decl 0x7f1a4050fa00 PyObject_GetIter>) [0 PyObject_GetIter S1 A8])
            (const_int 0 [0]))) "src/ChineseCheckersWrapper.cpp":48:28 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("PyObject_GetIter") [flags 0x41]  <function_decl 0x7f1a4050fa00 PyObject_GetIter>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 82 [ _5 ])
        (reg:DI 0 ax)) "src/ChineseCheckersWrapper.cpp":48:28 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _5 ])
            (const_int 0 [0]))) "src/ChineseCheckersWrapper.cpp":48:37 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "src/ChineseCheckersWrapper.cpp":48:37 806 {*jcc}
     (int_list:REG_BR_PROB 913754300 (nil))
 -> 13)
;;  succ:       4 [85.1% (guessed)]  count:913754296 (estimated locally)
;;              3 [14.9% (guessed)]  count:159987528 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 159987528 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [14.9% (guessed)]  count:159987528 (estimated locally) (FALLTHRU)
(note 12 11 4 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 4 12 13 3 (set (reg/v/f:DI 84 [ object ])
        (reg/f:DI 82 [ _5 ])) "src/ChineseCheckersWrapper.cpp":48:37 74 {*movdi_internal}
     (nil))
;;  succ:       4 [always]  count:159987528 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [85.1% (guessed)]  count:913754296 (estimated locally)
;;              3 [always]  count:159987528 (estimated locally) (FALLTHRU)
(code_label 13 4 14 4 20 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 19 4 (set (reg/f:DI 83 [ <retval> ])
        (reg/v/f:DI 84 [ object ])) "src/ChineseCheckersWrapper.cpp":48:48 74 {*movdi_internal}
     (nil))
(insn 19 15 20 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 83 [ <retval> ])) "src/ChineseCheckersWrapper.cpp":49:3 74 {*movdi_internal}
     (nil))
(insn 20 19 0 4 (use (reg/i:DI 0 ax)) "src/ChineseCheckersWrapper.cpp":49:3 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::expected_from_python_type_direct<ChineseCheckers>::get_pytype (_ZN5boost6python9converter32expected_from_python_type_directI15ChineseCheckersE10get_pytypeEv, funcdef_no=12830, decl_uid=298799, cgraph_uid=4741, symbol_order=5666)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/pytype_function.hpp":106:67 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (mem/f/c:DI (reg/f:DI 84) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/pytype_function.hpp":106:67 74 {*movdi_internal}
     (nil))
(call_insn/j 7 6 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>) [0 expected_from_python_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":106:67 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::~sp_counted_impl_pd (_ZN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEED2Ev, funcdef_no=13403, decl_uid=305846, cgraph_uid=5314, symbol_order=6246)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE")  <var_decl 0x7f1a3559a3f0 _ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE")  <var_decl 0x7f1a3559a3f0 _ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_3(D)->D.305869._vptr.sp_counted_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 83 [ this ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 210 {*adddi_1}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 86)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 74 {*movdi_internal}
     (nil))
(call_insn/j 11 10 0 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::~sp_counted_impl_pd (_ZN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEED0Ev, funcdef_no=13405, decl_uid=305840, cgraph_uid=5316, symbol_order=6248)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE")  <var_decl 0x7f1a3559a3f0 _ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE")  <var_decl 0x7f1a3559a3f0 _ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_2(D)->D.305869._vptr.sp_counted_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 83 [ this ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 210 {*adddi_1}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 86)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 74 {*movdi_internal}
     (nil))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (const_int 32 [0x20])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 74 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 74 {*movdi_internal}
     (nil))
(call_insn/j 14 13 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":143:55 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function std::_Sp_counted_deleter<void*, boost::python::converter::shared_ptr_deleter, std::allocator<void>, __gnu_cxx::_S_atomic>::~_Sp_counted_deleter (_ZNSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EED2Ev, funcdef_no=13467, decl_uid=307549, cgraph_uid=5378, symbol_order=7105)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/c++/11/bits/shared_ptr_base.h":438:7 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE")  <var_decl 0x7f1a35649ea0 _ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE")  <var_decl 0x7f1a35649ea0 _ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_2(D)->D.307552._vptr._Sp_counted_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 83 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":394:12 210 {*adddi_1}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 86)) "/usr/include/c++/11/bits/shared_ptr_base.h":394:12 74 {*movdi_internal}
     (nil))
(call_insn/j 11 10 0 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":394:12 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function std::_Sp_counted_deleter<void*, boost::python::converter::shared_ptr_deleter, std::allocator<void>, __gnu_cxx::_S_atomic>::~_Sp_counted_deleter (_ZNSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev, funcdef_no=13469, decl_uid=307543, cgraph_uid=5380, symbol_order=7107)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/c++/11/bits/shared_ptr_base.h":438:7 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE")  <var_decl 0x7f1a35649ea0 _ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE")  <var_decl 0x7f1a35649ea0 _ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_2(D)->D.307552._vptr._Sp_counted_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 83 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":394:12 210 {*adddi_1}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 86)) "/usr/include/c++/11/bits/shared_ptr_base.h":394:12 74 {*movdi_internal}
     (nil))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":394:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (const_int 32 [0x20])) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 74 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 74 {*movdi_internal}
     (nil))
(call_insn/j 14 13 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::dispose (_ZN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEE7disposeEv, funcdef_no=13473, decl_uid=305827, cgraph_uid=5384, symbol_order=7111)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 84 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":167:10 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/f:DI (plus:DI (reg/f:DI 84 [ this ])
                (const_int 16 [0x10])) [43 this_3(D)->ptr+0 S8 A64])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":169:12 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 84 [ this ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":169:12 210 {*adddi_1}
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg:DI 85)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":169:12 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 86)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":169:12 74 {*movdi_internal}
     (nil))
(call_insn 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterclEPKv") [flags 0x41]  <function_decl 0x7f1a3a9fb200 operator()>) [0 operator() S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":169:12 813 {*call}
     (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterclEPKv") [flags 0x41]  <function_decl 0x7f1a3a9fb200 operator()>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function std::_Sp_counted_deleter<void*, boost::python::converter::shared_ptr_deleter, std::allocator<void>, __gnu_cxx::_S_atomic>::_M_dispose (_ZNSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, funcdef_no=13470, decl_uid=307438, cgraph_uid=5381, symbol_order=7108)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 84 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/c++/11/bits/shared_ptr_base.h":441:7 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/f:DI (plus:DI (reg/f:DI 84 [ this ])
                (const_int 24 [0x18])) [43 this_2(D)->_M_impl._M_ptr+0 S8 A64])) "/usr/include/c++/11/bits/shared_ptr_base.h":442:25 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 84 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":401:23 210 {*adddi_1}
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg:DI 85)) "/usr/include/c++/11/bits/shared_ptr_base.h":442:25 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 86)) "/usr/include/c++/11/bits/shared_ptr_base.h":442:25 74 {*movdi_internal}
     (nil))
(call_insn 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterclEPKv") [flags 0x41]  <function_decl 0x7f1a3a9fb200 operator()>) [0 operator() S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":442:25 813 {*call}
     (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterclEPKv") [flags 0x41]  <function_decl 0x7f1a3a9fb200 operator()>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::get_deleter (_ZN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEE11get_deleterERKSt9type_info, funcdef_no=13474, decl_uid=305829, cgraph_uid=5385, symbol_order=7112)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/f:DI 86 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":172:12 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 87 [ ti ])
        (reg:DI 4 si [ ti ])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":172:12 74 {*movdi_internal}
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg/f:DI 82 [ _7 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ ti ])
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)ti_4(D)].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":122:16 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 89)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSN5boost6python9converter18shared_ptr_deleterE")  <var_decl 0x7f1a34d67120 _ZTSN5boost6python9converter18shared_ptr_deleterE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":123:8 74 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 88)
        (reg:DI 89)) "/usr/include/c++/11/typeinfo":123:8 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSN5boost6python9converter18shared_ptr_deleterE")  <var_decl 0x7f1a34d67120 _ZTSN5boost6python9converter18shared_ptr_deleterE>)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _7 ])
            (reg:DI 88))) "/usr/include/c++/11/typeinfo":123:8 12 {*cmpdi_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "/usr/include/c++/11/typeinfo":123:8 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 27)
;;  succ:       5 [30.0% (guessed)]  count:322122544 (estimated locally)
;;              3 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 82 [ _7 ]) [0 *_7+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":123:8 9 {*cmpqi_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) "/usr/include/c++/11/typeinfo":123:8 806 {*jcc}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 41)
;;  succ:       4 [66.0% (guessed)]  count:496068723 (estimated locally) (FALLTHRU)
;;              6 [34.0% (guessed)]  count:255550558 (estimated locally)

;; basic block 4, loop depth 0, count 496068722 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [66.0% (guessed)]  count:496068723 (estimated locally) (FALLTHRU)
(note 17 16 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 17 20 4 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSN5boost6python9converter18shared_ptr_deleterE")  <var_decl 0x7f1a34d67120 _ZTSN5boost6python9converter18shared_ptr_deleterE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":124:22 74 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:DI 91)
        (reg:DI 92)) "/usr/include/c++/11/typeinfo":124:22 74 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:DI 4 si)
        (reg:DI 91)) "/usr/include/c++/11/typeinfo":124:22 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSN5boost6python9converter18shared_ptr_deleterE")  <var_decl 0x7f1a34d67120 _ZTSN5boost6python9converter18shared_ptr_deleterE>)
        (nil)))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _7 ])) "/usr/include/c++/11/typeinfo":124:22 74 {*movdi_internal}
     (nil))
(call_insn/i 23 22 24 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f1a518a3000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/typeinfo":124:22 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f1a518a3000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 23 25 4 (set (reg:SI 84 [ _10 ])
        (reg:SI 0 ax)) "/usr/include/c++/11/typeinfo":124:22 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _10 ])
            (const_int 0 [0]))) "/usr/include/c++/11/typeinfo":123:29 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 45)
            (pc))) "/usr/include/c++/11/typeinfo":123:29 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 45)
;;  succ:       5 [50.0% (guessed)]  count:248034361 (estimated locally) (FALLTHRU)
;;              7 [50.0% (guessed)]  count:248034361 (estimated locally)

;; basic block 5, loop depth 0, count 762356697 (estimated locally), maybe hot
;; Invalid sum of incoming counts 570156905 (estimated locally), should be 762356697 (estimated locally)
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [50.0% (guessed)]  count:248034361 (estimated locally) (FALLTHRU)
;;              2 [30.0% (guessed)]  count:322122544 (estimated locally)
(code_label 27 26 28 5 34 (nil) [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 41 5 (parallel [
            (set (reg/f:DI 85 [ <retval> ])
                (plus:DI (reg/f:DI 86 [ this ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":174:41 210 {*adddi_1}
     (nil))
;;  succ:       8 [always]  count:762356697 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 255550558 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       3 [34.0% (guessed)]  count:255550558 (estimated locally)
(code_label 41 29 40 6 36 (nil) [1 uses])
(note 40 41 6 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 6 40 45 6 (set (reg/f:DI 85 [ <retval> ])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":174:41 74 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:255550558 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 248034361 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       4 [50.0% (guessed)]  count:248034361 (estimated locally)
(code_label 45 6 44 7 37 (nil) [1 uses])
(note 44 45 5 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 5 44 34 7 (set (reg/f:DI 85 [ <retval> ])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":174:41 74 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:248034361 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 1073741824 (estimated locally), maybe hot
;; Invalid sum of incoming counts 1265941616 (estimated locally), should be 1073741824 (estimated locally)
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 [always]  count:248034361 (estimated locally) (FALLTHRU)
;;              5 [always]  count:762356697 (estimated locally) (FALLTHRU)
;;              6 [always]  count:255550558 (estimated locally) (FALLTHRU)
(code_label 34 5 37 8 33 (nil) [0 uses])
(note 37 34 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 37 36 8 (set (reg/i:DI 0 ax)
        (reg/f:DI 85 [ <retval> ])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":175:5 74 {*movdi_internal}
     (nil))
(insn 36 35 0 8 (use (reg/i:DI 0 ax)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":175:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::shared_ptr_from_python<ChineseCheckers, boost::shared_ptr>::convertible (_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersNS_10shared_ptrEE11convertibleEP7_object, funcdef_no=12824, decl_uid=296463, cgraph_uid=4735, symbol_order=5660)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 84 [ p ])
        (reg:DI 5 di [ p ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":36:16 74 {*movdi_internal}
     (nil))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg:DI 86)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":38:5 74 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 85)
        (reg:DI 86)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":38:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
        (nil)))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 84 [ p ])
            (reg:DI 85))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":38:5 12 {*cmpdi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":38:5 806 {*jcc}
     (int_list:REG_BR_PROB 332323100 (nil))
 -> 18)
;;  succ:       4 [31.0% (guessed)]  count:332323096 (estimated locally)
;;              3 [69.0% (guessed)]  count:741418728 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 741418729 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [69.0% (guessed)]  count:741418728 (estimated locally) (FALLTHRU)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:DI 87)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":41:45 74 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 87) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":41:45 74 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 5 di)
        (reg/v/f:DI 84 [ p ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":41:45 74 {*movdi_internal}
     (nil))
(call_insn/j 15 14 18 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>) [0 get_lvalue_from_python S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":41:45 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:741418729 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 332323095 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [31.0% (guessed)]  count:332323096 (estimated locally)
(code_label 18 15 19 4 40 (nil) [1 uses])
(note 19 18 4 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 4 19 23 4 (set (reg/f:DI 83 [ <retval> ])
        (reg/v/f:DI 84 [ p ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":39:14 74 {*movdi_internal}
     (nil))
(insn 23 4 24 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":42:3 74 {*movdi_internal}
     (nil))
(insn 24 23 0 4 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":42:3 -1
     (nil))
;;  succ:       EXIT [always]  count:332323095 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::shared_ptr_from_python<ChineseCheckers, std::shared_ptr>::convertible (_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersSt10shared_ptrE11convertibleEP7_object, funcdef_no=12831, decl_uid=296508, cgraph_uid=4742, symbol_order=5667)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 84 [ p ])
        (reg:DI 5 di [ p ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":36:16 74 {*movdi_internal}
     (nil))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg:DI 86)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":38:5 74 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 85)
        (reg:DI 86)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":38:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
        (nil)))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 84 [ p ])
            (reg:DI 85))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":38:5 12 {*cmpdi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":38:5 806 {*jcc}
     (int_list:REG_BR_PROB 332323100 (nil))
 -> 18)
;;  succ:       4 [31.0% (guessed)]  count:332323096 (estimated locally)
;;              3 [69.0% (guessed)]  count:741418728 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 741418729 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [69.0% (guessed)]  count:741418728 (estimated locally) (FALLTHRU)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:DI 87)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":41:45 74 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 87) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":41:45 74 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 5 di)
        (reg/v/f:DI 84 [ p ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":41:45 74 {*movdi_internal}
     (nil))
(call_insn/j 15 14 18 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>) [0 get_lvalue_from_python S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":41:45 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:741418729 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 332323095 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [31.0% (guessed)]  count:332323096 (estimated locally)
(code_label 18 15 19 4 42 (nil) [1 uses])
(note 19 18 4 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 4 19 23 4 (set (reg/f:DI 83 [ <retval> ])
        (reg/v/f:DI 84 [ p ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":39:14 74 {*movdi_internal}
     (nil))
(insn 23 4 24 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":42:3 74 {*movdi_internal}
     (nil))
(insn 24 23 0 4 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":42:3 -1
     (nil))
;;  succ:       EXIT [always]  count:332323095 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::value_holder<ChineseCheckers>::holds (_ZN5boost6python7objects12value_holderI15ChineseCheckersE5holdsENS0_9type_infoEb, funcdef_no=13495, decl_uid=281168, cgraph_uid=5406, symbol_order=7133)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/f:DI 86 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/value_holder.hpp":85:7 74 {*movdi_internal}
     (nil))
(insn 3 2 6 2 (set (reg/v:DI 87 [ dst_t ])
        (reg:DI 4 si [ dst_t ])) "/usr/include/boost/python/object/value_holder.hpp":85:7 74 {*movdi_internal}
     (nil))
(note 6 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 11 2 (parallel [
            (set (reg/f:DI 85 [ <retval> ])
                (plus:DI (reg/f:DI 86 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object/value_holder.hpp":87:89 210 {*adddi_1}
     (nil))
(insn 11 9 12 2 (set (reg:DI 4 si)
        (reg/v:DI 87 [ dst_t ])) "/usr/include/boost/python/type_id.hpp":137:24 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":137:24 74 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 91)
        (reg:DI 92)) "/usr/include/boost/python/type_id.hpp":137:24 74 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) "/usr/include/boost/python/type_id.hpp":137:24 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(call_insn/i 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f1a518a3100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":137:24 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f1a518a3100 strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 2 (set (reg:SI 82 [ _7 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/type_id.hpp":137:24 75 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _7 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object/value_holder.hpp":91:27 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 32)
            (pc))) "/usr/include/boost/python/object/value_holder.hpp":91:27 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 32)
;;  succ:       4 [67.0% (guessed)]  count:719407024 (estimated locally)
;;              3 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg:DI 93)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/value_holder.hpp":92:27 74 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg/v:DI 84 [ src_t ])
        (reg:DI 93)) "/usr/include/boost/python/object/value_holder.hpp":92:27 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 1 dx)
        (reg/v:DI 87 [ dst_t ])) "/usr/include/boost/python/object/value_holder.hpp":92:27 74 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 4 si)
        (reg/v:DI 84 [ src_t ])) "/usr/include/boost/python/object/value_holder.hpp":92:27 74 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (reg/f:DI 85 [ <retval> ])) "/usr/include/boost/python/object/value_holder.hpp":92:27 74 {*movdi_internal}
     (nil))
(call_insn/j 25 24 32 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects16find_static_typeEPvNS0_9type_infoES3_") [flags 0x41]  <function_decl 0x7f1a3ab70d00 find_static_type>) [0 find_static_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/value_holder.hpp":92:27 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects16find_static_typeEPvNS0_9type_infoES3_") [flags 0x41]  <function_decl 0x7f1a3ab70d00 find_static_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [always]  count:354334800 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 719407024 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [67.0% (guessed)]  count:719407024 (estimated locally)
(code_label 32 25 35 4 43 (nil) [1 uses])
(note 35 32 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 35 34 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 85 [ <retval> ])) "/usr/include/boost/python/object/value_holder.hpp":93:1 74 {*movdi_internal}
     (nil))
(insn 34 33 0 4 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/object/value_holder.hpp":93:1 -1
     (nil))
;;  succ:       EXIT [always]  count:719407024 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::make_holder<0>::apply<boost::python::objects::value_holder<ChineseCheckers>, boost::mpl::vector0<mpl_::na> >::execute (_ZN5boost6python7objects11make_holderILi0EE5applyINS1_12value_holderI15ChineseCheckersEENS_3mpl7vector0IN4mpl_2naEEEE7executeEP7_object, funcdef_no=13035, decl_uid=305426, cgraph_uid=4946, symbol_order=5872)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ p ])
        (reg:DI 5 di [ p ])) "/usr/include/boost/python/object/make_holder.hpp":82:21 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 1 dx)
        (const_int 144 [0x90])) "/usr/include/boost/python/object/make_holder.hpp":92:44 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (const_int 48 [0x30])) "/usr/include/boost/python/object/make_holder.hpp":92:44 74 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ p ])) "/usr/include/boost/python/object/make_holder.hpp":92:44 74 {*movdi_internal}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python15instance_holder8allocateEP7_objectmm") [flags 0x41]  <function_decl 0x7f1a3ab70400 allocate>) [0 allocate S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/make_holder.hpp":92:44 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python15instance_holder8allocateEP7_objectmm") [flags 0x41]  <function_decl 0x7f1a3ab70400 allocate>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 10 9 11 2 (set (reg/f:DI 83 [ _6 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/object/make_holder.hpp":92:44 74 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 84 [ _13 ])
        (reg/f:DI 83 [ _6 ])) "/usr/include/boost/python/object/value_holder.hpp":133:13 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _13 ])) "/usr/include/boost/python/object/value_holder.hpp":133:13 74 {*movdi_internal}
     (nil))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python15instance_holderC2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70700 __ct_base >) [0 __ct_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/value_holder.hpp":133:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python15instance_holderC2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70700 __ct_base >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              7 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 3, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:DI 89)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE")  <var_decl 0x7f1a3642d900 _ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/value_holder.hpp":133:13 74 {*movdi_internal}
     (nil))
(insn 16 15 17 3 (set (reg/f:DI 88)
        (plus:DI (reg:DI 89)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/value_holder.hpp":133:13 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE")  <var_decl 0x7f1a3642d900 _ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 17 16 18 3 (set (mem/f:DI (reg/f:DI 83 [ _6 ]) [5 MEM[(struct value_holder *)_6].D.281570._vptr.instance_holder+0 S8 A64])
        (reg/f:DI 88)) "/usr/include/boost/python/object/value_holder.hpp":133:13 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 83 [ _6 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object/value_holder.hpp":131:11 210 {*adddi_1}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (reg:DI 90)) "/usr/include/boost/python/object/value_holder.hpp":131:11 74 {*movdi_internal}
     (nil))
(call_insn 20 19 64 3 (call (mem:QI (symbol_ref:DI ("_ZN15ChineseCheckersC1Ev") [flags 0x41]  <function_decl 0x7f1a37307700 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/value_holder.hpp":131:11 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN15ChineseCheckersC1Ev") [flags 0x41]  <function_decl 0x7f1a37307700 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 [always (adjusted)]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 0 (precise), probably never executed
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 64 20 67 4 54 (nil) [1 uses])
(note 67 64 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 65 67 23 4 (set (reg:DI 92)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/value_holder.hpp":136:5 74 {*movdi_internal}
     (nil))
;;  succ:       5 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 5, loop depth 0, count 0 (precise), probably never executed
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 23 65 24 5 49 (nil) [0 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _13 ])) "/usr/include/boost/python/object/value_holder.hpp":136:5 74 {*movdi_internal}
     (nil))
(call_insn 26 25 27 5 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python15instance_holderD2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70a00 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/value_holder.hpp":136:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python15instance_holderD2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70a00 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 32 5 (set (reg:DI 91)
        (reg:DI 92)) 74 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:0 (precise) (FALLTHRU)

;; basic block 6, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       3 [always (adjusted)]  count:1073741824 (estimated locally) (FALLTHRU)
(note 32 27 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:DI 4 si)
        (reg/v/f:DI 87 [ p ])) "/usr/include/boost/python/object/make_holder.hpp":95:90 74 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _13 ])) "/usr/include/boost/python/object/make_holder.hpp":95:90 74 {*movdi_internal}
     (nil))
(call_insn/j 35 34 57 6 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python15instance_holder7installEP7_object") [flags 0x41]  <function_decl 0x7f1a3ab70300 install>) [0 install S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/make_holder.hpp":95:90 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python15instance_holder7installEP7_object") [flags 0x41]  <function_decl 0x7f1a3ab70300 install>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 7, loop depth 0, count 0 (precise), probably never executed
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       2 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 57 35 60 7 52 (nil) [1 uses])
(note 60 57 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 60 37 7 (set (reg:DI 91)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/make_holder.hpp":97:13 74 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 8, loop depth 0, count 0 (precise), probably never executed
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       5 [always]  count:0 (precise) (FALLTHRU)
;;              7 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 37 58 38 8 50 (nil) [0 uses])
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg/f:DI 82 [ _2 ])
        (reg:DI 91)) "/usr/include/boost/python/object/make_holder.hpp":97:13 74 {*movdi_internal}
     (nil))
(insn 40 39 41 8 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _2 ])) "/usr/include/boost/python/object/make_holder.hpp":97:13 74 {*movdi_internal}
     (nil))
(call_insn 41 40 42 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/make_holder.hpp":97:13 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 8 (set (reg:DI 4 si)
        (reg/f:DI 83 [ _6 ])) "/usr/include/boost/python/object/make_holder.hpp":98:35 74 {*movdi_internal}
     (nil))
(insn 43 42 44 8 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ p ])) "/usr/include/boost/python/object/make_holder.hpp":98:35 74 {*movdi_internal}
     (nil))
(call_insn 44 43 45 8 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python15instance_holder10deallocateEP7_objectPv") [flags 0x41]  <function_decl 0x7f1a3ab70500 deallocate>) [0 deallocate S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/make_holder.hpp":98:35 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python15instance_holder10deallocateEP7_objectPv") [flags 0x41]  <function_decl 0x7f1a3ab70500 deallocate>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(call_insn 45 44 61 8 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/make_holder.hpp":99:17 813 {*call}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       9 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 9, loop depth 0, count 0 (precise), probably never executed
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 61 45 63 9 53 (nil) [1 uses])
(note 63 61 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 62 63 47 9 (set (reg:DI 95)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/make_holder.hpp":97:13 74 {*movdi_internal}
     (nil))
;;  succ:       10 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 10, loop depth 0, count 0 (precise), probably never executed
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 47 62 48 10 51 (nil) [0 uses])
(note 48 47 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 49 48 50 10 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/make_holder.hpp":97:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int -5 [0xfffffffffffffffb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 50 49 51 10 (set (reg/f:DI 86 [ D.328901 ])
        (reg:DI 95)) 74 {*movdi_internal}
     (nil))
(insn 51 50 52 10 (set (reg:DI 5 di)
        (reg/f:DI 86 [ D.328901 ])) 74 {*movdi_internal}
     (nil))
(call_insn 52 51 0 10 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<void (*)(_object*), boost::python::default_call_policies, boost::mpl::vector2<void, _object*> > >::signature (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEE9signatureEv, funcdef_no=13465, decl_uid=308081, cgraph_uid=5376, symbol_order=7103)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 89 -> 108 109
; Splitting reg 90 -> 110 111
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result")  <var_decl 0x7f1a34ffd7e0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:QI 83 [ _6 ])
        (mem/v:QI (reg/f:DI 92) [-1  S1 A64])) "/usr/include/boost/python/detail/signature.hpp":77:44 77 {*movqi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/signature.hpp":77:44 835 {*memory_blockage}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _6 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 10 9 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 14)
;;  succ:       3 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              9 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 14 10 15 3 58 (nil) [1 uses])
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 94)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result")  <var_decl 0x7f1a34ffd7e0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 93)
        (reg:DI 94)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 93)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result")  <var_decl 0x7f1a34ffd7e0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result>)
        (nil)))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 22 3 (set (reg:SI 84 [ _7 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 75 {*movsi_internal}
     (nil))
(insn 22 20 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _7 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 51)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 51)
;;  succ:       4 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
;;              9 [50.0% (guessed)]  count:177167400 (estimated locally)

;; basic block 4, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/f:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIPv") [flags 0x40]  <var_decl 0x7f1a3ab6a7e0 _ZTIPv>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 85 [ _8 ])
        (mem/u/f/c:DI (plus:DI (reg/f:DI 95)
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)&_ZTIPv].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 85 [ _8 ]) [0 *_8+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":100:31 9 {*cmpqi_1}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/c++/11/typeinfo":100:31 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 31)
;;  succ:       5 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
;;              6 [66.0% (guessed)]  count:116930483 (estimated locally)

;; basic block 5, loop depth 0, count 60236917 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 85 [ _8 ])
                (plus:DI (reg/f:DI 85 [ _8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/typeinfo":100:31 210 {*adddi_1}
     (nil))
;;  succ:       6 [always]  count:60236917 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [66.0% (guessed)]  count:116930483 (estimated locally)
;;              5 [always]  count:60236917 (estimated locally) (FALLTHRU)
(code_label 31 30 32 6 61 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _8 ])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(call_insn 34 33 74 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 74 34 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 74 37 7 (set (reg/f:DI 87 [ _12 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 37 35 38 7 (set (reg/f:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result")  <var_decl 0x7f1a34ffd1b0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 38 37 39 7 (set (mem/f/c:DI (reg/f:DI 96) [6 result[0].basename+0 S8 A128])
        (reg/f:DI 87 [ _12 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 39 38 40 7 (set (reg:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSP7_object")  <var_decl 0x7f1a34d67090 _ZTSP7_object>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 40 39 41 7 (set (reg:DI 97)
        (reg:DI 98)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:DI 5 di)
        (reg:DI 97)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSP7_object")  <var_decl 0x7f1a34d67090 _ZTSP7_object>)
        (nil)))
(call_insn 42 41 75 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 75 42 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 75 45 8 (set (reg/f:DI 88 [ _13 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 45 43 46 8 (set (reg/f:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result")  <var_decl 0x7f1a34ffd1b0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 46 45 47 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 99)
                (const_int 24 [0x18])) [6 result[1].basename+0 S8 A64])
        (reg/f:DI 88 [ _13 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 47 46 48 8 (set (reg:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result")  <var_decl 0x7f1a34ffd7e0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 48 47 49 8 (set (reg:DI 100)
        (reg:DI 101)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 49 48 50 8 (set (reg:DI 5 di)
        (reg:DI 100)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result")  <var_decl 0x7f1a34ffd7e0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result>)
        (nil)))
(call_insn 50 49 51 8 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 [always]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       2 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              8 [always]  count:177167400 (estimated locally) (FALLTHRU)
;;              3 [50.0% (guessed)]  count:177167400 (estimated locally)
(code_label 51 50 52 9 59 (nil) [1 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result")  <var_decl 0x7f1a34ffd1b0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 54 53 55 9 (set (reg:DI 108 [ D.320528 ])
        (reg:DI 102)) 74 {*movdi_internal}
     (nil))
(insn 55 54 56 9 (set (reg:DI 103)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IvP7_objectEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a34ffd990 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 56 55 79 9 (set (reg:DI 109 [ D.320528+8 ])
        (reg:DI 103)) 74 {*movdi_internal}
     (nil))
(insn 79 56 80 9 (set (reg:DI 110 [ <retval> ])
        (reg:DI 108 [ D.320528 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
(insn 80 79 76 9 (set (reg:DI 111 [ <retval>+8 ])
        (reg:DI 109 [ D.320528+8 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
;;  succ:       12 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 0, count 0 (precise), probably never executed
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       6 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 76 80 78 10 63 (nil) [1 uses])
(note 78 76 77 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 77 78 60 10 (set (reg:DI 107)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
;;  succ:       11 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 11, loop depth 0, count 0 (precise), probably never executed
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 60 77 61 11 62 (nil) [0 uses])
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 11 (set (reg:DI 106)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result")  <var_decl 0x7f1a34ffd7e0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 63 62 64 11 (set (reg:DI 105)
        (reg:DI 106)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 64 63 65 11 (set (reg:DI 5 di)
        (reg:DI 105)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result")  <var_decl 0x7f1a34ffd7e0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvP7_objectEEE8elementsEvE6result>)
        (nil)))
(call_insn 65 64 66 11 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 66 65 67 11 (set (reg/f:DI 82 [ D.328909 ])
        (reg:DI 107)) 74 {*movdi_internal}
     (nil))
(insn 67 66 68 11 (set (reg:DI 5 di)
        (reg/f:DI 82 [ D.328909 ])) 74 {*movdi_internal}
     (nil))
(call_insn 68 67 73 11 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 12, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 11, next block 1, flags: (RTL)
;;  pred:       9 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 73 68 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 73 82 12 (set (reg:DI 0 ax)
        (reg:DI 110 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 82 81 72 12 (set (reg:DI 1 dx [+8 ])
        (reg:DI 111 [ <retval>+8 ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 72 82 0 12 (use (reg/i:TI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":49:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<int, ChineseCheckers&> > >::signature (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEE9signatureEv, funcdef_no=13479, decl_uid=294582, cgraph_uid=5390, symbol_order=7117)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 95 -> 124 125
; Splitting reg 96 -> 126 127
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:QI 88 [ _15 ])
        (mem/v:QI (reg/f:DI 98) [-1  S1 A64])) "/usr/include/boost/python/detail/signature.hpp":77:44 77 {*movqi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/signature.hpp":77:44 835 {*memory_blockage}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ _15 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 10 9 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 14)
;;  succ:       3 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              9 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 14 10 15 3 71 (nil) [1 uses])
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 100)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 99)
        (reg:DI 100)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 99)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 22 3 (set (reg:SI 89 [ _16 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 75 {*movsi_internal}
     (nil))
(insn 22 20 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _16 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 51)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 51)
;;  succ:       4 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
;;              9 [50.0% (guessed)]  count:177167400 (estimated locally)

;; basic block 4, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/f:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIi") [flags 0x40]  <var_decl 0x7f1a355db6c0 _ZTIi>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 90 [ _17 ])
        (mem/u/f/c:DI (plus:DI (reg/f:DI 101)
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)&_ZTIi].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 90 [ _17 ]) [0 *_17+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":100:31 9 {*cmpqi_1}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/c++/11/typeinfo":100:31 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 31)
;;  succ:       5 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
;;              6 [66.0% (guessed)]  count:116930483 (estimated locally)

;; basic block 5, loop depth 0, count 60236917 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 90 [ _17 ])
                (plus:DI (reg/f:DI 90 [ _17 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/typeinfo":100:31 210 {*adddi_1}
     (nil))
;;  succ:       6 [always]  count:60236917 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [66.0% (guessed)]  count:116930483 (estimated locally)
;;              5 [always]  count:60236917 (estimated locally) (FALLTHRU)
(code_label 31 30 32 6 74 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _17 ])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(call_insn 34 33 123 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 123 34 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 123 37 7 (set (reg/f:DI 92 [ _21 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 37 35 38 7 (set (reg/f:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a34ffdbd0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 38 37 39 7 (set (mem/f/c:DI (reg/f:DI 102) [6 result[0].basename+0 S8 A128])
        (reg/f:DI 92 [ _21 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 39 38 40 7 (set (reg:DI 104)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 40 39 41 7 (set (reg:DI 103)
        (reg:DI 104)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:DI 5 di)
        (reg:DI 103)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(call_insn 42 41 124 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 124 42 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 124 45 8 (set (reg/f:DI 93 [ _22 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 45 43 46 8 (set (reg/f:DI 105)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a34ffdbd0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 46 45 47 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 105)
                (const_int 24 [0x18])) [6 result[1].basename+0 S8 A64])
        (reg/f:DI 93 [ _22 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 47 46 48 8 (set (reg:DI 107)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 48 47 49 8 (set (reg:DI 106)
        (reg:DI 107)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 49 48 50 8 (set (reg:DI 5 di)
        (reg:DI 106)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 50 49 51 8 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 [always]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       2 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              8 [always]  count:177167400 (estimated locally) (FALLTHRU)
;;              3 [50.0% (guessed)]  count:177167400 (estimated locally)
(code_label 51 50 52 9 72 (nil) [1 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg/f:DI 108)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a350293f0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 54 53 55 9 (set (reg:QI 83 [ _8 ])
        (mem/v:QI (reg/f:DI 108) [-1  S1 A64])) "/usr/include/boost/python/detail/caller.hpp":120:36 77 {*movqi_internal}
     (nil))
(insn 55 54 56 9 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/caller.hpp":120:36 835 {*memory_blockage}
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _8 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 57 56 129 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":120:36 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 71)
;;  succ:       12 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              17 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 0, count 0 (precise), probably never executed
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       6 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 129 57 131 10 82 (nil) [1 uses])
(note 131 129 130 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 130 131 61 10 (set (reg:DI 111)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
;;  succ:       11 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 11, loop depth 0, count 0 (precise), probably never executed
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 61 130 62 11 77 (nil) [0 uses])
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 11 (set (reg:DI 110)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 64 63 65 11 (set (reg:DI 109)
        (reg:DI 110)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 65 64 66 11 (set (reg:DI 5 di)
        (reg:DI 109)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 66 65 67 11 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 67 66 68 11 (set (reg/f:DI 94 [ D.328921 ])
        (reg:DI 111)) 74 {*movdi_internal}
     (nil))
(insn 68 67 69 11 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.328921 ])) 74 {*movdi_internal}
     (nil))
(call_insn 69 68 71 11 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 12, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       9 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 71 69 72 12 75 (nil) [1 uses])
(note 72 71 73 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 12 (set (reg:DI 113)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a350293f0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 74 73 75 12 (set (reg:DI 112)
        (reg:DI 113)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 75 74 76 12 (set (reg:DI 5 di)
        (reg:DI 112)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a350293f0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 76 75 77 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 77 76 79 12 (set (reg:SI 84 [ _9 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":120:36 75 {*movsi_internal}
     (nil))
(insn 79 77 80 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _9 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 80 79 81 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 100)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":120:36 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 100)
;;  succ:       13 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
;;              17 [50.0% (guessed)]  count:177167400 (estimated locally)

;; basic block 13, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 13 (set (reg/f:DI 114)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIi") [flags 0x40]  <var_decl 0x7f1a355db6c0 _ZTIi>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 83 82 84 13 (set (reg/f:DI 85 [ _10 ])
        (mem/u/f/c:DI (plus:DI (reg/f:DI 114)
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)&_ZTIi].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 84 83 85 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 85 [ _10 ]) [0 *_10+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":100:31 9 {*cmpqi_1}
     (nil))
(jump_insn 85 84 86 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "/usr/include/c++/11/typeinfo":100:31 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 88)
;;  succ:       14 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
;;              15 [66.0% (guessed)]  count:116930483 (estimated locally)

;; basic block 14, loop depth 0, count 60236917 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
(note 86 85 87 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 14 (parallel [
            (set (reg/f:DI 85 [ _10 ])
                (plus:DI (reg/f:DI 85 [ _10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/typeinfo":100:31 210 {*adddi_1}
     (nil))
;;  succ:       15 [always]  count:60236917 (estimated locally) (FALLTHRU)

;; basic block 15, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       13 [66.0% (guessed)]  count:116930483 (estimated locally)
;;              14 [always]  count:60236917 (estimated locally) (FALLTHRU)
(code_label 88 87 89 15 79 (nil) [1 uses])
(note 89 88 90 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 15 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _10 ])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(call_insn 91 90 125 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       18 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 125 91 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 92 125 94 16 (set (reg/f:DI 87 [ _14 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 94 92 95 16 (set (reg/f:DI 115)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a350291b0 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 95 94 96 16 (set (mem/f/c:DI (reg/f:DI 115) [6 ret.basename+0 S8 A64])
        (reg/f:DI 87 [ _14 ])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 96 95 97 16 (set (reg:DI 117)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a350293f0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 97 96 98 16 (set (reg:DI 116)
        (reg:DI 117)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 98 97 99 16 (set (reg:DI 5 di)
        (reg:DI 116)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a350293f0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 99 98 100 16 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":120:36 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       17 [always]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 17, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       9 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              16 [always]  count:177167400 (estimated locally) (FALLTHRU)
;;              12 [50.0% (guessed)]  count:177167400 (estimated locally)
(code_label 100 99 101 17 76 (nil) [1 uses])
(note 101 100 102 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 17 (set (reg:DI 118)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IiR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a34ffdbd0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 103 102 104 17 (set (reg:DI 124 [ D.320686 ])
        (reg:DI 118)) 74 {*movdi_internal}
     (nil))
(insn 104 103 105 17 (set (reg:DI 119)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a350291b0 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 105 104 132 17 (set (reg:DI 125 [ D.320686+8 ])
        (reg:DI 119)) 74 {*movdi_internal}
     (nil))
(insn 132 105 133 17 (set (reg:DI 126 [ <retval> ])
        (reg:DI 124 [ D.320686 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
(insn 133 132 126 17 (set (reg:DI 127 [ <retval>+8 ])
        (reg:DI 125 [ D.320686+8 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
;;  succ:       20 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 0, count 0 (precise), probably never executed
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       15 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 126 133 128 18 81 (nil) [1 uses])
(note 128 126 127 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 127 128 109 18 (set (reg:DI 123)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
;;  succ:       19 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 19, loop depth 0, count 0 (precise), probably never executed
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 109 127 110 19 80 (nil) [0 uses])
(note 110 109 111 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 19 (set (reg:DI 122)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a350293f0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 112 111 113 19 (set (reg:DI 121)
        (reg:DI 122)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 113 112 114 19 (set (reg:DI 5 di)
        (reg:DI 121)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a350293f0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IiR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 114 113 115 19 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":120:36 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 115 114 116 19 (set (reg/f:DI 82 [ D.328922 ])
        (reg:DI 123)) 74 {*movdi_internal}
     (nil))
(insn 116 115 117 19 (set (reg:DI 5 di)
        (reg/f:DI 82 [ D.328922 ])) 74 {*movdi_internal}
     (nil))
(call_insn 117 116 122 19 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 20, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 19, next block 1, flags: (RTL)
;;  pred:       17 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 122 117 134 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 134 122 135 20 (set (reg:DI 0 ax)
        (reg:DI 126 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 135 134 121 20 (set (reg:DI 1 dx [+8 ])
        (reg:DI 127 [ <retval>+8 ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 121 135 0 20 (use (reg/i:TI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":49:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<std::vector<std::vector<std::vector<int> > > (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<std::vector<std::vector<std::vector<int> > >, ChineseCheckers&> > >::signature (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEE9signatureEv, funcdef_no=13482, decl_uid=294513, cgraph_uid=5393, symbol_order=7120)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 91 -> 122 123
; Splitting reg 92 -> 124 125
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 94)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029bd0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:QI 86 [ _11 ])
        (mem/v:QI (reg/f:DI 94) [-1  S1 A64])) "/usr/include/boost/python/detail/signature.hpp":77:44 77 {*movqi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/signature.hpp":77:44 835 {*memory_blockage}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ _11 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 10 9 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 14)
;;  succ:       3 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              7 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 14 10 15 3 95 (nil) [1 uses])
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029bd0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 95)
        (reg:DI 96)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 95)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029bd0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 22 3 (set (reg:SI 87 [ _12 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 75 {*movsi_internal}
     (nil))
(insn 22 20 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _12 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 45)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 45)
;;  succ:       4 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
;;              7 [67.0% (guessed)]  count:237404317 (estimated locally)

;; basic block 4, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE")  <var_decl 0x7f1a351562d0 _ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 97)
        (reg:DI 98)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg:DI 97)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE")  <var_decl 0x7f1a351562d0 _ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE>)
        (nil)))
(call_insn 28 27 111 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)
(note 111 28 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 111 31 5 (set (reg/f:DI 88 [ _13 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 31 29 32 5 (set (reg/f:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029630 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 32 31 33 5 (set (mem/f/c:DI (reg/f:DI 99) [6 result[0].basename+0 S8 A128])
        (reg/f:DI 88 [ _13 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:DI 100)
        (reg:DI 101)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:DI 5 di)
        (reg:DI 100)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(call_insn 36 35 112 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)
(note 112 36 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 112 39 6 (set (reg/f:DI 89 [ _14 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 39 37 40 6 (set (reg/f:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029630 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 40 39 41 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 102)
                (const_int 24 [0x18])) [6 result[1].basename+0 S8 A64])
        (reg/f:DI 89 [ _14 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:DI 104)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029bd0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:DI 103)
        (reg:DI 104)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:DI 5 di)
        (reg:DI 103)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029bd0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 44 43 45 6 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 [always]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       2 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              6 [always]  count:116930483 (estimated locally) (FALLTHRU)
;;              3 [67.0% (guessed)]  count:237404317 (estimated locally)
(code_label 45 44 46 7 96 (nil) [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg/f:DI 105)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35029f30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 48 47 49 7 (set (reg:QI 83 [ _8 ])
        (mem/v:QI (reg/f:DI 105) [-1  S1 A64])) "/usr/include/boost/python/detail/caller.hpp":120:36 77 {*movqi_internal}
     (nil))
(insn 49 48 50 7 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/caller.hpp":120:36 835 {*memory_blockage}
     (nil))
(insn 50 49 51 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _8 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 51 50 117 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":120:36 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 65)
;;  succ:       10 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              13 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 0 (precise), probably never executed
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       4 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 117 51 119 8 104 (nil) [1 uses])
(note 119 117 118 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 118 119 55 8 (set (reg:DI 108)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
;;  succ:       9 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 9, loop depth 0, count 0 (precise), probably never executed
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 55 118 56 9 100 (nil) [0 uses])
(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 9 (set (reg:DI 107)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029bd0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 58 57 59 9 (set (reg:DI 106)
        (reg:DI 107)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 59 58 60 9 (set (reg:DI 5 di)
        (reg:DI 106)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029bd0 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 60 59 61 9 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 62 9 (set (reg/f:DI 90 [ D.328935 ])
        (reg:DI 108)) 74 {*movdi_internal}
     (nil))
(insn 62 61 63 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.328935 ])) 74 {*movdi_internal}
     (nil))
(call_insn 63 62 65 9 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 10, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       7 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 65 63 66 10 98 (nil) [1 uses])
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (reg:DI 110)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35029f30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 68 67 69 10 (set (reg:DI 109)
        (reg:DI 110)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 69 68 70 10 (set (reg:DI 5 di)
        (reg:DI 109)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35029f30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 70 69 71 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 71 70 73 10 (set (reg:SI 84 [ _9 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":120:36 75 {*movsi_internal}
     (nil))
(insn 73 71 74 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _9 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 74 73 75 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 88)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":120:36 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 88)
;;  succ:       11 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
;;              13 [67.0% (guessed)]  count:237404317 (estimated locally)

;; basic block 11, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
(note 75 74 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 11 (set (reg:DI 112)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE")  <var_decl 0x7f1a351562d0 _ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 77 76 78 11 (set (reg:DI 111)
        (reg:DI 112)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 78 77 79 11 (set (reg:DI 5 di)
        (reg:DI 111)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE")  <var_decl 0x7f1a351562d0 _ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE>)
        (nil)))
(call_insn 79 78 113 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)
(note 113 79 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 113 82 12 (set (reg/f:DI 85 [ _10 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 82 80 83 12 (set (reg/f:DI 113)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35029d80 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 83 82 84 12 (set (mem/f/c:DI (reg/f:DI 113) [6 ret.basename+0 S8 A64])
        (reg/f:DI 85 [ _10 ])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 84 83 85 12 (set (reg:DI 115)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35029f30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 85 84 86 12 (set (reg:DI 114)
        (reg:DI 115)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 86 85 87 12 (set (reg:DI 5 di)
        (reg:DI 114)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35029f30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 87 86 88 12 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":120:36 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       13 [always]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       7 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              12 [always]  count:116930483 (estimated locally) (FALLTHRU)
;;              10 [67.0% (guessed)]  count:237404317 (estimated locally)
(code_label 88 87 89 13 99 (nil) [1 uses])
(note 89 88 90 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 13 (set (reg:DI 116)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_IS7_IiSaIiEESaIS9_EESaISB_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35029630 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 91 90 92 13 (set (reg:DI 122 [ D.320845 ])
        (reg:DI 116)) 74 {*movdi_internal}
     (nil))
(insn 92 91 93 13 (set (reg:DI 117)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35029d80 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 93 92 120 13 (set (reg:DI 123 [ D.320845+8 ])
        (reg:DI 117)) 74 {*movdi_internal}
     (nil))
(insn 120 93 121 13 (set (reg:DI 124 [ <retval> ])
        (reg:DI 122 [ D.320845 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
(insn 121 120 114 13 (set (reg:DI 125 [ <retval>+8 ])
        (reg:DI 123 [ D.320845+8 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
;;  succ:       16 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 0 (precise), probably never executed
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       11 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 114 121 116 14 103 (nil) [1 uses])
(note 116 114 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 115 116 97 14 (set (reg:DI 121)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
;;  succ:       15 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 15, loop depth 0, count 0 (precise), probably never executed
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 97 115 98 15 102 (nil) [0 uses])
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 15 (set (reg:DI 120)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35029f30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 100 99 101 15 (set (reg:DI 119)
        (reg:DI 120)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 101 100 102 15 (set (reg:DI 5 di)
        (reg:DI 119)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35029f30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 102 101 103 15 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":120:36 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 103 102 104 15 (set (reg/f:DI 82 [ D.328936 ])
        (reg:DI 121)) 74 {*movdi_internal}
     (nil))
(insn 104 103 105 15 (set (reg:DI 5 di)
        (reg/f:DI 82 [ D.328936 ])) 74 {*movdi_internal}
     (nil))
(call_insn 105 104 110 15 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 16, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 15, next block 1, flags: (RTL)
;;  pred:       13 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 110 105 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 122 110 123 16 (set (reg:DI 0 ax)
        (reg:DI 124 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 123 122 109 16 (set (reg:DI 1 dx [+8 ])
        (reg:DI 125 [ <retval>+8 ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 109 123 0 16 (use (reg/i:TI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":49:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<std::vector<std::vector<Color> > (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<std::vector<std::vector<Color> >, ChineseCheckers&> > >::signature (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEE9signatureEv, funcdef_no=13485, decl_uid=294444, cgraph_uid=5396, symbol_order=7123)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 91 -> 122 123
; Splitting reg 92 -> 124 125
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 94)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35046750 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:QI 86 [ _11 ])
        (mem/v:QI (reg/f:DI 94) [-1  S1 A64])) "/usr/include/boost/python/detail/signature.hpp":77:44 77 {*movqi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/signature.hpp":77:44 835 {*memory_blockage}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ _11 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 10 9 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 14)
;;  succ:       3 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              7 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 14 10 15 3 117 (nil) [1 uses])
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35046750 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 95)
        (reg:DI 96)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 95)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35046750 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 22 3 (set (reg:SI 87 [ _12 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 75 {*movsi_internal}
     (nil))
(insn 22 20 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _12 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 45)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 45)
;;  succ:       4 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
;;              7 [67.0% (guessed)]  count:237404317 (estimated locally)

;; basic block 4, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 97)
        (reg:DI 98)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg:DI 97)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
        (nil)))
(call_insn 28 27 111 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)
(note 111 28 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 111 31 5 (set (reg/f:DI 88 [ _13 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 31 29 32 5 (set (reg/f:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a350461b0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 32 31 33 5 (set (mem/f/c:DI (reg/f:DI 99) [6 result[0].basename+0 S8 A128])
        (reg/f:DI 88 [ _13 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:DI 100)
        (reg:DI 101)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:DI 5 di)
        (reg:DI 100)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(call_insn 36 35 112 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)
(note 112 36 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 112 39 6 (set (reg/f:DI 89 [ _14 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 39 37 40 6 (set (reg/f:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a350461b0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 40 39 41 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 102)
                (const_int 24 [0x18])) [6 result[1].basename+0 S8 A64])
        (reg/f:DI 89 [ _14 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:DI 104)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35046750 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:DI 103)
        (reg:DI 104)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:DI 5 di)
        (reg:DI 103)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35046750 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 44 43 45 6 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 [always]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       2 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              6 [always]  count:116930483 (estimated locally) (FALLTHRU)
;;              3 [67.0% (guessed)]  count:237404317 (estimated locally)
(code_label 45 44 46 7 118 (nil) [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg/f:DI 105)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35046ab0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 48 47 49 7 (set (reg:QI 83 [ _8 ])
        (mem/v:QI (reg/f:DI 105) [-1  S1 A64])) "/usr/include/boost/python/detail/caller.hpp":120:36 77 {*movqi_internal}
     (nil))
(insn 49 48 50 7 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/caller.hpp":120:36 835 {*memory_blockage}
     (nil))
(insn 50 49 51 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _8 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 51 50 117 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":120:36 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 65)
;;  succ:       10 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              13 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 0 (precise), probably never executed
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       4 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 117 51 119 8 126 (nil) [1 uses])
(note 119 117 118 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 118 119 55 8 (set (reg:DI 108)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
;;  succ:       9 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 9, loop depth 0, count 0 (precise), probably never executed
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 55 118 56 9 122 (nil) [0 uses])
(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 9 (set (reg:DI 107)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35046750 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 58 57 59 9 (set (reg:DI 106)
        (reg:DI 107)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 59 58 60 9 (set (reg:DI 5 di)
        (reg:DI 106)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35046750 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 60 59 61 9 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 62 9 (set (reg/f:DI 90 [ D.328948 ])
        (reg:DI 108)) 74 {*movdi_internal}
     (nil))
(insn 62 61 63 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.328948 ])) 74 {*movdi_internal}
     (nil))
(call_insn 63 62 65 9 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 10, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       7 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 65 63 66 10 120 (nil) [1 uses])
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (reg:DI 110)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35046ab0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 68 67 69 10 (set (reg:DI 109)
        (reg:DI 110)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 69 68 70 10 (set (reg:DI 5 di)
        (reg:DI 109)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35046ab0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 70 69 71 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 71 70 73 10 (set (reg:SI 84 [ _9 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":120:36 75 {*movsi_internal}
     (nil))
(insn 73 71 74 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _9 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 74 73 75 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 88)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":120:36 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 88)
;;  succ:       11 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
;;              13 [67.0% (guessed)]  count:237404317 (estimated locally)

;; basic block 11, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
(note 75 74 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 11 (set (reg:DI 112)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 77 76 78 11 (set (reg:DI 111)
        (reg:DI 112)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 78 77 79 11 (set (reg:DI 5 di)
        (reg:DI 111)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
        (nil)))
(call_insn 79 78 113 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)
(note 113 79 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 113 82 12 (set (reg/f:DI 85 [ _10 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 82 80 83 12 (set (reg/f:DI 113)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35046900 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 83 82 84 12 (set (mem/f/c:DI (reg/f:DI 113) [6 ret.basename+0 S8 A64])
        (reg/f:DI 85 [ _10 ])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 84 83 85 12 (set (reg:DI 115)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35046ab0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 85 84 86 12 (set (reg:DI 114)
        (reg:DI 115)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 86 85 87 12 (set (reg:DI 5 di)
        (reg:DI 114)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35046ab0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 87 86 88 12 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":120:36 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       13 [always]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       7 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              12 [always]  count:116930483 (estimated locally) (FALLTHRU)
;;              10 [67.0% (guessed)]  count:237404317 (estimated locally)
(code_label 88 87 89 13 121 (nil) [1 uses])
(note 89 88 90 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 13 (set (reg:DI 116)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2ISt6vectorIS7_I5ColorSaIS8_EESaISA_EER15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a350461b0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 91 90 92 13 (set (reg:DI 122 [ D.320971 ])
        (reg:DI 116)) 74 {*movdi_internal}
     (nil))
(insn 92 91 93 13 (set (reg:DI 117)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35046900 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 93 92 120 13 (set (reg:DI 123 [ D.320971+8 ])
        (reg:DI 117)) 74 {*movdi_internal}
     (nil))
(insn 120 93 121 13 (set (reg:DI 124 [ <retval> ])
        (reg:DI 122 [ D.320971 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
(insn 121 120 114 13 (set (reg:DI 125 [ <retval>+8 ])
        (reg:DI 123 [ D.320971+8 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
;;  succ:       16 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 0 (precise), probably never executed
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       11 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 114 121 116 14 125 (nil) [1 uses])
(note 116 114 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 115 116 97 14 (set (reg:DI 121)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
;;  succ:       15 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 15, loop depth 0, count 0 (precise), probably never executed
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 97 115 98 15 124 (nil) [0 uses])
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 15 (set (reg:DI 120)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35046ab0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 100 99 101 15 (set (reg:DI 119)
        (reg:DI 120)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 101 100 102 15 (set (reg:DI 5 di)
        (reg:DI 119)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a35046ab0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2ISt6vectorIS6_I5ColorSaIS7_EESaIS9_EER15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 102 101 103 15 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":120:36 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 103 102 104 15 (set (reg/f:DI 82 [ D.328949 ])
        (reg:DI 121)) 74 {*movdi_internal}
     (nil))
(insn 104 103 105 15 (set (reg:DI 5 di)
        (reg/f:DI 82 [ D.328949 ])) 74 {*movdi_internal}
     (nil))
(call_insn 105 104 110 15 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 16, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 15, next block 1, flags: (RTL)
;;  pred:       13 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 110 105 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 122 110 123 16 (set (reg:DI 0 ax)
        (reg:DI 124 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 123 122 109 16 (set (reg:DI 1 dx [+8 ])
        (reg:DI 125 [ <retval>+8 ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 109 123 0 16 (use (reg/i:TI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":49:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<void (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<void, ChineseCheckers&> > >::signature (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEE9signatureEv, funcdef_no=13488, decl_uid=294375, cgraph_uid=5399, symbol_order=7126)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 89 -> 108 109
; Splitting reg 90 -> 110 111
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:QI 83 [ _6 ])
        (mem/v:QI (reg/f:DI 92) [-1  S1 A64])) "/usr/include/boost/python/detail/signature.hpp":77:44 77 {*movqi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/signature.hpp":77:44 835 {*memory_blockage}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _6 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 10 9 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 14)
;;  succ:       3 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              9 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 14 10 15 3 139 (nil) [1 uses])
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 94)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 93)
        (reg:DI 94)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 93)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 22 3 (set (reg:SI 84 [ _7 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 75 {*movsi_internal}
     (nil))
(insn 22 20 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _7 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 51)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 51)
;;  succ:       4 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
;;              9 [50.0% (guessed)]  count:177167400 (estimated locally)

;; basic block 4, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/f:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIPv") [flags 0x40]  <var_decl 0x7f1a3ab6a7e0 _ZTIPv>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 85 [ _8 ])
        (mem/u/f/c:DI (plus:DI (reg/f:DI 95)
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)&_ZTIPv].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 85 [ _8 ]) [0 *_8+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":100:31 9 {*cmpqi_1}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/c++/11/typeinfo":100:31 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 31)
;;  succ:       5 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
;;              6 [66.0% (guessed)]  count:116930483 (estimated locally)

;; basic block 5, loop depth 0, count 60236917 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 85 [ _8 ])
                (plus:DI (reg/f:DI 85 [ _8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/typeinfo":100:31 210 {*adddi_1}
     (nil))
;;  succ:       6 [always]  count:60236917 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [66.0% (guessed)]  count:116930483 (estimated locally)
;;              5 [always]  count:60236917 (estimated locally) (FALLTHRU)
(code_label 31 30 32 6 142 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _8 ])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(call_insn 34 33 74 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 74 34 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 74 37 7 (set (reg/f:DI 87 [ _12 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 37 35 38 7 (set (reg/f:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35046bd0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 38 37 39 7 (set (mem/f/c:DI (reg/f:DI 96) [6 result[0].basename+0 S8 A128])
        (reg/f:DI 87 [ _12 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 39 38 40 7 (set (reg:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 40 39 41 7 (set (reg:DI 97)
        (reg:DI 98)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:DI 5 di)
        (reg:DI 97)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(call_insn 42 41 75 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 75 42 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 75 45 8 (set (reg/f:DI 88 [ _13 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 45 43 46 8 (set (reg/f:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35046bd0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 46 45 47 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 99)
                (const_int 24 [0x18])) [6 result[1].basename+0 S8 A64])
        (reg/f:DI 88 [ _13 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 47 46 48 8 (set (reg:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 48 47 49 8 (set (reg:DI 100)
        (reg:DI 101)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 49 48 50 8 (set (reg:DI 5 di)
        (reg:DI 100)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 50 49 51 8 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 [always]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       2 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              8 [always]  count:177167400 (estimated locally) (FALLTHRU)
;;              3 [50.0% (guessed)]  count:177167400 (estimated locally)
(code_label 51 50 52 9 140 (nil) [1 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a35046bd0 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 54 53 55 9 (set (reg:DI 108 [ D.321097 ])
        (reg:DI 102)) 74 {*movdi_internal}
     (nil))
(insn 55 54 56 9 (set (reg:DI 103)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2IvR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3505d240 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 56 55 79 9 (set (reg:DI 109 [ D.321097+8 ])
        (reg:DI 103)) 74 {*movdi_internal}
     (nil))
(insn 79 56 80 9 (set (reg:DI 110 [ <retval> ])
        (reg:DI 108 [ D.321097 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
(insn 80 79 76 9 (set (reg:DI 111 [ <retval>+8 ])
        (reg:DI 109 [ D.321097+8 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
;;  succ:       12 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 0, count 0 (precise), probably never executed
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       6 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 76 80 78 10 144 (nil) [1 uses])
(note 78 76 77 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 77 78 60 10 (set (reg:DI 107)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
;;  succ:       11 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 11, loop depth 0, count 0 (precise), probably never executed
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 60 77 61 11 143 (nil) [0 uses])
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 11 (set (reg:DI 106)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 63 62 64 11 (set (reg:DI 105)
        (reg:DI 106)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 64 63 65 11 (set (reg:DI 5 di)
        (reg:DI 105)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d000 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2IvR15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 65 64 66 11 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 66 65 67 11 (set (reg/f:DI 82 [ D.328957 ])
        (reg:DI 107)) 74 {*movdi_internal}
     (nil))
(insn 67 66 68 11 (set (reg:DI 5 di)
        (reg/f:DI 82 [ D.328957 ])) 74 {*movdi_internal}
     (nil))
(call_insn 68 67 73 11 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 12, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 11, next block 1, flags: (RTL)
;;  pred:       9 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 73 68 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 73 82 12 (set (reg:DI 0 ax)
        (reg:DI 110 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 82 81 72 12 (set (reg:DI 1 dx [+8 ])
        (reg:DI 111 [ <retval>+8 ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 72 82 0 12 (use (reg/i:TI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":49:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<Result (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<Result, ChineseCheckers&> > >::signature (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEE9signatureEv, funcdef_no=13491, decl_uid=294306, cgraph_uid=5402, symbol_order=7129)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 91 -> 122 123
; Splitting reg 92 -> 124 125
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 94)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d990 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:QI 86 [ _11 ])
        (mem/v:QI (reg/f:DI 94) [-1  S1 A64])) "/usr/include/boost/python/detail/signature.hpp":77:44 77 {*movqi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/signature.hpp":77:44 835 {*memory_blockage}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ _11 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 10 9 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 14)
;;  succ:       3 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              7 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 14 10 15 3 152 (nil) [1 uses])
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d990 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 95)
        (reg:DI 96)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 95)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d990 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 22 3 (set (reg:SI 87 [ _12 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 75 {*movsi_internal}
     (nil))
(insn 22 20 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _12 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 45)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 45)
;;  succ:       4 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
;;              7 [67.0% (guessed)]  count:237404317 (estimated locally)

;; basic block 4, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS6Result")  <var_decl 0x7f1a3505d090 _ZTS6Result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 97)
        (reg:DI 98)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg:DI 97)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS6Result")  <var_decl 0x7f1a3505d090 _ZTS6Result>)
        (nil)))
(call_insn 28 27 111 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)
(note 111 28 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 111 31 5 (set (reg/f:DI 88 [ _13 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 31 29 32 5 (set (reg/f:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d480 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 32 31 33 5 (set (mem/f/c:DI (reg/f:DI 99) [6 result[0].basename+0 S8 A128])
        (reg/f:DI 88 [ _13 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:DI 100)
        (reg:DI 101)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:DI 5 di)
        (reg:DI 100)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(call_insn 36 35 112 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)
(note 112 36 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 112 39 6 (set (reg/f:DI 89 [ _14 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 39 37 40 6 (set (reg/f:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d480 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 40 39 41 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 102)
                (const_int 24 [0x18])) [6 result[1].basename+0 S8 A64])
        (reg/f:DI 89 [ _14 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:DI 104)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d990 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:DI 103)
        (reg:DI 104)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:DI 5 di)
        (reg:DI 103)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d990 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 44 43 45 6 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 [always]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       2 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              6 [always]  count:116930483 (estimated locally) (FALLTHRU)
;;              3 [67.0% (guessed)]  count:237404317 (estimated locally)
(code_label 45 44 46 7 153 (nil) [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg/f:DI 105)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3505dea0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 48 47 49 7 (set (reg:QI 83 [ _8 ])
        (mem/v:QI (reg/f:DI 105) [-1  S1 A64])) "/usr/include/boost/python/detail/caller.hpp":120:36 77 {*movqi_internal}
     (nil))
(insn 49 48 50 7 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/caller.hpp":120:36 835 {*memory_blockage}
     (nil))
(insn 50 49 51 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _8 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 51 50 117 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":120:36 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 65)
;;  succ:       10 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              13 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 0 (precise), probably never executed
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       4 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 117 51 119 8 161 (nil) [1 uses])
(note 119 117 118 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 118 119 55 8 (set (reg:DI 108)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
;;  succ:       9 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 9, loop depth 0, count 0 (precise), probably never executed
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 55 118 56 9 157 (nil) [0 uses])
(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 9 (set (reg:DI 107)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d990 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 58 57 59 9 (set (reg:DI 106)
        (reg:DI 107)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 59 58 60 9 (set (reg:DI 5 di)
        (reg:DI 106)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d990 _ZGVZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result>)
        (nil)))
(call_insn 60 59 61 9 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 62 9 (set (reg/f:DI 90 [ D.328969 ])
        (reg:DI 108)) 74 {*movdi_internal}
     (nil))
(insn 62 61 63 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.328969 ])) 74 {*movdi_internal}
     (nil))
(call_insn 63 62 65 9 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 10, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       7 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 65 63 66 10 155 (nil) [1 uses])
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (reg:DI 110)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3505dea0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 68 67 69 10 (set (reg:DI 109)
        (reg:DI 110)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 69 68 70 10 (set (reg:DI 5 di)
        (reg:DI 109)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3505dea0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 70 69 71 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 71 70 73 10 (set (reg:SI 84 [ _9 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":120:36 75 {*movsi_internal}
     (nil))
(insn 73 71 74 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _9 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 74 73 75 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 88)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":120:36 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 88)
;;  succ:       11 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
;;              13 [67.0% (guessed)]  count:237404317 (estimated locally)

;; basic block 11, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
(note 75 74 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 11 (set (reg:DI 112)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS6Result")  <var_decl 0x7f1a3505d090 _ZTS6Result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 77 76 78 11 (set (reg:DI 111)
        (reg:DI 112)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 78 77 79 11 (set (reg:DI 5 di)
        (reg:DI 111)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS6Result")  <var_decl 0x7f1a3505d090 _ZTS6Result>)
        (nil)))
(call_insn 79 78 113 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [always (adjusted)]  count:116930483 (estimated locally) (FALLTHRU)
(note 113 79 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 113 82 12 (set (reg/f:DI 85 [ _10 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 82 80 83 12 (set (reg/f:DI 113)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3505db40 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 83 82 84 12 (set (mem/f/c:DI (reg/f:DI 113) [6 ret.basename+0 S8 A64])
        (reg/f:DI 85 [ _10 ])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 84 83 85 12 (set (reg:DI 115)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3505dea0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 85 84 86 12 (set (reg:DI 114)
        (reg:DI 115)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 86 85 87 12 (set (reg:DI 5 di)
        (reg:DI 114)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3505dea0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 87 86 88 12 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":120:36 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       13 [always]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       7 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              12 [always]  count:116930483 (estimated locally) (FALLTHRU)
;;              10 [67.0% (guessed)]  count:237404317 (estimated locally)
(code_label 88 87 89 13 156 (nil) [1 uses])
(note 89 88 90 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 13 (set (reg:DI 116)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj1EE4implINS_3mpl7vector2I6ResultR15ChineseCheckersEEE8elementsEvE6result")  <var_decl 0x7f1a3505d480 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 91 90 92 13 (set (reg:DI 122 [ D.321167 ])
        (reg:DI 116)) 74 {*movdi_internal}
     (nil))
(insn 92 91 93 13 (set (reg:DI 117)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3505db40 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 93 92 120 13 (set (reg:DI 123 [ D.321167+8 ])
        (reg:DI 117)) 74 {*movdi_internal}
     (nil))
(insn 120 93 121 13 (set (reg:DI 124 [ <retval> ])
        (reg:DI 122 [ D.321167 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
(insn 121 120 114 13 (set (reg:DI 125 [ <retval>+8 ])
        (reg:DI 123 [ D.321167+8 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
;;  succ:       16 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 0 (precise), probably never executed
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       11 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 114 121 116 14 160 (nil) [1 uses])
(note 116 114 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 115 116 97 14 (set (reg:DI 121)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
;;  succ:       15 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 15, loop depth 0, count 0 (precise), probably never executed
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 97 115 98 15 159 (nil) [0 uses])
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 15 (set (reg:DI 120)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3505dea0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 100 99 101 15 (set (reg:DI 119)
        (reg:DI 120)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 101 100 102 15 (set (reg:DI 5 di)
        (reg:DI 119)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3505dea0 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector2I6ResultR15ChineseCheckersEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 102 101 103 15 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":120:36 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 103 102 104 15 (set (reg/f:DI 82 [ D.328970 ])
        (reg:DI 121)) 74 {*movdi_internal}
     (nil))
(insn 104 103 105 15 (set (reg:DI 5 di)
        (reg/f:DI 82 [ D.328970 ])) 74 {*movdi_internal}
     (nil))
(call_insn 105 104 110 15 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 16, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 15, next block 1, flags: (RTL)
;;  pred:       13 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 110 105 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 122 110 123 16 (set (reg:DI 0 ax)
        (reg:DI 124 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 123 122 109 16 (set (reg:DI 1 dx [+8 ])
        (reg:DI 125 [ <retval>+8 ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 109 123 0 16 (use (reg/i:TI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":49:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<bool (ChineseCheckers::*)(int, const std::vector<std::vector<int> >&), boost::python::default_call_policies, boost::mpl::vector4<bool, ChineseCheckers&, int, const std::vector<std::vector<int> >&> > >::signature (_ZNK5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEE9signatureEv, funcdef_no=13494, decl_uid=294211, cgraph_uid=5405, symbol_order=7132)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

; Splitting reg 99 -> 133 134
; Splitting reg 100 -> 135 136
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507ac60 _ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:QI 89 [ _15 ])
        (mem/v:QI (reg/f:DI 102) [-1  S1 A64])) "/usr/include/boost/python/detail/signature.hpp":77:44 77 {*movqi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/signature.hpp":77:44 835 {*memory_blockage}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ _15 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 10 9 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 14)
;;  succ:       3 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              13 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 14 10 15 3 174 (nil) [1 uses])
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 104)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507ac60 _ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 103)
        (reg:DI 104)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 103)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507ac60 _ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result>)
        (nil)))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 22 3 (set (reg:SI 90 [ _16 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 75 {*movsi_internal}
     (nil))
(insn 22 20 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _16 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/signature.hpp":77:44 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 73)
            (pc))) "/usr/include/boost/python/detail/signature.hpp":77:44 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 73)
;;  succ:       4 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
;;              13 [50.0% (guessed)]  count:177167400 (estimated locally)

;; basic block 4, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/f:DI 105)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIb") [flags 0x40]  <var_decl 0x7f1a34cc7c60 _ZTIb>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 91 [ _17 ])
        (mem/u/f/c:DI (plus:DI (reg/f:DI 105)
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)&_ZTIb].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 91 [ _17 ]) [0 *_17+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":100:31 9 {*cmpqi_1}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/c++/11/typeinfo":100:31 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 31)
;;  succ:       5 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
;;              6 [66.0% (guessed)]  count:116930483 (estimated locally)

;; basic block 5, loop depth 0, count 60236917 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 91 [ _17 ])
                (plus:DI (reg/f:DI 91 [ _17 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/typeinfo":100:31 210 {*adddi_1}
     (nil))
;;  succ:       6 [always]  count:60236917 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [66.0% (guessed)]  count:116930483 (estimated locally)
;;              5 [always]  count:60236917 (estimated locally) (FALLTHRU)
(code_label 31 30 32 6 177 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _17 ])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(call_insn 34 33 145 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 145 34 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 145 37 7 (set (reg/f:DI 93 [ _21 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 37 35 38 7 (set (reg/f:DI 106)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507a240 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 38 37 39 7 (set (mem/f/c:DI (reg/f:DI 106) [6 result[0].basename+0 S8 A128])
        (reg/f:DI 93 [ _21 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 39 38 40 7 (set (reg:DI 108)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 40 39 41 7 (set (reg:DI 107)
        (reg:DI 108)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:DI 5 di)
        (reg:DI 107)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(call_insn 42 41 146 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 146 42 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 146 45 8 (set (reg/f:DI 94 [ _22 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 45 43 46 8 (set (reg/f:DI 109)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507a240 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 46 45 47 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 109)
                (const_int 24 [0x18])) [6 result[1].basename+0 S8 A64])
        (reg/f:DI 94 [ _22 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 47 46 48 8 (set (reg/f:DI 110)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIi") [flags 0x40]  <var_decl 0x7f1a355db6c0 _ZTIi>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 48 47 49 8 (set (reg/f:DI 95 [ _23 ])
        (mem/u/f/c:DI (plus:DI (reg/f:DI 110)
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)&_ZTIi].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 49 48 50 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 95 [ _23 ]) [0 *_23+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":100:31 9 {*cmpqi_1}
     (nil))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "/usr/include/c++/11/typeinfo":100:31 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 53)
;;  succ:       9 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
;;              10 [66.0% (guessed)]  count:116930483 (estimated locally)

;; basic block 9, loop depth 0, count 60236917 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (parallel [
            (set (reg/f:DI 95 [ _23 ])
                (plus:DI (reg/f:DI 95 [ _23 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/typeinfo":100:31 210 {*adddi_1}
     (nil))
;;  succ:       10 [always]  count:60236917 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8 [66.0% (guessed)]  count:116930483 (estimated locally)
;;              9 [always]  count:60236917 (estimated locally) (FALLTHRU)
(code_label 53 52 54 10 178 (nil) [1 uses])
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _23 ])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(call_insn 56 55 147 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 147 56 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 147 59 11 (set (reg/f:DI 97 [ _27 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 59 57 60 11 (set (reg/f:DI 111)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507a240 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 60 59 61 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 111)
                (const_int 48 [0x30])) [6 result[2].basename+0 S8 A128])
        (reg/f:DI 97 [ _27 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 61 60 62 11 (set (reg:DI 113)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 62 61 63 11 (set (reg:DI 112)
        (reg:DI 113)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 63 62 64 11 (set (reg:DI 5 di)
        (reg:DI 112)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
        (nil)))
(call_insn 64 63 148 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 148 64 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 65 148 67 12 (set (reg/f:DI 98 [ _28 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 67 65 68 12 (set (reg/f:DI 114)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507a240 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 68 67 69 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 114)
                (const_int 72 [0x48])) [6 result[3].basename+0 S8 A64])
        (reg/f:DI 98 [ _28 ])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 69 68 70 12 (set (reg:DI 116)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507ac60 _ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 70 69 71 12 (set (reg:DI 115)
        (reg:DI 116)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 71 70 72 12 (set (reg:DI 5 di)
        (reg:DI 115)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507ac60 _ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result>)
        (nil)))
(call_insn 72 71 73 12 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       13 [always]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       2 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              12 [always]  count:177167400 (estimated locally) (FALLTHRU)
;;              3 [50.0% (guessed)]  count:177167400 (estimated locally)
(code_label 73 72 74 13 175 (nil) [1 uses])
(note 74 73 75 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 13 (set (reg/f:DI 117)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3507af30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 76 75 77 13 (set (reg:QI 84 [ _8 ])
        (mem/v:QI (reg/f:DI 117) [-1  S1 A64])) "/usr/include/boost/python/detail/caller.hpp":120:36 77 {*movqi_internal}
     (nil))
(insn 77 76 78 13 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "/usr/include/boost/python/detail/caller.hpp":120:36 835 {*memory_blockage}
     (nil))
(insn 78 77 79 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _8 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 79 78 153 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":120:36 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 93)
;;  succ:       16 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              21 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 0 (precise), probably never executed
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       6 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 153 79 155 14 186 (nil) [1 uses])
(note 155 153 154 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 154 155 83 14 (set (reg:DI 120)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
;;  succ:       15 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 15, loop depth 0, count 0 (precise), probably never executed
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 83 154 84 15 181 (nil) [0 uses])
(note 84 83 85 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 15 (set (reg:DI 119)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507ac60 _ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 86 85 87 15 (set (reg:DI 118)
        (reg:DI 119)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (nil))
(insn 87 86 88 15 (set (reg:DI 5 di)
        (reg:DI 118)) "/usr/include/boost/python/detail/signature.hpp":77:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507ac60 _ZGVZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result>)
        (nil)))
(call_insn 88 87 89 15 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/signature.hpp":77:44 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 89 88 90 15 (set (reg/f:DI 82 [ D.328984 ])
        (reg:DI 120)) 74 {*movdi_internal}
     (nil))
(insn 90 89 91 15 (set (reg:DI 5 di)
        (reg/f:DI 82 [ D.328984 ])) 74 {*movdi_internal}
     (nil))
(call_insn 91 90 93 15 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 16, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       13 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 93 91 94 16 179 (nil) [1 uses])
(note 94 93 95 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 16 (set (reg:DI 122)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3507af30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 96 95 97 16 (set (reg:DI 121)
        (reg:DI 122)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 97 96 98 16 (set (reg:DI 5 di)
        (reg:DI 121)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3507af30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 98 97 99 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 99 98 101 16 (set (reg:SI 85 [ _9 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":120:36 75 {*movsi_internal}
     (nil))
(insn 101 99 102 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ _9 ])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":120:36 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 102 101 103 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 122)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":120:36 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 122)
;;  succ:       17 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
;;              21 [50.0% (guessed)]  count:177167400 (estimated locally)

;; basic block 17, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [50.0% (guessed)]  count:177167400 (estimated locally) (FALLTHRU)
(note 103 102 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 17 (set (reg/f:DI 123)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIb") [flags 0x40]  <var_decl 0x7f1a34cc7c60 _ZTIb>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 105 104 106 17 (set (reg/f:DI 86 [ _10 ])
        (mem/u/f/c:DI (plus:DI (reg/f:DI 123)
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)&_ZTIb].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 106 105 107 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 86 [ _10 ]) [0 *_10+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":100:31 9 {*cmpqi_1}
     (nil))
(jump_insn 107 106 108 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) "/usr/include/c++/11/typeinfo":100:31 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 110)
;;  succ:       18 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
;;              19 [66.0% (guessed)]  count:116930483 (estimated locally)

;; basic block 18, loop depth 0, count 60236917 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [34.0% (guessed)]  count:60236917 (estimated locally) (FALLTHRU)
(note 108 107 109 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 18 (parallel [
            (set (reg/f:DI 86 [ _10 ])
                (plus:DI (reg/f:DI 86 [ _10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/typeinfo":100:31 210 {*adddi_1}
     (nil))
;;  succ:       19 [always]  count:60236917 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       17 [66.0% (guessed)]  count:116930483 (estimated locally)
;;              18 [always]  count:60236917 (estimated locally) (FALLTHRU)
(code_label 110 109 111 19 183 (nil) [1 uses])
(note 111 110 112 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 19 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _10 ])) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(call_insn 113 112 149 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>) [0 gcc_demangle S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/type_id.hpp":160:32 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail12gcc_demangleEPKc") [flags 0x41]  <function_decl 0x7f1a3ab67800 gcc_demangle>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       22 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 20, loop depth 0, count 177167400 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [always (adjusted)]  count:177167400 (estimated locally) (FALLTHRU)
(note 149 113 114 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 114 149 116 20 (set (reg/f:DI 88 [ _14 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/type_id.hpp":160:32 74 {*movdi_internal}
     (nil))
(insn 116 114 117 20 (set (reg/f:DI 124)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3507ae10 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 117 116 118 20 (set (mem/f/c:DI (reg/f:DI 124) [6 ret.basename+0 S8 A64])
        (reg/f:DI 88 [ _14 ])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 118 117 119 20 (set (reg:DI 126)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3507af30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 119 118 120 20 (set (reg:DI 125)
        (reg:DI 126)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 120 119 121 20 (set (reg:DI 5 di)
        (reg:DI 125)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3507af30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 121 120 122 20 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":120:36 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       21 [always]  count:177167400 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       13 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              20 [always]  count:177167400 (estimated locally) (FALLTHRU)
;;              16 [50.0% (guessed)]  count:177167400 (estimated locally)
(code_label 122 121 123 21 180 (nil) [1 uses])
(note 123 122 124 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 21 (set (reg:DI 127)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS9_IiSaIiEESaISB_EEEEE8elementsEvE6result")  <var_decl 0x7f1a3507a240 result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 125 124 126 21 (set (reg:DI 133 [ D.321295 ])
        (reg:DI 127)) 74 {*movdi_internal}
     (nil))
(insn 126 125 127 21 (set (reg:DI 128)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3507ae10 ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 127 126 156 21 (set (reg:DI 134 [ D.321295+8 ])
        (reg:DI 128)) 74 {*movdi_internal}
     (nil))
(insn 156 127 157 21 (set (reg:DI 135 [ <retval> ])
        (reg:DI 133 [ D.321295 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
(insn 157 156 150 21 (set (reg:DI 136 [ <retval>+8 ])
        (reg:DI 134 [ D.321295+8 ])) "/usr/include/boost/python/object/py_function.hpp":48:35 74 {*movdi_internal}
     (nil))
;;  succ:       24 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 22, loop depth 0, count 0 (precise), probably never executed
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       19 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 150 157 152 22 185 (nil) [1 uses])
(note 152 150 151 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 151 152 131 22 (set (reg:DI 132)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
;;  succ:       23 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 23, loop depth 0, count 0 (precise), probably never executed
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 131 151 132 23 184 (nil) [0 uses])
(note 132 131 133 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 23 (set (reg:DI 131)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3507af30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 134 133 135 23 (set (reg:DI 130)
        (reg:DI 131)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (nil))
(insn 135 134 136 23 (set (reg:DI 5 di)
        (reg:DI 130)) "/usr/include/boost/python/detail/caller.hpp":120:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret")  <var_decl 0x7f1a3507af30 _ZGVZN5boost6python6detail7get_retINS0_21default_call_policiesENS_3mpl7vector4IbR15ChineseCheckersiRKSt6vectorIS8_IiSaIiEESaISA_EEEEEEPKNS1_17signature_elementEvE3ret>)
        (nil)))
(call_insn 136 135 137 23 (call (mem:QI (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>) [0 __cxa_guard_abort S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":120:36 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_abort") [flags 0x41]  <function_decl 0x7f1a36e34a00 __cxa_guard_abort>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 137 136 138 23 (set (reg/f:DI 83 [ D.328985 ])
        (reg:DI 132)) 74 {*movdi_internal}
     (nil))
(insn 138 137 139 23 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.328985 ])) 74 {*movdi_internal}
     (nil))
(call_insn 139 138 144 23 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 24, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 23, next block 1, flags: (RTL)
;;  pred:       21 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 144 139 158 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 158 144 159 24 (set (reg:DI 0 ax)
        (reg:DI 135 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 159 158 143 24 (set (reg:DI 1 dx [+8 ])
        (reg:DI 136 [ <retval>+8 ])) "/usr/include/boost/python/object/py_function.hpp":49:5 74 {*movdi_internal}
     (nil))
(insn 143 159 0 24 (use (reg/i:TI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":49:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::expected_pytype_for_arg<void>::get_pytype (_ZN5boost6python9converter23expected_pytype_for_argIvE10get_pytypeEv, funcdef_no=13635, decl_uid=316470, cgraph_uid=5546, symbol_order=7299)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 86)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIPv") [flags 0x40]  <var_decl 0x7f1a3ab6a7e0 _ZTIPv>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:DI 82 [ _8 ])
        (mem/u/f/c:DI (plus:DI (reg/f:DI 86)
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)&_ZTIPv].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 82 [ _8 ]) [0 *_8+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":100:31 9 {*cmpqi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "/usr/include/c++/11/typeinfo":100:31 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 11)
;;  succ:       3 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
;;              4 [66.0% (guessed)]  count:708669600 (estimated locally)

;; basic block 3, loop depth 0, count 365072224 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (parallel [
            (set (reg/f:DI 82 [ _8 ])
                (plus:DI (reg/f:DI 82 [ _8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/typeinfo":100:31 210 {*adddi_1}
     (nil))
;;  succ:       4 [always]  count:365072224 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [66.0% (guessed)]  count:708669600 (estimated locally)
;;              3 [always]  count:365072224 (estimated locally) (FALLTHRU)
(code_label 11 10 12 4 199 (nil) [1 uses])
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 84 [ D.320588 ])
        (reg/f:DI 82 [ _8 ])) 74 {*movdi_internal}
     (nil))
(insn 14 13 15 4 (set (reg:DI 5 di)
        (reg:DI 84 [ D.320588 ])) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(call_insn 15 14 16 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>) [0 query S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 4 (set (reg/f:DI 85 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 28)
            (pc))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 806 {*jcc}
     (int_list:REG_BR_PROB 281535108 (nil))
 -> 28)
;;  succ:       5 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
;;              6 [26.2% (guessed)]  count:281535104 (estimated locally)

;; basic block 5, loop depth 0, count 792206721 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:DI 5 di)
        (reg/f:DI 85 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 74 {*movdi_internal}
     (nil))
(call_insn/j 21 20 28 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>) [0 expected_from_python_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:792206721 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 6, loop depth 0, count 281535103 (estimated locally), maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       4 [26.2% (guessed)]  count:281535104 (estimated locally)
(code_label 28 21 31 6 198 (nil) [1 uses])
(note 31 28 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 31 30 6 (set (reg/i:DI 0 ax)
        (reg/f:DI 85 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 74 {*movdi_internal}
     (nil))
(insn 30 29 0 6 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 -1
     (nil))
;;  succ:       EXIT [always]  count:281535103 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::expected_pytype_for_arg<int>::get_pytype (_ZN5boost6python9converter23expected_pytype_for_argIiE10get_pytypeEv, funcdef_no=13645, decl_uid=316679, cgraph_uid=5556, symbol_order=7309)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 86)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIi") [flags 0x40]  <var_decl 0x7f1a355db6c0 _ZTIi>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:DI 82 [ _8 ])
        (mem/u/f/c:DI (plus:DI (reg/f:DI 86)
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)&_ZTIi].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 82 [ _8 ]) [0 *_8+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":100:31 9 {*cmpqi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "/usr/include/c++/11/typeinfo":100:31 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 11)
;;  succ:       3 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
;;              4 [66.0% (guessed)]  count:708669600 (estimated locally)

;; basic block 3, loop depth 0, count 365072224 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (parallel [
            (set (reg/f:DI 82 [ _8 ])
                (plus:DI (reg/f:DI 82 [ _8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/typeinfo":100:31 210 {*adddi_1}
     (nil))
;;  succ:       4 [always]  count:365072224 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [66.0% (guessed)]  count:708669600 (estimated locally)
;;              3 [always]  count:365072224 (estimated locally) (FALLTHRU)
(code_label 11 10 12 4 203 (nil) [1 uses])
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 84 [ D.320740 ])
        (reg/f:DI 82 [ _8 ])) 74 {*movdi_internal}
     (nil))
(insn 14 13 15 4 (set (reg:DI 5 di)
        (reg:DI 84 [ D.320740 ])) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(call_insn 15 14 16 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>) [0 query S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 4 (set (reg/f:DI 85 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 28)
            (pc))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 806 {*jcc}
     (int_list:REG_BR_PROB 281535108 (nil))
 -> 28)
;;  succ:       5 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
;;              6 [26.2% (guessed)]  count:281535104 (estimated locally)

;; basic block 5, loop depth 0, count 792206721 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:DI 5 di)
        (reg/f:DI 85 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 74 {*movdi_internal}
     (nil))
(call_insn/j 21 20 28 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>) [0 expected_from_python_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:792206721 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 6, loop depth 0, count 281535103 (estimated locally), maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       4 [26.2% (guessed)]  count:281535104 (estimated locally)
(code_label 28 21 31 6 202 (nil) [1 uses])
(note 31 28 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 31 30 6 (set (reg/i:DI 0 ax)
        (reg/f:DI 85 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 74 {*movdi_internal}
     (nil))
(insn 30 29 0 6 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 -1
     (nil))
;;  succ:       EXIT [always]  count:281535103 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::expected_pytype_for_arg<ChineseCheckers&>::get_pytype (_ZN5boost6python9converter23expected_pytype_for_argIR15ChineseCheckersE10get_pytypeEv, funcdef_no=13647, decl_uid=316696, cgraph_uid=5558, symbol_order=7311)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 82 [ D.320718 ])
        (reg:DI 84)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 82 [ D.320718 ])) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>) [0 query S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 83 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 806 {*jcc}
     (int_list:REG_BR_PROB 281535108 (nil))
 -> 21)
;;  succ:       3 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
;;              4 [26.2% (guessed)]  count:281535104 (estimated locally)

;; basic block 3, loop depth 0, count 792206721 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 74 {*movdi_internal}
     (nil))
(call_insn/j 14 13 21 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>) [0 expected_from_python_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:792206721 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 281535103 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [26.2% (guessed)]  count:281535104 (estimated locally)
(code_label 21 14 24 4 206 (nil) [1 uses])
(note 24 21 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 24 23 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 74 {*movdi_internal}
     (nil))
(insn 23 22 0 4 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 -1
     (nil))
;;  succ:       EXIT [always]  count:281535103 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::expected_pytype_for_arg<std::vector<std::vector<std::vector<int> > > >::get_pytype (_ZN5boost6python9converter23expected_pytype_for_argISt6vectorIS3_IS3_IiSaIiEESaIS5_EESaIS7_EEE10get_pytypeEv, funcdef_no=13652, decl_uid=316803, cgraph_uid=5563, symbol_order=7316)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE")  <var_decl 0x7f1a351562d0 _ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 82 [ D.320871 ])
        (reg:DI 84)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE")  <var_decl 0x7f1a351562d0 _ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE>)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 82 [ D.320871 ])) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>) [0 query S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 83 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 806 {*jcc}
     (int_list:REG_BR_PROB 281535108 (nil))
 -> 21)
;;  succ:       3 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
;;              4 [26.2% (guessed)]  count:281535104 (estimated locally)

;; basic block 3, loop depth 0, count 792206721 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 74 {*movdi_internal}
     (nil))
(call_insn/j 14 13 21 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>) [0 expected_from_python_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:792206721 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 281535103 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [26.2% (guessed)]  count:281535104 (estimated locally)
(code_label 21 14 24 4 209 (nil) [1 uses])
(note 24 21 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 24 23 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 74 {*movdi_internal}
     (nil))
(insn 23 22 0 4 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 -1
     (nil))
;;  succ:       EXIT [always]  count:281535103 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::expected_pytype_for_arg<std::vector<std::vector<Color> > >::get_pytype (_ZN5boost6python9converter23expected_pytype_for_argISt6vectorIS3_I5ColorSaIS4_EESaIS6_EEE10get_pytypeEv, funcdef_no=13657, decl_uid=316956, cgraph_uid=5568, symbol_order=7321)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 82 [ D.320997 ])
        (reg:DI 84)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 82 [ D.320997 ])) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>) [0 query S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 83 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 806 {*jcc}
     (int_list:REG_BR_PROB 281535108 (nil))
 -> 21)
;;  succ:       3 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
;;              4 [26.2% (guessed)]  count:281535104 (estimated locally)

;; basic block 3, loop depth 0, count 792206721 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 74 {*movdi_internal}
     (nil))
(call_insn/j 14 13 21 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>) [0 expected_from_python_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:792206721 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 281535103 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [26.2% (guessed)]  count:281535104 (estimated locally)
(code_label 21 14 24 4 212 (nil) [1 uses])
(note 24 21 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 24 23 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 74 {*movdi_internal}
     (nil))
(insn 23 22 0 4 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 -1
     (nil))
;;  succ:       EXIT [always]  count:281535103 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::expected_pytype_for_arg<Result>::get_pytype (_ZN5boost6python9converter23expected_pytype_for_argI6ResultE10get_pytypeEv, funcdef_no=13665, decl_uid=317158, cgraph_uid=5576, symbol_order=7329)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS6Result")  <var_decl 0x7f1a3505d090 _ZTS6Result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 82 [ D.321196 ])
        (reg:DI 84)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS6Result")  <var_decl 0x7f1a3505d090 _ZTS6Result>)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 82 [ D.321196 ])) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>) [0 query S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 83 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 806 {*jcc}
     (int_list:REG_BR_PROB 281535108 (nil))
 -> 21)
;;  succ:       3 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
;;              4 [26.2% (guessed)]  count:281535104 (estimated locally)

;; basic block 3, loop depth 0, count 792206721 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 74 {*movdi_internal}
     (nil))
(call_insn/j 14 13 21 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>) [0 expected_from_python_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:792206721 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 281535103 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [26.2% (guessed)]  count:281535104 (estimated locally)
(code_label 21 14 24 4 215 (nil) [1 uses])
(note 24 21 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 24 23 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 74 {*movdi_internal}
     (nil))
(insn 23 22 0 4 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 -1
     (nil))
;;  succ:       EXIT [always]  count:281535103 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::expected_pytype_for_arg<bool>::get_pytype (_ZN5boost6python9converter23expected_pytype_for_argIbE10get_pytypeEv, funcdef_no=13680, decl_uid=317328, cgraph_uid=5591, symbol_order=7344)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 86)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIb") [flags 0x40]  <var_decl 0x7f1a34cc7c60 _ZTIb>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:DI 82 [ _8 ])
        (mem/u/f/c:DI (plus:DI (reg/f:DI 86)
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)&_ZTIb].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 82 [ _8 ]) [0 *_8+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":100:31 9 {*cmpqi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "/usr/include/c++/11/typeinfo":100:31 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 11)
;;  succ:       3 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
;;              4 [66.0% (guessed)]  count:708669600 (estimated locally)

;; basic block 3, loop depth 0, count 365072224 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [34.0% (guessed)]  count:365072224 (estimated locally) (FALLTHRU)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (parallel [
            (set (reg/f:DI 82 [ _8 ])
                (plus:DI (reg/f:DI 82 [ _8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/typeinfo":100:31 210 {*adddi_1}
     (nil))
;;  succ:       4 [always]  count:365072224 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [66.0% (guessed)]  count:708669600 (estimated locally)
;;              3 [always]  count:365072224 (estimated locally) (FALLTHRU)
(code_label 11 10 12 4 219 (nil) [1 uses])
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 84 [ D.321364 ])
        (reg/f:DI 82 [ _8 ])) 74 {*movdi_internal}
     (nil))
(insn 14 13 15 4 (set (reg:DI 5 di)
        (reg:DI 84 [ D.321364 ])) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(call_insn 15 14 16 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>) [0 query S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 4 (set (reg/f:DI 85 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 28)
            (pc))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 806 {*jcc}
     (int_list:REG_BR_PROB 281535108 (nil))
 -> 28)
;;  succ:       5 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
;;              6 [26.2% (guessed)]  count:281535104 (estimated locally)

;; basic block 5, loop depth 0, count 792206721 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:DI 5 di)
        (reg/f:DI 85 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 74 {*movdi_internal}
     (nil))
(call_insn/j 21 20 28 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>) [0 expected_from_python_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:792206721 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 6, loop depth 0, count 281535103 (estimated locally), maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       4 [26.2% (guessed)]  count:281535104 (estimated locally)
(code_label 28 21 31 6 218 (nil) [1 uses])
(note 31 28 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 31 30 6 (set (reg/i:DI 0 ax)
        (reg/f:DI 85 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 74 {*movdi_internal}
     (nil))
(insn 30 29 0 6 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 -1
     (nil))
;;  succ:       EXIT [always]  count:281535103 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::expected_pytype_for_arg<_object*>::get_pytype (_ZN5boost6python9converter23expected_pytype_for_argIP7_objectE10get_pytypeEv, funcdef_no=13637, decl_uid=316512, cgraph_uid=5548, symbol_order=7301)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS7_object")  <var_decl 0x7f1a34d67000 _ZTS7_object>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 82 [ D.320563 ])
        (reg:DI 84)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS7_object")  <var_decl 0x7f1a34d67000 _ZTS7_object>)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 82 [ D.320563 ])) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>) [0 query S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 83 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 806 {*jcc}
     (int_list:REG_BR_PROB 281535108 (nil))
 -> 21)
;;  succ:       3 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
;;              4 [26.2% (guessed)]  count:281535104 (estimated locally)

;; basic block 3, loop depth 0, count 792206721 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 74 {*movdi_internal}
     (nil))
(call_insn/j 14 13 21 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>) [0 expected_from_python_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:792206721 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 281535103 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [26.2% (guessed)]  count:281535104 (estimated locally)
(code_label 21 14 24 4 222 (nil) [1 uses])
(note 24 21 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 24 23 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 74 {*movdi_internal}
     (nil))
(insn 23 22 0 4 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 -1
     (nil))
;;  succ:       EXIT [always]  count:281535103 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::expected_pytype_for_arg<const std::vector<std::vector<int> >&>::get_pytype (_ZN5boost6python9converter23expected_pytype_for_argIRKSt6vectorIS3_IiSaIiEESaIS5_EEE10get_pytypeEv, funcdef_no=13682, decl_uid=317392, cgraph_uid=5593, symbol_order=7346)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 82 [ D.321331 ])
        (reg:DI 84)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 82 [ D.321331 ])) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>) [0 query S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry5queryENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981d00 query>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 83 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":68:68 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) "/usr/include/boost/python/converter/pytype_function.hpp":71:18 806 {*jcc}
     (int_list:REG_BR_PROB 281535108 (nil))
 -> 21)
;;  succ:       3 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
;;              4 [26.2% (guessed)]  count:281535104 (estimated locally)

;; basic block 3, loop depth 0, count 792206721 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [73.8% (guessed)]  count:792206720 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 74 {*movdi_internal}
     (nil))
(call_insn/j 14 13 21 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>) [0 expected_from_python_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/pytype_function.hpp":71:48 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration25expected_from_python_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992300 expected_from_python_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:792206721 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 4, loop depth 0, count 281535103 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [26.2% (guessed)]  count:281535104 (estimated locally)
(code_label 21 14 24 4 225 (nil) [1 uses])
(note 24 21 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 24 23 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 83 [ <retval> ])) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 74 {*movdi_internal}
     (nil))
(insn 23 22 0 4 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/pytype_function.hpp":72:5 -1
     (nil))
;;  succ:       EXIT [always]  count:281535103 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<void (*)(_object*), boost::python::default_call_policies, boost::mpl::vector2<void, _object*> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEED2Ev, funcdef_no=13399, decl_uid=308093, cgraph_uid=5310, symbol_order=6240)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE")  <var_decl 0x7f1a352d2510 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE")  <var_decl 0x7f1a352d2510 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_3(D)->D.308102._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<void (*)(_object*), boost::python::default_call_policies, boost::mpl::vector2<void, _object*> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEED0Ev, funcdef_no=13401, decl_uid=308087, cgraph_uid=5312, symbol_order=6242)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE")  <var_decl 0x7f1a352d2510 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE")  <var_decl 0x7f1a352d2510 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_2(D)->D.308102._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (const_int 16 [0x10])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 13 12 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<int, ChineseCheckers&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEED2Ev, funcdef_no=13407, decl_uid=294594, cgraph_uid=5318, symbol_order=6251)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE")  <var_decl 0x7f1a35bc4d80 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE")  <var_decl 0x7f1a35bc4d80 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_3(D)->D.294603._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<int, ChineseCheckers&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEED0Ev, funcdef_no=13409, decl_uid=294588, cgraph_uid=5320, symbol_order=6253)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE")  <var_decl 0x7f1a35bc4d80 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE")  <var_decl 0x7f1a35bc4d80 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_2(D)->D.294603._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 13 12 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<std::vector<std::vector<std::vector<int> > > (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<std::vector<std::vector<std::vector<int> > >, ChineseCheckers&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEED2Ev, funcdef_no=13411, decl_uid=294525, cgraph_uid=5322, symbol_order=6256)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE")  <var_decl 0x7f1a35bc47e0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE")  <var_decl 0x7f1a35bc47e0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_3(D)->D.294534._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<std::vector<std::vector<std::vector<int> > > (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<std::vector<std::vector<std::vector<int> > >, ChineseCheckers&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEED0Ev, funcdef_no=13413, decl_uid=294519, cgraph_uid=5324, symbol_order=6258)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE")  <var_decl 0x7f1a35bc47e0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE")  <var_decl 0x7f1a35bc47e0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_2(D)->D.294534._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 13 12 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<std::vector<std::vector<Color> > (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<std::vector<std::vector<Color> >, ChineseCheckers&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEED2Ev, funcdef_no=13415, decl_uid=294456, cgraph_uid=5326, symbol_order=6261)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE")  <var_decl 0x7f1a35bc4240 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE")  <var_decl 0x7f1a35bc4240 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_3(D)->D.294465._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<std::vector<std::vector<Color> > (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<std::vector<std::vector<Color> >, ChineseCheckers&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEED0Ev, funcdef_no=13417, decl_uid=294450, cgraph_uid=5328, symbol_order=6263)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE")  <var_decl 0x7f1a35bc4240 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE")  <var_decl 0x7f1a35bc4240 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_2(D)->D.294465._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 13 12 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<void (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<void, ChineseCheckers&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEED2Ev, funcdef_no=13419, decl_uid=294387, cgraph_uid=5330, symbol_order=6266)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_3(D)->D.294396._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<void (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<void, ChineseCheckers&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEED0Ev, funcdef_no=13421, decl_uid=294381, cgraph_uid=5332, symbol_order=6268)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_2(D)->D.294396._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 13 12 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<Result (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<Result, ChineseCheckers&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEED2Ev, funcdef_no=13423, decl_uid=294318, cgraph_uid=5334, symbol_order=6271)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE")  <var_decl 0x7f1a35ba7630 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE")  <var_decl 0x7f1a35ba7630 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_3(D)->D.294327._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<Result (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<Result, ChineseCheckers&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEED0Ev, funcdef_no=13425, decl_uid=294312, cgraph_uid=5336, symbol_order=6273)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE")  <var_decl 0x7f1a35ba7630 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE")  <var_decl 0x7f1a35ba7630 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_2(D)->D.294327._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 13 12 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<bool (ChineseCheckers::*)(int, const std::vector<std::vector<int> >&), boost::python::default_call_policies, boost::mpl::vector4<bool, ChineseCheckers&, int, const std::vector<std::vector<int> >&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEED2Ev, funcdef_no=13427, decl_uid=294223, cgraph_uid=5338, symbol_order=6276)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE")  <var_decl 0x7f1a35ba7000 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE")  <var_decl 0x7f1a35ba7000 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_3(D)->D.294232._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<bool (ChineseCheckers::*)(int, const std::vector<std::vector<int> >&), boost::python::default_call_policies, boost::mpl::vector4<bool, ChineseCheckers&, int, const std::vector<std::vector<int> >&> > >::~caller_py_function_impl (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEED0Ev, funcdef_no=13429, decl_uid=294217, cgraph_uid=5340, symbol_order=6278)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE")  <var_decl 0x7f1a35ba7000 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":30:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE")  <var_decl 0x7f1a35ba7000 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_2(D)->D.294232._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects21py_function_impl_baseD2Ev") [flags 0x41]  <function_decl 0x7f1a3a03b600 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/boost/python/object/py_function.hpp":30:8 74 {*movdi_internal}
     (nil))
(call_insn/j 13 12 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":30:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::detail::converter_target_type<boost::python::to_python_value<const std::vector<std::vector<std::vector<int> > >&> >::get_pytype (_ZN5boost6python6detail21converter_target_typeINS0_15to_python_valueIRKSt6vectorIS4_IS4_IiSaIiEESaIS6_EESaIS8_EEEEE10get_pytypeEv, funcdef_no=13653, decl_uid=316876, cgraph_uid=5564, symbol_order=7317)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IS4_IiSaIiEESaIS6_EESaIS8_EEE10convertersE")  <var_decl 0x7f1a34c9fa20 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_value.hpp":93:112 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (mem/f/c:DI (reg/f:DI 84) [42 converters+0 S8 A64])) "/usr/include/boost/python/to_python_value.hpp":93:112 74 {*movdi_internal}
     (nil))
(call_insn/j 7 6 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration21to_python_target_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992400 to_python_target_type>) [0 to_python_target_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/to_python_value.hpp":93:112 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration21to_python_target_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992400 to_python_target_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::detail::converter_target_type<boost::python::to_python_value<const std::vector<std::vector<Color> >&> >::get_pytype (_ZN5boost6python6detail21converter_target_typeINS0_15to_python_valueIRKSt6vectorIS4_I5ColorSaIS5_EESaIS7_EEEEE10get_pytypeEv, funcdef_no=13658, decl_uid=317024, cgraph_uid=5569, symbol_order=7322)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_I5ColorSaIS5_EESaIS7_EEE10convertersE")  <var_decl 0x7f1a34c9fea0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_value.hpp":93:112 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (mem/f/c:DI (reg/f:DI 84) [42 converters+0 S8 A64])) "/usr/include/boost/python/to_python_value.hpp":93:112 74 {*movdi_internal}
     (nil))
(call_insn/j 7 6 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration21to_python_target_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992400 to_python_target_type>) [0 to_python_target_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/to_python_value.hpp":93:112 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration21to_python_target_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992400 to_python_target_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::detail::converter_target_type<boost::python::to_python_value<const Result&> >::get_pytype (_ZN5boost6python6detail21converter_target_typeINS0_15to_python_valueIRK6ResultEEE10get_pytypeEv, funcdef_no=13666, decl_uid=317231, cgraph_uid=5577, symbol_order=7330)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK6ResultE10convertersE")  <var_decl 0x7f1a34cc7360 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_value.hpp":93:112 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (mem/f/c:DI (reg/f:DI 84) [42 converters+0 S8 A64])) "/usr/include/boost/python/to_python_value.hpp":93:112 74 {*movdi_internal}
     (nil))
(call_insn/j 7 6 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration21to_python_target_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992400 to_python_target_type>) [0 to_python_target_type S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/to_python_value.hpp":93:112 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration21to_python_target_typeEv") [flags 0x41]  <function_decl 0x7f1a3a992400 to_python_target_type>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function std::_Sp_counted_deleter<void*, boost::python::converter::shared_ptr_deleter, std::allocator<void>, __gnu_cxx::_S_atomic>::_M_destroy (_ZNSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, funcdef_no=13471, decl_uid=307440, cgraph_uid=5382, symbol_order=7109)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 83 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/c++/11/bits/shared_ptr_base.h":445:7 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE")  <var_decl 0x7f1a35649ea0 _ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (plus:DI (reg:DI 85)
            (const_int 16 [0x10]))) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE")  <var_decl 0x7f1a35649ea0 _ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 83 [ this ]) [5 this_1(D)->D.307552._vptr._Sp_counted_base+0 S8 A64])
        (reg/f:DI 84)) "/usr/include/c++/11/bits/shared_ptr_base.h":438:41 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 83 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":394:12 210 {*adddi_1}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 86)) "/usr/include/c++/11/bits/shared_ptr_base.h":394:12 74 {*movdi_internal}
     (nil))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":394:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (const_int 32 [0x20])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ this ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn/j 14 13 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function std::_Sp_counted_deleter<void*, boost::python::converter::shared_ptr_deleter, std::allocator<void>, __gnu_cxx::_S_atomic>::_M_get_deleter (_ZNSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, funcdef_no=13472, decl_uid=307442, cgraph_uid=5383, symbol_order=7110)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/f:DI 86 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/c++/11/bits/shared_ptr_base.h":453:7 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 87 [ __ti ])
        (reg:DI 4 si [ __ti ])) "/usr/include/c++/11/bits/shared_ptr_base.h":453:7 74 {*movdi_internal}
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg/f:DI 82 [ _7 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ __ti ])
                (const_int 8 [0x8])) [6 __ti_4(D)->__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":122:16 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 89)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSN5boost6python9converter18shared_ptr_deleterE")  <var_decl 0x7f1a34d67120 _ZTSN5boost6python9converter18shared_ptr_deleterE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":123:8 74 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 88)
        (reg:DI 89)) "/usr/include/c++/11/typeinfo":123:8 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSN5boost6python9converter18shared_ptr_deleterE")  <var_decl 0x7f1a34d67120 _ZTSN5boost6python9converter18shared_ptr_deleterE>)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _7 ])
            (reg:DI 88))) "/usr/include/c++/11/typeinfo":123:8 12 {*cmpdi_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "/usr/include/c++/11/typeinfo":123:8 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 27)
;;  succ:       5 [30.0% (guessed)]  count:322122544 (estimated locally)
;;              3 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 82 [ _7 ]) [0 *_7+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":123:8 9 {*cmpqi_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) "/usr/include/c++/11/typeinfo":123:8 806 {*jcc}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 41)
;;  succ:       4 [66.0% (guessed)]  count:496068723 (estimated locally) (FALLTHRU)
;;              6 [34.0% (guessed)]  count:255550558 (estimated locally)

;; basic block 4, loop depth 0, count 496068722 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [66.0% (guessed)]  count:496068723 (estimated locally) (FALLTHRU)
(note 17 16 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 17 20 4 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSN5boost6python9converter18shared_ptr_deleterE")  <var_decl 0x7f1a34d67120 _ZTSN5boost6python9converter18shared_ptr_deleterE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":124:22 74 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:DI 91)
        (reg:DI 92)) "/usr/include/c++/11/typeinfo":124:22 74 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:DI 4 si)
        (reg:DI 91)) "/usr/include/c++/11/typeinfo":124:22 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSN5boost6python9converter18shared_ptr_deleterE")  <var_decl 0x7f1a34d67120 _ZTSN5boost6python9converter18shared_ptr_deleterE>)
        (nil)))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _7 ])) "/usr/include/c++/11/typeinfo":124:22 74 {*movdi_internal}
     (nil))
(call_insn/i 23 22 24 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f1a518a3000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/typeinfo":124:22 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f1a518a3000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 23 25 4 (set (reg:SI 84 [ _10 ])
        (reg:SI 0 ax)) "/usr/include/c++/11/typeinfo":124:22 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _10 ])
            (const_int 0 [0]))) "/usr/include/c++/11/typeinfo":123:29 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 45)
            (pc))) "/usr/include/c++/11/typeinfo":123:29 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 45)
;;  succ:       5 [50.0% (guessed)]  count:248034361 (estimated locally) (FALLTHRU)
;;              7 [50.0% (guessed)]  count:248034361 (estimated locally)

;; basic block 5, loop depth 0, count 762356697 (estimated locally), maybe hot
;; Invalid sum of incoming counts 570156905 (estimated locally), should be 762356697 (estimated locally)
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [50.0% (guessed)]  count:248034361 (estimated locally) (FALLTHRU)
;;              2 [30.0% (guessed)]  count:322122544 (estimated locally)
(code_label 27 26 28 5 255 (nil) [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 41 5 (parallel [
            (set (reg/f:DI 85 [ <retval> ])
                (plus:DI (reg/f:DI 86 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":401:23 210 {*adddi_1}
     (nil))
;;  succ:       8 [always]  count:762356697 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 255550558 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       3 [34.0% (guessed)]  count:255550558 (estimated locally)
(code_label 41 29 40 6 257 (nil) [1 uses])
(note 40 41 6 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 6 40 45 6 (set (reg/f:DI 85 [ <retval> ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":459:4 74 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:255550558 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 248034361 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       4 [50.0% (guessed)]  count:248034361 (estimated locally)
(code_label 45 6 44 7 258 (nil) [1 uses])
(note 44 45 5 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 5 44 34 7 (set (reg/f:DI 85 [ <retval> ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":459:4 74 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:248034361 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 1073741824 (estimated locally), maybe hot
;; Invalid sum of incoming counts 1265941616 (estimated locally), should be 1073741824 (estimated locally)
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 [always]  count:248034361 (estimated locally) (FALLTHRU)
;;              5 [always]  count:762356697 (estimated locally) (FALLTHRU)
;;              6 [always]  count:255550558 (estimated locally) (FALLTHRU)
(code_label 34 5 37 8 254 (nil) [0 uses])
(note 37 34 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 37 36 8 (set (reg/i:DI 0 ax)
        (reg/f:DI 85 [ <retval> ])) "/usr/include/c++/11/bits/shared_ptr_base.h":464:7 74 {*movdi_internal}
     (nil))
(insn 36 35 0 8 (use (reg/i:DI 0 ax)) "/usr/include/c++/11/bits/shared_ptr_base.h":464:7 -1
     (nil))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<void (*)(_object*), boost::python::default_call_policies, boost::mpl::vector2<void, _object*> > >::operator() (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEclES6_S6_, funcdef_no=13463, decl_uid=308075, cgraph_uid=5374, symbol_order=7101)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 90 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(insn 3 2 5 2 (set (reg/v/f:DI 91 [ args ])
        (reg:DI 4 si [ args ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 93)
        (mem/f:DI (plus:DI (reg/v/f:DI 91 [ args ])
                (const_int 8 [0x8])) [9 args_4(D)->ob_type+0 S8 A64])) "/usr/include/python3.10/object.h":729:11 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 95)
        (mem:DI (plus:DI (reg/f:DI 93)
                (const_int 168 [0xa8])) [7 _14->tp_flags+0 S8 A64])) "/usr/include/python3.10/object.h":731:20 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 94)
                (and:DI (reg:DI 95)
                    (const_int 67108864 [0x4000000])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":731:20 486 {*anddi_1}
     (expr_list:REG_EQUAL (and:DI (mem:DI (plus:DI (reg/f:DI 93)
                    (const_int 168 [0xa8])) [7 _14->tp_flags+0 S8 A64])
            (const_int 67108864 [0x4000000]))
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 94)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":48:12 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":48:12 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 23)
;;  succ:       4 [100.0% (guessed)]  count:1073312328 (estimated locally)
;;              3 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 429496 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:DI 96)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 2 cx)
        (reg:DI 96)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)
        (nil)))
(insn 16 15 17 3 (set (reg:SI 1 dx)
        (const_int 48 [0x30])) "/usr/include/boost/python/detail/caller.hpp":48:12 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 97)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 4 si)
        (reg:DI 97)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)
        (nil)))
(insn 19 18 20 3 (set (reg:DI 98)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (reg:DI 98)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)
        (nil)))
(call_insn 21 20 23 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":48:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 4, loop depth 0, count 1073312329 (estimated locally), maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:1073312328 (estimated locally)
(code_label 23 21 24 4 261 (nil) [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:DI 99)
        (mem/f:DI (plus:DI (reg/v/f:DI 91 [ args ])
                (const_int 24 [0x18])) [31 MEM[(struct PyTupleObject *)args_4(D)].ob_item[0]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":79:6 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 100)
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [12 MEM[(void (*<T38da>) (struct _object *) &)this_2(D) + 8]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":79:6 74 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg:DI 99)) "/usr/include/boost/python/detail/invoke.hpp":79:6 74 {*movdi_internal}
     (nil))
(call_insn 28 27 29 4 (call (mem:QI (reg/f:DI 100) [0 *_9 S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/invoke.hpp":79:6 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 4 (set (reg/f:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 30 29 34 4 (set (reg/f:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 34 30 35 4 (set (reg:DI 106)
        (mem/c:DI (reg/f:DI 102) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg:DI 106)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (reg/f:DI 102) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 36 35 37 4 (set (mem/c:DI (reg/f:DI 101) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])
        (reg:DI 105)) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:DI 108)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":38:33 74 {*movdi_internal}
     (nil))
(insn 38 37 42 4 (set (reg/f:DI 89 [ <retval> ])
        (reg:DI 108)) "/usr/include/boost/python/object/py_function.hpp":38:33 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
        (nil)))
(insn 42 38 43 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 89 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":39:5 74 {*movdi_internal}
     (nil))
(insn 43 42 0 4 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":39:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073312329 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<void (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<void, ChineseCheckers&> > >::operator() (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEclEP7_objectSG_, funcdef_no=13486, decl_uid=294369, cgraph_uid=5397, symbol_order=7124)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/f:DI 100 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(insn 3 2 5 2 (set (reg/v/f:DI 101 [ args ])
        (reg:DI 4 si [ args ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(note 5 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 5 11 2 (set (reg/f:DI 104)
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ args ])
                (const_int 8 [0x8])) [9 args_4(D)->ob_type+0 S8 A64])) "/usr/include/python3.10/object.h":729:11 74 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 106)
        (mem:DI (plus:DI (reg/f:DI 104)
                (const_int 168 [0xa8])) [7 _31->tp_flags+0 S8 A64])) "/usr/include/python3.10/object.h":731:20 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 105)
                (and:DI (reg:DI 106)
                    (const_int 67108864 [0x4000000])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":731:20 486 {*anddi_1}
     (expr_list:REG_EQUAL (and:DI (mem:DI (plus:DI (reg/f:DI 104)
                    (const_int 168 [0xa8])) [7 _31->tp_flags+0 S8 A64])
            (const_int 67108864 [0x4000000]))
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 105)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":48:12 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":48:12 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 25)
;;  succ:       4 [100.0% (guessed)]  count:1073312328 (estimated locally)
;;              3 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 429496 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 107)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 2 cx)
        (reg:DI 107)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)
        (nil)))
(insn 18 17 19 3 (set (reg:SI 1 dx)
        (const_int 48 [0x30])) "/usr/include/boost/python/detail/caller.hpp":48:12 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 108)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 4 si)
        (reg:DI 108)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)
        (nil)))
(insn 21 20 22 3 (set (reg:DI 109)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 109)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)
        (nil)))
(call_insn 23 22 25 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":48:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 4, loop depth 0, count 1073312329 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:1073312328 (estimated locally)
(code_label 25 23 26 4 265 (nil) [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:DI 110)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:DI 111)
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ args ])
                (const_int 24 [0x18])) [31 MEM[(struct PyTupleObject *)args_4(D)].ob_item[0]+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 110) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (reg:DI 111)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(call_insn 31 30 32 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>) [0 get_lvalue_from_python S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 4 (set (reg/f:DI 99 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 62)
            (pc))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 806 {*jcc}
     (int_list:REG_BR_PROB 88798452 (nil))
 -> 62)
;;  succ:       8 [8.3% (guessed)]  count:88762929 (estimated locally)
;;              5 [91.7% (guessed)]  count:984549400 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 984549400 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [91.7% (guessed)]  count:984549400 (estimated locally) (FALLTHRU)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg/f:DI 84 [ _11 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 100 [ this ])
                (const_int 8 [0x8])) [0 MEM[(struct  &)this_2(D) + 8].__pfn+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":92:14 74 {*movdi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:DI 85 [ _12 ])
        (reg/f:DI 84 [ _11 ])) "/usr/include/boost/python/detail/invoke.hpp":92:14 74 {*movdi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:DI 112)
        (mem/j:DI (plus:DI (reg/f:DI 100 [ this ])
                (const_int 16 [0x10])) [0 MEM[(struct  &)this_2(D) + 8].__delta+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":92:14 74 {*movdi_internal}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg/f:DI 98 [ _42 ])
                (plus:DI (reg/f:DI 99 [ <retval> ])
                    (reg:DI 112)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":92:14 210 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 99 [ <retval> ])
            (mem/j:DI (plus:DI (reg/f:DI 100 [ this ])
                    (const_int 16 [0x10])) [0 MEM[(struct  &)this_2(D) + 8].__delta+0 S8 A64]))
        (nil)))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 113)
                (and:DI (reg:DI 85 [ _12 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":92:14 486 {*anddi_1}
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 113)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/invoke.hpp":92:14 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "/usr/include/boost/python/detail/invoke.hpp":92:14 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 46)
;;  succ:       6 [50.0% (guessed)]  count:492274700 (estimated locally) (FALLTHRU)
;;              7 [50.0% (guessed)]  count:492274700 (estimated locally)

;; basic block 6, loop depth 0, count 492274700 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [50.0% (guessed)]  count:492274700 (estimated locally) (FALLTHRU)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg/f:DI 114)
        (mem/f:DI (reg/f:DI 98 [ _42 ]) [5 MEM[(int (*) () * *)_42]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":92:14 74 {*movdi_internal}
     (nil))
(insn 45 44 46 6 (set (reg/f:DI 84 [ _11 ])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 114)
                    (reg:DI 85 [ _12 ]))
                (const_int -1 [0xffffffffffffffff])) [38 *_20+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":92:14 74 {*movdi_internal}
     (nil))
;;  succ:       7 [always]  count:492274700 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 984549400 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5 [50.0% (guessed)]  count:492274700 (estimated locally)
;;              6 [always]  count:492274700 (estimated locally) (FALLTHRU)
(code_label 46 45 47 7 267 (nil) [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg:DI 5 di)
        (reg/f:DI 98 [ _42 ])) "/usr/include/boost/python/detail/invoke.hpp":92:14 74 {*movdi_internal}
     (nil))
(call_insn 49 48 50 7 (call (mem:QI (reg/f:DI 84 [ _11 ]) [0 *iftmp.156_25 S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/invoke.hpp":92:14 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 50 49 51 7 (set (reg/f:DI 115)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 51 50 55 7 (set (reg/f:DI 116)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 55 51 56 7 (set (reg:DI 120)
        (mem/c:DI (reg/f:DI 116) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 56 55 57 7 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg:DI 120)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (reg/f:DI 116) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 57 56 6 7 (set (mem/c:DI (reg/f:DI 115) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])
        (reg:DI 119)) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 6 57 7 7 (set (reg:DI 103)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/detail/caller.hpp":240:44 74 {*movdi_internal}
     (nil))
(insn 7 6 62 7 (set (reg/f:DI 99 [ <retval> ])
        (reg:DI 103)) "/usr/include/boost/python/detail/caller.hpp":240:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
        (nil)))
;;  succ:       8 [always]  count:984549400 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 1073312329 (estimated locally), maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 [always]  count:984549400 (estimated locally) (FALLTHRU)
;;              4 [8.3% (guessed)]  count:88762929 (estimated locally)
(code_label 62 7 65 8 264 (nil) [1 uses])
(note 65 62 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 65 64 8 (set (reg/i:DI 0 ax)
        (reg/f:DI 99 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":39:5 74 {*movdi_internal}
     (nil))
(insn 64 63 0 8 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":39:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1073312329 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<int, ChineseCheckers&> > >::operator() (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEclEP7_objectSG_, funcdef_no=13477, decl_uid=294576, cgraph_uid=5388, symbol_order=7115)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 100 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(insn 3 2 5 2 (set (reg/v/f:DI 101 [ args ])
        (reg:DI 4 si [ args ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 103)
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ args ])
                (const_int 8 [0x8])) [9 args_4(D)->ob_type+0 S8 A64])) "/usr/include/python3.10/object.h":729:11 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 105)
        (mem:DI (plus:DI (reg/f:DI 103)
                (const_int 168 [0xa8])) [7 _18->tp_flags+0 S8 A64])) "/usr/include/python3.10/object.h":731:20 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 104)
                (and:DI (reg:DI 105)
                    (const_int 67108864 [0x4000000])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":731:20 486 {*anddi_1}
     (expr_list:REG_EQUAL (and:DI (mem:DI (plus:DI (reg/f:DI 103)
                    (const_int 168 [0xa8])) [7 _18->tp_flags+0 S8 A64])
            (const_int 67108864 [0x4000000]))
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 104)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":48:12 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":48:12 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 23)
;;  succ:       4 [100.0% (guessed)]  count:1073312328 (estimated locally)
;;              3 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 429496 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:DI 106)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 2 cx)
        (reg:DI 106)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)
        (nil)))
(insn 16 15 17 3 (set (reg:SI 1 dx)
        (const_int 48 [0x30])) "/usr/include/boost/python/detail/caller.hpp":48:12 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 107)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 4 si)
        (reg:DI 107)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)
        (nil)))
(insn 19 18 20 3 (set (reg:DI 108)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (reg:DI 108)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)
        (nil)))
(call_insn 21 20 23 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":48:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 4, loop depth 0, count 1073312329 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:1073312328 (estimated locally)
(code_label 23 21 24 4 277 (nil) [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/f:DI 109)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 110)
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ args ])
                (const_int 24 [0x18])) [31 MEM[(struct PyTupleObject *)args_4(D)].ob_item[0]+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 109) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg:DI 110)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(call_insn 29 28 30 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>) [0 get_lvalue_from_python S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 30 29 31 4 (set (reg/f:DI 99 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 806 {*jcc}
     (int_list:REG_BR_PROB 166107868 (nil))
 -> 58)
;;  succ:       8 [15.5% (guessed)]  count:166041421 (estimated locally)
;;              5 [84.5% (guessed)]  count:907270908 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 907270908 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [84.5% (guessed)]  count:907270908 (estimated locally) (FALLTHRU)
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:DI 85 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 100 [ this ])
                (const_int 8 [0x8])) [0 MEM <int ChineseCheckers::<T285c5> (struct ChineseCheckers *) *> [(struct  &)this_2(D) + 8]+0 S8 A64])) 74 {*movdi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:DI 91 [ _24 ])
        (reg/f:DI 85 [ _15 ])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 36 35 37 5 (set (reg:DI 111)
        (mem:DI (plus:DI (reg/f:DI 100 [ this ])
                (const_int 16 [0x10])) [0 MEM <long int> [(struct  &)this_2(D) + 16]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg/f:DI 84 [ _11 ])
                (plus:DI (reg/f:DI 99 [ <retval> ])
                    (reg:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:25 210 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 99 [ <retval> ])
            (mem:DI (plus:DI (reg/f:DI 100 [ this ])
                    (const_int 16 [0x10])) [0 MEM <long int> [(struct  &)this_2(D) + 16]+0 S8 A64]))
        (nil)))
(insn 38 37 39 5 (parallel [
            (set (reg:DI 112)
                (and:DI (reg:DI 91 [ _24 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:25 486 {*anddi_1}
     (nil))
(insn 39 38 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 112)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/invoke.hpp":86:25 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "/usr/include/boost/python/detail/invoke.hpp":86:25 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 44)
;;  succ:       6 [50.0% (guessed)]  count:453635454 (estimated locally) (FALLTHRU)
;;              7 [50.0% (guessed)]  count:453635454 (estimated locally)

;; basic block 6, loop depth 0, count 453635454 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [50.0% (guessed)]  count:453635454 (estimated locally) (FALLTHRU)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:DI 113)
        (mem/f:DI (reg/f:DI 84 [ _11 ]) [5 MEM[(int (*) () * *)_11]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 43 42 44 6 (set (reg/f:DI 85 [ _15 ])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 113)
                    (reg:DI 91 [ _24 ]))
                (const_int -1 [0xffffffffffffffff])) [38 *_32+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
;;  succ:       7 [always]  count:453635454 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 907270908 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5 [50.0% (guessed)]  count:453635454 (estimated locally)
;;              6 [always]  count:453635454 (estimated locally) (FALLTHRU)
(code_label 44 43 45 7 279 (nil) [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _11 ])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(call_insn 47 46 48 7 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 85 [ _15 ]) [0 *iftmp.125_37 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/invoke.hpp":86:25 824 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 48 47 49 7 (set (reg:SI 97 [ _38 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/invoke.hpp":86:25 75 {*movsi_internal}
     (nil))
(insn 49 48 50 7 (set (reg:DI 114)
        (sign_extend:DI (reg:SI 97 [ _38 ]))) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 147 {*extendsidi2_rex64}
     (nil))
(insn 50 49 51 7 (set (reg:DI 5 di)
        (reg:DI 114)) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 74 {*movdi_internal}
     (nil))
(call_insn/j 51 50 58 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyLong_FromLong") [flags 0x41]  <function_decl 0x7f1a40484b00 PyLong_FromLong>) [0 PyLong_FromLong S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("PyLong_FromLong") [flags 0x41]  <function_decl 0x7f1a40484b00 PyLong_FromLong>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:907270908 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 8, loop depth 0, count 166041421 (estimated locally), maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       4 [15.5% (guessed)]  count:166041421 (estimated locally)
(code_label 58 51 61 8 276 (nil) [1 uses])
(note 61 58 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 61 60 8 (set (reg/i:DI 0 ax)
        (reg/f:DI 99 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":39:5 74 {*movdi_internal}
     (nil))
(insn 60 59 0 8 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":39:5 -1
     (nil))
;;  succ:       EXIT [always]  count:166041421 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<Result (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<Result, ChineseCheckers&> > >::operator() (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEclEP7_objectSH_, funcdef_no=13489, decl_uid=294300, cgraph_uid=5400, symbol_order=7127)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/f:DI 100 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(insn 3 2 5 2 (set (reg/v/f:DI 101 [ args ])
        (reg:DI 4 si [ args ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(note 5 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 7 2 (set (reg/f:DI 103)
        (const_int 40 [0x28])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.329222+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 103) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object/py_function.hpp":36:15 1159 {stack_protect_set_1_di}
     (nil))
(insn 10 7 11 2 (set (reg/f:DI 104)
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ args ])
                (const_int 8 [0x8])) [9 args_4(D)->ob_type+0 S8 A64])) "/usr/include/python3.10/object.h":729:11 74 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 106)
        (mem:DI (plus:DI (reg/f:DI 104)
                (const_int 168 [0xa8])) [7 _18->tp_flags+0 S8 A64])) "/usr/include/python3.10/object.h":731:20 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 105)
                (and:DI (reg:DI 106)
                    (const_int 67108864 [0x4000000])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":731:20 486 {*anddi_1}
     (expr_list:REG_EQUAL (and:DI (mem:DI (plus:DI (reg/f:DI 104)
                    (const_int 168 [0xa8])) [7 _18->tp_flags+0 S8 A64])
            (const_int 67108864 [0x4000000]))
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 105)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":48:12 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":48:12 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 25)
;;  succ:       4 [100.0% (guessed)]  count:1073312328 (estimated locally)
;;              3 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 429496 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 107)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 2 cx)
        (reg:DI 107)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)
        (nil)))
(insn 18 17 19 3 (set (reg:SI 1 dx)
        (const_int 48 [0x30])) "/usr/include/boost/python/detail/caller.hpp":48:12 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 108)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 4 si)
        (reg:DI 108)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)
        (nil)))
(insn 21 20 22 3 (set (reg:DI 109)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 109)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)
        (nil)))
(call_insn 23 22 25 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":48:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 4, loop depth 0, count 1073312329 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:1073312328 (estimated locally)
(code_label 25 23 26 4 286 (nil) [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:DI 110)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:DI 111)
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ args ])
                (const_int 24 [0x18])) [31 MEM[(struct PyTupleObject *)args_4(D)].ob_item[0]+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 110) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (reg:DI 111)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(call_insn 31 30 32 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>) [0 get_lvalue_from_python S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 4 (set (reg/f:DI 99 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 62)
            (pc))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 806 {*jcc}
     (int_list:REG_BR_PROB 166107868 (nil))
 -> 62)
;;  succ:       8 [15.5% (guessed)]  count:166041421 (estimated locally)
;;              5 [84.5% (guessed)]  count:907270908 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 907270908 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [84.5% (guessed)]  count:907270908 (estimated locally) (FALLTHRU)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg/f:DI 85 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 100 [ this ])
                (const_int 8 [0x8])) [0 MEM <Result ChineseCheckers::<T285bb> (struct ChineseCheckers *) *> [(struct  &)this_2(D) + 8]+0 S8 A64])) 74 {*movdi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:DI 91 [ _24 ])
        (reg/f:DI 85 [ _15 ])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:DI 112)
        (mem:DI (plus:DI (reg/f:DI 100 [ this ])
                (const_int 16 [0x10])) [0 MEM <long int> [(struct  &)this_2(D) + 16]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg/f:DI 84 [ _11 ])
                (plus:DI (reg/f:DI 99 [ <retval> ])
                    (reg:DI 112)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:25 210 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 99 [ <retval> ])
            (mem:DI (plus:DI (reg/f:DI 100 [ this ])
                    (const_int 16 [0x10])) [0 MEM <long int> [(struct  &)this_2(D) + 16]+0 S8 A64]))
        (nil)))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 113)
                (and:DI (reg:DI 91 [ _24 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:25 486 {*anddi_1}
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 113)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/invoke.hpp":86:25 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "/usr/include/boost/python/detail/invoke.hpp":86:25 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 46)
;;  succ:       6 [50.0% (guessed)]  count:453635454 (estimated locally) (FALLTHRU)
;;              7 [50.0% (guessed)]  count:453635454 (estimated locally)

;; basic block 6, loop depth 0, count 453635454 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [50.0% (guessed)]  count:453635454 (estimated locally) (FALLTHRU)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg/f:DI 114)
        (mem/f:DI (reg/f:DI 84 [ _11 ]) [5 MEM[(int (*) () * *)_11]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 45 44 46 6 (set (reg/f:DI 85 [ _15 ])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 114)
                    (reg:DI 91 [ _24 ]))
                (const_int -1 [0xffffffffffffffff])) [38 *_32+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
;;  succ:       7 [always]  count:453635454 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 907270908 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5 [50.0% (guessed)]  count:453635454 (estimated locally)
;;              6 [always]  count:453635454 (estimated locally) (FALLTHRU)
(code_label 46 45 47 7 288 (nil) [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _11 ])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(call_insn 49 48 50 7 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 85 [ _15 ]) [0 *iftmp.167_37 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/invoke.hpp":86:25 824 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 50 49 51 7 (set (reg:SI 97 [ _38 ])
        (reg:SI 0 ax)) "/usr/include/boost/python/detail/invoke.hpp":86:25 75 {*movsi_internal}
     (nil))
(insn 51 50 52 7 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [403 D.329218+0 S4 A32])
        (reg:SI 97 [ _38 ])) "/usr/include/boost/python/detail/invoke.hpp":86:25 75 {*movsi_internal}
     (nil))
(insn 52 51 53 7 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/to_python_value.hpp":156:72 210 {*adddi_1}
     (nil))
(insn 53 52 54 7 (set (reg/f:DI 116)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK6ResultE10convertersE")  <var_decl 0x7f1a34cc7360 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
(insn 54 53 55 7 (set (reg:DI 4 si)
        (reg:DI 115)) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
(insn 55 54 56 7 (set (reg:DI 5 di)
        (mem/f/c:DI (reg/f:DI 116) [42 converters+0 S8 A64])) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
(call_insn 56 55 57 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration9to_pythonEPVKv") [flags 0x41]  <function_decl 0x7f1a3a992100 to_python>) [0 to_python S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/to_python_value.hpp":156:72 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration9to_pythonEPVKv") [flags 0x41]  <function_decl 0x7f1a3a992100 to_python>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 57 56 62 7 (set (reg/f:DI 99 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:907270908 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 1073312329 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always]  count:907270908 (estimated locally) (FALLTHRU)
;;              4 [15.5% (guessed)]  count:166041421 (estimated locally)
(code_label 62 57 71 8 285 (nil) [1 uses])
(note 71 62 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 71 64 8 (set (reg/f:DI 118)
        (const_int 40 [0x28])) "/usr/include/boost/python/object/py_function.hpp":39:5 74 {*movdi_internal}
     (nil))
(insn 64 63 65 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.329222+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 118) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/boost/python/object/py_function.hpp":39:5 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 65 64 72 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "/usr/include/boost/python/object/py_function.hpp":39:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 68)
;;  succ:       10 [100.0% (guessed)]  count:1072883005 (estimated locally)
;;              9 [0.0% (guessed)]  count:429324 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 429324 (estimated locally)
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [0.0% (guessed)]  count:429324 (estimated locally) (FALLTHRU)
(note 72 65 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 66 72 68 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":39:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 10, loop depth 0, count 1072883005 (estimated locally), maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       8 [100.0% (guessed)]  count:1072883005 (estimated locally)
(code_label 68 66 73 10 289 (nil) [1 uses])
(note 73 68 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 73 70 10 (set (reg/i:DI 0 ax)
        (reg/f:DI 99 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":39:5 74 {*movdi_internal}
     (nil))
(insn 70 69 0 10 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":39:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1072883005 (estimated locally) (FALLTHRU)


;; Function std::_Rb_tree<std::vector<std::vector<Color> >, std::pair<const std::vector<std::vector<Color> >, int>, std::_Select1st<std::pair<const std::vector<std::vector<Color> >, int> >, std::less<std::vector<std::vector<Color> > >, std::allocator<std::pair<const std::vector<std::vector<Color> >, int> > >::_M_erase.isra (_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E.isra.0, funcdef_no=13781, decl_uid=328769, cgraph_uid=6474, symbol_order=8341)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 236223200 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:236223200 (estimated locally) (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 93 [ __x ])
        (reg:DI 5 di [ __x ])) "/usr/include/c++/11/bits/stl_tree.h":1883:5 74 {*movdi_internal}
     (nil))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ __x ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":1887:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) "/usr/include/c++/11/bits/stl_tree.h":1887:18 806 {*jcc}
     (int_list:REG_BR_PROB 837518628 (nil))
 -> 12)
;;  succ:       3 [78.0% (guessed)]  count:184254096 (estimated locally)
;;              13 [22.0% (guessed)]  count:51969104 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 1, count 212600879 (estimated locally), maybe hot
;; Invalid sum of incoming counts 837518623 (estimated locally), should be 212600879 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       12 [always]  count:653264527 (estimated locally) (FALLTHRU)
;;              2 [78.0% (guessed)]  count:184254096 (estimated locally)
(code_label 12 8 13 3 301 (nil) [1 uses])
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:DI 94)
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ __x ])
                (const_int 24 [0x18])) [110 MEM[(struct _Rb_tree_node_base *)__x_28]._M_right+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":1889:12 74 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg:DI 94)) "/usr/include/c++/11/bits/stl_tree.h":1889:12 74 {*movdi_internal}
     (nil))
(call_insn 16 15 17 3 (call (mem:QI (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ed00 _M_erase.isra>) [0 _M_erase.isra S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":1889:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ed00 _M_erase.isra>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 3 (set (reg/f:DI 83 [ _4 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ __x ])
                (const_int 16 [0x10])) [110 MEM[(struct _Rb_tree_node_base *)__x_28]._M_left+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":780:52 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg/f:DI 84 [ _16 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ __x ])
                (const_int 40 [0x28])) [115 MEM[(struct vector *)__x_28 + 32B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg/v/f:DI 87 [ __first ])
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ __x ])
                (const_int 32 [0x20])) [115 MEM[(struct vector *)__x_28 + 32B].D.254077._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 84 [ _16 ])
            (reg/v/f:DI 87 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 21 20 45 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 51)
;;  succ:       4 [89.0% (guessed)]  count:189214782 (estimated locally) (FALLTHRU)
;;              9 [11.0% (guessed)]  count:23386097 (estimated locally)

;; basic block 4, loop depth 2, count 6776287092 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       7 [always]  count:6587072302 (estimated locally) (FALLTHRU)
;;              3 [89.0% (guessed)]  count:189214782 (estimated locally) (FALLTHRU)
(code_label 45 21 22 4 306 (nil) [0 uses])
(note 22 45 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:DI 88 [ _25 ])
        (mem/f:DI (reg/v/f:DI 87 [ __first ]) [118 MEM[(Color * *)__first_14]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _25 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 38)
;;  succ:       5 [53.5% (guessed)]  count:3623280700 (estimated locally) (FALLTHRU)
;;              6 [46.5% (guessed)]  count:3153006392 (estimated locally)

;; basic block 5, loop depth 2, count 3623280699 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [53.5% (guessed)]  count:3623280700 (estimated locally) (FALLTHRU)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg/f:DI 96)
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ __first ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__first_14 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:DI 95)
                (minus:DI (reg/f:DI 96)
                    (reg/f:DI 88 [ _25 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 87 [ __first ])
                    (const_int 16 [0x10])) [118 MEM[(Color * *)__first_14 + 16B]+0 S8 A64])
            (reg/f:DI 88 [ _25 ]))
        (nil)))
(insn 29 28 30 5 (set (reg:DI 4 si)
        (reg:DI 95)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _25 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 31 30 32 5 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 5 (parallel [
            (set (reg/v/f:DI 87 [ __first ])
                (plus:DI (reg/v/f:DI 87 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 33 32 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 84 [ _16 ])
            (reg/v/f:DI 87 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 34 33 38 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 43)
;;  succ:       7 [89.0% (guessed)]  count:3224719824 (estimated locally)
;;              8 [11.0% (guessed)]  count:398560875 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 2, count 3777924130 (estimated locally), maybe hot
;; Invalid sum of incoming counts 3153006392 (estimated locally), should be 3777924130 (estimated locally)
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [46.5% (guessed)]  count:3153006392 (estimated locally)
(code_label 38 34 39 6 303 (nil) [1 uses])
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (parallel [
            (set (reg/v/f:DI 87 [ __first ])
                (plus:DI (reg/v/f:DI 87 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 41 40 42 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 84 [ _16 ])
            (reg/v/f:DI 87 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 42 41 43 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 48)
;;  succ:       7 [89.0% (guessed)]  count:3362352478 (estimated locally) (FALLTHRU)
;;              8 [11.0% (guessed)]  count:415571652 (estimated locally)

;; basic block 7, loop depth 2, count 6587072302 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [89.0% (guessed)]  count:3362352478 (estimated locally) (FALLTHRU)
;;              5 [89.0% (guessed)]  count:3224719824 (estimated locally)
(code_label 43 42 44 7 304 (nil) [1 uses])
(note 44 43 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       4 [always]  count:6587072302 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 1, count 814132527 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6 [11.0% (guessed)]  count:415571652 (estimated locally)
;;              5 [11.0% (guessed)]  count:398560875 (estimated locally) (FALLTHRU)
(code_label 48 44 49 8 305 (nil) [1 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg/v/f:DI 87 [ __first ])
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ __x ])
                (const_int 32 [0x20])) [115 MEM[(struct _Vector_base *)__x_28 + 32B]._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       9 [always]  count:814132527 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 1, count 837518623 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [always]  count:814132527 (estimated locally) (FALLTHRU)
;;              3 [11.0% (guessed)]  count:23386097 (estimated locally)
(code_label 51 50 52 9 302 (nil) [1 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 70)
;;  succ:       10 [53.5% (guessed)]  count:447821207 (estimated locally) (FALLTHRU)
;;              11 [46.5% (guessed)]  count:389697416 (estimated locally)

;; basic block 10, loop depth 1, count 447821204 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [53.5% (guessed)]  count:447821207 (estimated locally) (FALLTHRU)
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 10 (set (reg/f:DI 98)
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ __x ])
                (const_int 48 [0x30])) [115 MEM[(struct _Vector_base *)__x_28 + 32B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 57 56 58 10 (parallel [
            (set (reg:DI 97)
                (minus:DI (reg/f:DI 98)
                    (reg/v/f:DI 87 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 93 [ __x ])
                    (const_int 48 [0x30])) [115 MEM[(struct _Vector_base *)__x_28 + 32B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])
            (reg/v/f:DI 87 [ __first ]))
        (nil)))
(insn 58 57 59 10 (set (reg:DI 4 si)
        (reg:DI 97)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 59 58 60 10 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 60 59 61 10 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 61 60 62 10 (set (reg:DI 4 si)
        (const_int 64 [0x40])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 62 61 63 10 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ __x ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 63 62 64 10 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 64 63 65 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ _4 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":1887:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 65 64 70 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "/usr/include/c++/11/bits/stl_tree.h":1887:18 806 {*jcc}
     (int_list:REG_BR_PROB 837518628 (nil))
 -> 77)
;;  succ:       12 [78.0% (guessed)]  count:349300540 (estimated locally)
;;              13 [22.0% (guessed)]  count:98520664 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 1, count 389697419 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9 [46.5% (guessed)]  count:389697416 (estimated locally)
(code_label 70 65 71 11 307 (nil) [1 uses])
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 11 (set (reg:DI 4 si)
        (const_int 64 [0x40])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 73 72 74 11 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ __x ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 74 73 75 11 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 75 74 76 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ _4 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":1887:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 76 75 77 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 81)
            (pc))) "/usr/include/c++/11/bits/stl_tree.h":1887:18 806 {*jcc}
     (int_list:REG_BR_PROB 236223204 (nil))
 -> 81)
;;  succ:       12 [78.0% (guessed)]  count:303963987 (estimated locally) (FALLTHRU)
;;              13 [22.0% (guessed)]  count:85733432 (estimated locally)

;; basic block 12, loop depth 1, count 653264527 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [78.0% (guessed)]  count:303963987 (estimated locally) (FALLTHRU)
;;              10 [78.0% (guessed)]  count:349300540 (estimated locally)
(code_label 77 76 78 12 308 (nil) [1 uses])
(note 78 77 4 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 4 78 81 12 (set (reg/v/f:DI 93 [ __x ])
        (reg/f:DI 83 [ _4 ])) "/usr/include/c++/11/bits/stl_tree.h":1883:5 74 {*movdi_internal}
     (nil))
;;  succ:       3 [always]  count:653264527 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 236223200 (estimated locally), maybe hot
;;  prev block 12, next block 1, flags: (RTL)
;;  pred:       2 [22.0% (guessed)]  count:51969104 (estimated locally) (FALLTHRU)
;;              10 [22.0% (guessed)]  count:98520664 (estimated locally) (FALLTHRU)
;;              11 [22.0% (guessed)]  count:85733432 (estimated locally)
(code_label 81 4 82 13 300 (nil) [1 uses])
(note 82 81 0 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:236223200 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::value_holder<ChineseCheckers>::~value_holder (_ZN5boost6python7objects12value_holderI15ChineseCheckersED2Ev, funcdef_no=13431, decl_uid=281201, cgraph_uid=5342, symbol_order=6281)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 111 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/value_holder.hpp":39:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 113)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE")  <var_decl 0x7f1a3642d900 _ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/value_holder.hpp":39:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 112)
        (plus:DI (reg:DI 113)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/value_holder.hpp":39:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE")  <var_decl 0x7f1a3642d900 _ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 111 [ this ]) [5 this_4(D)->D.281570._vptr.instance_holder+0 S8 A64])
        (reg/f:DI 112)) "/usr/include/boost/python/object/value_holder.hpp":39:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 83 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 120 [0x78])) [140 MEM[(struct vector *)this_4(D) + 120B].D.257921._M_impl.D.257266._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ _10 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 18)
;;  succ:       3 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
;;              4 [46.5% (guessed)]  count:499612072 (estimated locally)

;; basic block 3, loop depth 0, count 574129732 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 115)
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 136 [0x88])) [140 MEM[(struct _Vector_base *)this_4(D) + 120B]._M_impl.D.257266._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg:DI 114)
                (minus:DI (reg/f:DI 115)
                    (reg/f:DI 83 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                    (const_int 136 [0x88])) [140 MEM[(struct _Vector_base *)this_4(D) + 120B]._M_impl.D.257266._M_end_of_storage+0 S8 A64])
            (reg/f:DI 83 [ _10 ]))
        (nil)))
(insn 15 14 16 3 (set (reg:DI 4 si)
        (reg:DI 114)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _10 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 17 16 18 3 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       4 [always]  count:574129732 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [46.5% (guessed)]  count:499612072 (estimated locally)
;;              3 [always]  count:574129732 (estimated locally) (FALLTHRU)
(code_label 18 17 19 4 319 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:DI 116)
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 88 [0x58])) [110 MEM[(const struct _Rb_tree *)this_4(D) + 72B]._M_impl.D.255745._M_header._M_parent+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":984:17 74 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg:DI 116)) "/usr/include/c++/11/bits/stl_tree.h":984:17 74 {*movdi_internal}
     (nil))
(call_insn 22 21 23 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ed00 _M_erase.isra>) [0 _M_erase.isra S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":984:17 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ed00 _M_erase.isra>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 4 (set (reg/f:DI 91 [ _29 ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 48 [0x30])) [121 MEM[(struct vector *)this_4(D) + 40B].D.255078._M_impl.D.254423._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/v/f:DI 110 [ __first ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 40 [0x28])) [121 MEM[(struct vector *)this_4(D) + 40B].D.255078._M_impl.D.254423._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ _29 ])
            (reg/v/f:DI 110 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 26 25 84 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 90)
;;  succ:       5 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
;;              16 [11.0% (guessed)]  count:118111600 (estimated locally)

;; basic block 5, loop depth 1, count 8687547438 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       14 [always]  count:7731917225 (estimated locally) (FALLTHRU)
;;              4 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
(code_label 84 26 27 5 329 (nil) [0 uses])
(note 27 84 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:DI 94 [ _39 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ __first ])
                (const_int 8 [0x8])) [124 MEM[(struct vector * *)__first_36 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (set (reg/v/f:DI 109 [ __first ])
        (mem/f:DI (reg/v/f:DI 110 [ __first ]) [124 MEM[(struct vector * *)__first_36]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ _39 ])
            (reg/v/f:DI 109 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 31 30 55 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 61)
;;  succ:       6 [89.0% (guessed)]  count:7731917225 (estimated locally) (FALLTHRU)
;;              11 [11.0% (guessed)]  count:955630213 (estimated locally)

;; basic block 6, loop depth 2, count 70290157048 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       9 [always]  count:62558239945 (estimated locally) (FALLTHRU)
;;              5 [89.0% (guessed)]  count:7731917225 (estimated locally) (FALLTHRU)
(code_label 55 31 32 6 325 (nil) [0 uses])
(note 32 55 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:DI 97 [ _48 ])
        (mem/f:DI (reg/v/f:DI 109 [ __first ]) [142 MEM[(int * *)__first_37]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ _48 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 48)
;;  succ:       7 [53.5% (guessed)]  count:37584146889 (estimated locally) (FALLTHRU)
;;              8 [46.5% (guessed)]  count:32706010159 (estimated locally)

;; basic block 7, loop depth 2, count 37584146877 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [53.5% (guessed)]  count:37584146889 (estimated locally) (FALLTHRU)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg/f:DI 118)
        (mem/f:DI (plus:DI (reg/v/f:DI 109 [ __first ])
                (const_int 16 [0x10])) [142 MEM[(int * *)__first_37 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 38 37 39 7 (parallel [
            (set (reg:DI 117)
                (minus:DI (reg/f:DI 118)
                    (reg/f:DI 97 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 109 [ __first ])
                    (const_int 16 [0x10])) [142 MEM[(int * *)__first_37 + 16B]+0 S8 A64])
            (reg/f:DI 97 [ _48 ]))
        (nil)))
(insn 39 38 40 7 (set (reg:DI 4 si)
        (reg:DI 117)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 40 39 41 7 (set (reg:DI 5 di)
        (reg/f:DI 97 [ _48 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 41 40 42 7 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 42 41 43 7 (parallel [
            (set (reg/v/f:DI 109 [ __first ])
                (plus:DI (reg/v/f:DI 109 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 43 42 44 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ _39 ])
            (reg/v/f:DI 109 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 44 43 48 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 53)
;;  succ:       9 [89.0% (guessed)]  count:33449890743 (estimated locally)
;;              10 [11.0% (guessed)]  count:4134256134 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 2, count 32706010318 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6 [46.5% (guessed)]  count:32706010159 (estimated locally)
(code_label 48 44 49 8 322 (nil) [1 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (parallel [
            (set (reg/v/f:DI 109 [ __first ])
                (plus:DI (reg/v/f:DI 109 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 51 50 52 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ _39 ])
            (reg/v/f:DI 109 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 52 51 53 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 58)
;;  succ:       9 [89.0% (guessed)]  count:29108349203 (estimated locally) (FALLTHRU)
;;              10 [11.0% (guessed)]  count:3597661115 (estimated locally)

;; basic block 9, loop depth 2, count 62558239945 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [89.0% (guessed)]  count:29108349203 (estimated locally) (FALLTHRU)
;;              7 [89.0% (guessed)]  count:33449890743 (estimated locally)
(code_label 53 52 54 9 323 (nil) [1 uses])
(note 54 53 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       6 [always]  count:62558239945 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 1, count 7731917250 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8 [11.0% (guessed)]  count:3597661115 (estimated locally)
;;              7 [11.0% (guessed)]  count:4134256134 (estimated locally) (FALLTHRU)
(code_label 58 54 59 10 324 (nil) [1 uses])
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg/v/f:DI 109 [ __first ])
        (mem/f:DI (reg/v/f:DI 110 [ __first ]) [124 MEM[(struct vector * *)__first_36]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       11 [always]  count:7731917250 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 1, count 8687547438 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [always]  count:7731917250 (estimated locally) (FALLTHRU)
;;              5 [11.0% (guessed)]  count:955630213 (estimated locally)
(code_label 61 60 62 11 321 (nil) [1 uses])
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 109 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 64 63 65 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 77)
;;  succ:       12 [53.5% (guessed)]  count:4645231605 (estimated locally) (FALLTHRU)
;;              13 [46.5% (guessed)]  count:4042315833 (estimated locally)

;; basic block 12, loop depth 1, count 4645231577 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [53.5% (guessed)]  count:4645231605 (estimated locally) (FALLTHRU)
(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (set (reg/f:DI 120)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ __first ])
                (const_int 16 [0x10])) [124 MEM[(struct vector * *)__first_36 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 67 66 68 12 (parallel [
            (set (reg:DI 119)
                (minus:DI (reg/f:DI 120)
                    (reg/v/f:DI 109 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 110 [ __first ])
                    (const_int 16 [0x10])) [124 MEM[(struct vector * *)__first_36 + 16B]+0 S8 A64])
            (reg/v/f:DI 109 [ __first ]))
        (nil)))
(insn 68 67 69 12 (set (reg:DI 4 si)
        (reg:DI 119)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 69 68 70 12 (set (reg:DI 5 di)
        (reg/v/f:DI 109 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 70 69 71 12 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 71 70 72 12 (parallel [
            (set (reg/v/f:DI 110 [ __first ])
                (plus:DI (reg/v/f:DI 110 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 72 71 73 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ _29 ])
            (reg/v/f:DI 110 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 73 72 77 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 82)
;;  succ:       14 [89.0% (guessed)]  count:4134256106 (estimated locally)
;;              15 [11.0% (guessed)]  count:510975471 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 1, count 4042315861 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       11 [46.5% (guessed)]  count:4042315833 (estimated locally)
(code_label 77 73 78 13 326 (nil) [1 uses])
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 13 (parallel [
            (set (reg/v/f:DI 110 [ __first ])
                (plus:DI (reg/v/f:DI 110 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 80 79 81 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ _29 ])
            (reg/v/f:DI 110 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 81 80 82 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 87)
;;  succ:       14 [89.0% (guessed)]  count:3597661119 (estimated locally) (FALLTHRU)
;;              15 [11.0% (guessed)]  count:444654742 (estimated locally)

;; basic block 14, loop depth 1, count 7731917225 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [89.0% (guessed)]  count:3597661119 (estimated locally) (FALLTHRU)
;;              12 [89.0% (guessed)]  count:4134256106 (estimated locally)
(code_label 82 81 83 14 327 (nil) [1 uses])
(note 83 82 87 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 [always]  count:7731917225 (estimated locally) (FALLTHRU)

;; basic block 15, loop depth 0, count 955630213 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       13 [11.0% (guessed)]  count:444654742 (estimated locally)
;;              12 [11.0% (guessed)]  count:510975471 (estimated locally) (FALLTHRU)
(code_label 87 83 88 15 328 (nil) [1 uses])
(note 88 87 89 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 15 (set (reg/v/f:DI 110 [ __first ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 40 [0x28])) [121 MEM[(struct _Vector_base *)this_4(D) + 40B]._M_impl.D.254423._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       16 [always]  count:955630213 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [always]  count:955630213 (estimated locally) (FALLTHRU)
;;              4 [11.0% (guessed)]  count:118111600 (estimated locally)
(code_label 90 89 91 16 320 (nil) [1 uses])
(note 91 90 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 110 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 93 92 94 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 100)
;;  succ:       17 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
;;              18 [46.5% (guessed)]  count:499612072 (estimated locally)

;; basic block 17, loop depth 0, count 574129732 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
(note 94 93 95 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 17 (set (reg/f:DI 122)
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 56 [0x38])) [121 MEM[(struct _Vector_base *)this_4(D) + 40B]._M_impl.D.254423._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 96 95 97 17 (parallel [
            (set (reg:DI 121)
                (minus:DI (reg/f:DI 122)
                    (reg/v/f:DI 110 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                    (const_int 56 [0x38])) [121 MEM[(struct _Vector_base *)this_4(D) + 40B]._M_impl.D.254423._M_end_of_storage+0 S8 A64])
            (reg/v/f:DI 110 [ __first ]))
        (nil)))
(insn 97 96 98 17 (set (reg:DI 4 si)
        (reg:DI 121)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 98 97 99 17 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 99 98 100 17 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       18 [always]  count:574129732 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16 [46.5% (guessed)]  count:499612072 (estimated locally)
;;              17 [always]  count:574129732 (estimated locally) (FALLTHRU)
(code_label 100 99 101 18 330 (nil) [1 uses])
(note 101 100 102 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 18 (set (reg/f:DI 88 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 24 [0x18])) [115 MEM[(struct vector *)this_4(D) + 16B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 103 102 104 18 (set (reg/v/f:DI 108 [ __first ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 16 [0x10])) [115 MEM[(struct vector *)this_4(D) + 16B].D.254077._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 104 103 105 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _21 ])
            (reg/v/f:DI 108 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 105 104 129 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 135)
;;  succ:       19 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
;;              24 [11.0% (guessed)]  count:118111600 (estimated locally)

;; basic block 19, loop depth 1, count 8687547438 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       22 [always]  count:7731917225 (estimated locally) (FALLTHRU)
;;              18 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
(code_label 129 105 106 19 335 (nil) [0 uses])
(note 106 129 107 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 19 (set (reg/f:DI 103 [ _59 ])
        (mem/f:DI (reg/v/f:DI 108 [ __first ]) [118 MEM[(Color * *)__first_38]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 108 107 109 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 103 [ _59 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 109 108 110 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 122)
;;  succ:       20 [53.5% (guessed)]  count:4645231605 (estimated locally) (FALLTHRU)
;;              21 [46.5% (guessed)]  count:4042315833 (estimated locally)

;; basic block 20, loop depth 1, count 4645231577 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [53.5% (guessed)]  count:4645231605 (estimated locally) (FALLTHRU)
(note 110 109 111 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 20 (set (reg/f:DI 124)
        (mem/f:DI (plus:DI (reg/v/f:DI 108 [ __first ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__first_38 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 112 111 113 20 (parallel [
            (set (reg:DI 123)
                (minus:DI (reg/f:DI 124)
                    (reg/f:DI 103 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 108 [ __first ])
                    (const_int 16 [0x10])) [118 MEM[(Color * *)__first_38 + 16B]+0 S8 A64])
            (reg/f:DI 103 [ _59 ]))
        (nil)))
(insn 113 112 114 20 (set (reg:DI 4 si)
        (reg:DI 123)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 114 113 115 20 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _59 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 115 114 116 20 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 116 115 117 20 (parallel [
            (set (reg/v/f:DI 108 [ __first ])
                (plus:DI (reg/v/f:DI 108 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 117 116 118 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _21 ])
            (reg/v/f:DI 108 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 118 117 122 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 127)
;;  succ:       22 [89.0% (guessed)]  count:4134256106 (estimated locally)
;;              23 [11.0% (guessed)]  count:510975471 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 1, count 4042315861 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       19 [46.5% (guessed)]  count:4042315833 (estimated locally)
(code_label 122 118 123 21 332 (nil) [1 uses])
(note 123 122 124 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 21 (parallel [
            (set (reg/v/f:DI 108 [ __first ])
                (plus:DI (reg/v/f:DI 108 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 125 124 126 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _21 ])
            (reg/v/f:DI 108 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 126 125 127 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 132)
;;  succ:       22 [89.0% (guessed)]  count:3597661119 (estimated locally) (FALLTHRU)
;;              23 [11.0% (guessed)]  count:444654742 (estimated locally)

;; basic block 22, loop depth 1, count 7731917225 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 [89.0% (guessed)]  count:3597661119 (estimated locally) (FALLTHRU)
;;              20 [89.0% (guessed)]  count:4134256106 (estimated locally)
(code_label 127 126 128 22 333 (nil) [1 uses])
(note 128 127 132 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
;;  succ:       19 [always]  count:7731917225 (estimated locally) (FALLTHRU)

;; basic block 23, loop depth 0, count 955630213 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       21 [11.0% (guessed)]  count:444654742 (estimated locally)
;;              20 [11.0% (guessed)]  count:510975471 (estimated locally) (FALLTHRU)
(code_label 132 128 133 23 334 (nil) [1 uses])
(note 133 132 134 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 23 (set (reg/v/f:DI 108 [ __first ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 16 [0x10])) [115 MEM[(struct _Vector_base *)this_4(D) + 16B]._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       24 [always]  count:955630213 (estimated locally) (FALLTHRU)

;; basic block 24, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 [always]  count:955630213 (estimated locally) (FALLTHRU)
;;              18 [11.0% (guessed)]  count:118111600 (estimated locally)
(code_label 135 134 136 24 331 (nil) [1 uses])
(note 136 135 137 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 108 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 138 137 139 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 145)
;;  succ:       25 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
;;              26 [46.5% (guessed)]  count:499612072 (estimated locally)

;; basic block 25, loop depth 0, count 574129732 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
(note 139 138 140 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 25 (set (reg/f:DI 126)
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 32 [0x20])) [115 MEM[(struct _Vector_base *)this_4(D) + 16B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 141 140 142 25 (parallel [
            (set (reg:DI 125)
                (minus:DI (reg/f:DI 126)
                    (reg/v/f:DI 108 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                    (const_int 32 [0x20])) [115 MEM[(struct _Vector_base *)this_4(D) + 16B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])
            (reg/v/f:DI 108 [ __first ]))
        (nil)))
(insn 142 141 143 25 (set (reg:DI 4 si)
        (reg:DI 125)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 143 142 144 25 (set (reg:DI 5 di)
        (reg/v/f:DI 108 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 144 143 145 25 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       26 [always]  count:574129732 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 25, next block 1, flags: (RTL)
;;  pred:       24 [46.5% (guessed)]  count:499612072 (estimated locally)
;;              25 [always]  count:574129732 (estimated locally) (FALLTHRU)
(code_label 145 144 146 26 336 (nil) [1 uses])
(note 146 145 147 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 26 (set (reg:DI 5 di)
        (reg/f:DI 111 [ this ])) "/usr/include/boost/python/object/value_holder.hpp":39:8 74 {*movdi_internal}
     (nil))
(call_insn/j 148 147 0 26 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python15instance_holderD2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70a00 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/value_holder.hpp":39:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python15instance_holderD2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70a00 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::objects::value_holder<ChineseCheckers>::~value_holder (_ZN5boost6python7objects12value_holderI15ChineseCheckersED0Ev, funcdef_no=13433, decl_uid=281195, cgraph_uid=5344, symbol_order=6283)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 111 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/value_holder.hpp":39:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 113)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE")  <var_decl 0x7f1a3642d900 _ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/value_holder.hpp":39:8 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 112)
        (plus:DI (reg:DI 113)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/value_holder.hpp":39:8 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE")  <var_decl 0x7f1a3642d900 _ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 111 [ this ]) [5 this_2(D)->D.281570._vptr.instance_holder+0 S8 A64])
        (reg/f:DI 112)) "/usr/include/boost/python/object/value_holder.hpp":39:8 74 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 83 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 120 [0x78])) [140 MEM[(struct vector *)this_2(D) + 120B].D.257921._M_impl.D.257266._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ _11 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 18)
;;  succ:       3 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
;;              4 [46.5% (guessed)]  count:499612072 (estimated locally)

;; basic block 3, loop depth 0, count 574129732 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 115)
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 136 [0x88])) [140 MEM[(struct _Vector_base *)this_2(D) + 120B]._M_impl.D.257266._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg:DI 114)
                (minus:DI (reg/f:DI 115)
                    (reg/f:DI 83 [ _11 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                    (const_int 136 [0x88])) [140 MEM[(struct _Vector_base *)this_2(D) + 120B]._M_impl.D.257266._M_end_of_storage+0 S8 A64])
            (reg/f:DI 83 [ _11 ]))
        (nil)))
(insn 15 14 16 3 (set (reg:DI 4 si)
        (reg:DI 114)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _11 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 17 16 18 3 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       4 [always]  count:574129732 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [46.5% (guessed)]  count:499612072 (estimated locally)
;;              3 [always]  count:574129732 (estimated locally) (FALLTHRU)
(code_label 18 17 19 4 348 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:DI 116)
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 88 [0x58])) [110 MEM[(const struct _Rb_tree *)this_2(D) + 72B]._M_impl.D.255745._M_header._M_parent+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":984:17 74 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg:DI 116)) "/usr/include/c++/11/bits/stl_tree.h":984:17 74 {*movdi_internal}
     (nil))
(call_insn 22 21 23 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ed00 _M_erase.isra>) [0 _M_erase.isra S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":984:17 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ed00 _M_erase.isra>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 4 (set (reg/f:DI 91 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 48 [0x30])) [121 MEM[(struct vector *)this_2(D) + 40B].D.255078._M_impl.D.254423._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/v/f:DI 110 [ __first ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 40 [0x28])) [121 MEM[(struct vector *)this_2(D) + 40B].D.255078._M_impl.D.254423._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ _30 ])
            (reg/v/f:DI 110 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 26 25 84 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 90)
;;  succ:       5 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
;;              16 [11.0% (guessed)]  count:118111600 (estimated locally)

;; basic block 5, loop depth 1, count 8687547438 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       14 [always]  count:7731917225 (estimated locally) (FALLTHRU)
;;              4 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
(code_label 84 26 27 5 358 (nil) [0 uses])
(note 27 84 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:DI 94 [ _40 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ __first ])
                (const_int 8 [0x8])) [124 MEM[(struct vector * *)__first_37 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (set (reg/v/f:DI 109 [ __first ])
        (mem/f:DI (reg/v/f:DI 110 [ __first ]) [124 MEM[(struct vector * *)__first_37]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ _40 ])
            (reg/v/f:DI 109 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 31 30 55 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 61)
;;  succ:       6 [89.0% (guessed)]  count:7731917225 (estimated locally) (FALLTHRU)
;;              11 [11.0% (guessed)]  count:955630213 (estimated locally)

;; basic block 6, loop depth 2, count 70290157048 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       9 [always]  count:62558239945 (estimated locally) (FALLTHRU)
;;              5 [89.0% (guessed)]  count:7731917225 (estimated locally) (FALLTHRU)
(code_label 55 31 32 6 354 (nil) [0 uses])
(note 32 55 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:DI 97 [ _49 ])
        (mem/f:DI (reg/v/f:DI 109 [ __first ]) [142 MEM[(int * *)__first_38]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ _49 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 48)
;;  succ:       7 [53.5% (guessed)]  count:37584146889 (estimated locally) (FALLTHRU)
;;              8 [46.5% (guessed)]  count:32706010159 (estimated locally)

;; basic block 7, loop depth 2, count 37584146877 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [53.5% (guessed)]  count:37584146889 (estimated locally) (FALLTHRU)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg/f:DI 118)
        (mem/f:DI (plus:DI (reg/v/f:DI 109 [ __first ])
                (const_int 16 [0x10])) [142 MEM[(int * *)__first_38 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 38 37 39 7 (parallel [
            (set (reg:DI 117)
                (minus:DI (reg/f:DI 118)
                    (reg/f:DI 97 [ _49 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 109 [ __first ])
                    (const_int 16 [0x10])) [142 MEM[(int * *)__first_38 + 16B]+0 S8 A64])
            (reg/f:DI 97 [ _49 ]))
        (nil)))
(insn 39 38 40 7 (set (reg:DI 4 si)
        (reg:DI 117)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 40 39 41 7 (set (reg:DI 5 di)
        (reg/f:DI 97 [ _49 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 41 40 42 7 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 42 41 43 7 (parallel [
            (set (reg/v/f:DI 109 [ __first ])
                (plus:DI (reg/v/f:DI 109 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 43 42 44 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ _40 ])
            (reg/v/f:DI 109 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 44 43 48 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 53)
;;  succ:       9 [89.0% (guessed)]  count:33449890743 (estimated locally)
;;              10 [11.0% (guessed)]  count:4134256134 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 2, count 32706010318 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6 [46.5% (guessed)]  count:32706010159 (estimated locally)
(code_label 48 44 49 8 351 (nil) [1 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (parallel [
            (set (reg/v/f:DI 109 [ __first ])
                (plus:DI (reg/v/f:DI 109 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 51 50 52 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ _40 ])
            (reg/v/f:DI 109 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 52 51 53 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 58)
;;  succ:       9 [89.0% (guessed)]  count:29108349203 (estimated locally) (FALLTHRU)
;;              10 [11.0% (guessed)]  count:3597661115 (estimated locally)

;; basic block 9, loop depth 2, count 62558239945 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [89.0% (guessed)]  count:29108349203 (estimated locally) (FALLTHRU)
;;              7 [89.0% (guessed)]  count:33449890743 (estimated locally)
(code_label 53 52 54 9 352 (nil) [1 uses])
(note 54 53 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       6 [always]  count:62558239945 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 1, count 7731917250 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8 [11.0% (guessed)]  count:3597661115 (estimated locally)
;;              7 [11.0% (guessed)]  count:4134256134 (estimated locally) (FALLTHRU)
(code_label 58 54 59 10 353 (nil) [1 uses])
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg/v/f:DI 109 [ __first ])
        (mem/f:DI (reg/v/f:DI 110 [ __first ]) [124 MEM[(struct vector * *)__first_37]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       11 [always]  count:7731917250 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 1, count 8687547438 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [always]  count:7731917250 (estimated locally) (FALLTHRU)
;;              5 [11.0% (guessed)]  count:955630213 (estimated locally)
(code_label 61 60 62 11 350 (nil) [1 uses])
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 109 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 64 63 65 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 77)
;;  succ:       12 [53.5% (guessed)]  count:4645231605 (estimated locally) (FALLTHRU)
;;              13 [46.5% (guessed)]  count:4042315833 (estimated locally)

;; basic block 12, loop depth 1, count 4645231577 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [53.5% (guessed)]  count:4645231605 (estimated locally) (FALLTHRU)
(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (set (reg/f:DI 120)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ __first ])
                (const_int 16 [0x10])) [124 MEM[(struct vector * *)__first_37 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 67 66 68 12 (parallel [
            (set (reg:DI 119)
                (minus:DI (reg/f:DI 120)
                    (reg/v/f:DI 109 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 110 [ __first ])
                    (const_int 16 [0x10])) [124 MEM[(struct vector * *)__first_37 + 16B]+0 S8 A64])
            (reg/v/f:DI 109 [ __first ]))
        (nil)))
(insn 68 67 69 12 (set (reg:DI 4 si)
        (reg:DI 119)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 69 68 70 12 (set (reg:DI 5 di)
        (reg/v/f:DI 109 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 70 69 71 12 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 71 70 72 12 (parallel [
            (set (reg/v/f:DI 110 [ __first ])
                (plus:DI (reg/v/f:DI 110 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 72 71 73 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ _30 ])
            (reg/v/f:DI 110 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 73 72 77 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 82)
;;  succ:       14 [89.0% (guessed)]  count:4134256106 (estimated locally)
;;              15 [11.0% (guessed)]  count:510975471 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 1, count 4042315861 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       11 [46.5% (guessed)]  count:4042315833 (estimated locally)
(code_label 77 73 78 13 355 (nil) [1 uses])
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 13 (parallel [
            (set (reg/v/f:DI 110 [ __first ])
                (plus:DI (reg/v/f:DI 110 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 80 79 81 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ _30 ])
            (reg/v/f:DI 110 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 81 80 82 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 87)
;;  succ:       14 [89.0% (guessed)]  count:3597661119 (estimated locally) (FALLTHRU)
;;              15 [11.0% (guessed)]  count:444654742 (estimated locally)

;; basic block 14, loop depth 1, count 7731917225 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [89.0% (guessed)]  count:3597661119 (estimated locally) (FALLTHRU)
;;              12 [89.0% (guessed)]  count:4134256106 (estimated locally)
(code_label 82 81 83 14 356 (nil) [1 uses])
(note 83 82 87 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 [always]  count:7731917225 (estimated locally) (FALLTHRU)

;; basic block 15, loop depth 0, count 955630213 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       13 [11.0% (guessed)]  count:444654742 (estimated locally)
;;              12 [11.0% (guessed)]  count:510975471 (estimated locally) (FALLTHRU)
(code_label 87 83 88 15 357 (nil) [1 uses])
(note 88 87 89 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 15 (set (reg/v/f:DI 110 [ __first ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 40 [0x28])) [121 MEM[(struct _Vector_base *)this_2(D) + 40B]._M_impl.D.254423._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       16 [always]  count:955630213 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [always]  count:955630213 (estimated locally) (FALLTHRU)
;;              4 [11.0% (guessed)]  count:118111600 (estimated locally)
(code_label 90 89 91 16 349 (nil) [1 uses])
(note 91 90 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 110 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 93 92 94 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 100)
;;  succ:       17 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
;;              18 [46.5% (guessed)]  count:499612072 (estimated locally)

;; basic block 17, loop depth 0, count 574129732 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
(note 94 93 95 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 17 (set (reg/f:DI 122)
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 56 [0x38])) [121 MEM[(struct _Vector_base *)this_2(D) + 40B]._M_impl.D.254423._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 96 95 97 17 (parallel [
            (set (reg:DI 121)
                (minus:DI (reg/f:DI 122)
                    (reg/v/f:DI 110 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                    (const_int 56 [0x38])) [121 MEM[(struct _Vector_base *)this_2(D) + 40B]._M_impl.D.254423._M_end_of_storage+0 S8 A64])
            (reg/v/f:DI 110 [ __first ]))
        (nil)))
(insn 97 96 98 17 (set (reg:DI 4 si)
        (reg:DI 121)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 98 97 99 17 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 99 98 100 17 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       18 [always]  count:574129732 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16 [46.5% (guessed)]  count:499612072 (estimated locally)
;;              17 [always]  count:574129732 (estimated locally) (FALLTHRU)
(code_label 100 99 101 18 359 (nil) [1 uses])
(note 101 100 102 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 18 (set (reg/f:DI 88 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 24 [0x18])) [115 MEM[(struct vector *)this_2(D) + 16B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 103 102 104 18 (set (reg/v/f:DI 108 [ __first ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 16 [0x10])) [115 MEM[(struct vector *)this_2(D) + 16B].D.254077._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 104 103 105 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _22 ])
            (reg/v/f:DI 108 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 105 104 129 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 135)
;;  succ:       19 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
;;              24 [11.0% (guessed)]  count:118111600 (estimated locally)

;; basic block 19, loop depth 1, count 8687547438 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       22 [always]  count:7731917225 (estimated locally) (FALLTHRU)
;;              18 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
(code_label 129 105 106 19 364 (nil) [0 uses])
(note 106 129 107 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 19 (set (reg/f:DI 103 [ _60 ])
        (mem/f:DI (reg/v/f:DI 108 [ __first ]) [118 MEM[(Color * *)__first_39]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 108 107 109 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 103 [ _60 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 109 108 110 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 122)
;;  succ:       20 [53.5% (guessed)]  count:4645231605 (estimated locally) (FALLTHRU)
;;              21 [46.5% (guessed)]  count:4042315833 (estimated locally)

;; basic block 20, loop depth 1, count 4645231577 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [53.5% (guessed)]  count:4645231605 (estimated locally) (FALLTHRU)
(note 110 109 111 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 20 (set (reg/f:DI 124)
        (mem/f:DI (plus:DI (reg/v/f:DI 108 [ __first ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__first_39 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 112 111 113 20 (parallel [
            (set (reg:DI 123)
                (minus:DI (reg/f:DI 124)
                    (reg/f:DI 103 [ _60 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 108 [ __first ])
                    (const_int 16 [0x10])) [118 MEM[(Color * *)__first_39 + 16B]+0 S8 A64])
            (reg/f:DI 103 [ _60 ]))
        (nil)))
(insn 113 112 114 20 (set (reg:DI 4 si)
        (reg:DI 123)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 114 113 115 20 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _60 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 115 114 116 20 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 116 115 117 20 (parallel [
            (set (reg/v/f:DI 108 [ __first ])
                (plus:DI (reg/v/f:DI 108 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 117 116 118 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _22 ])
            (reg/v/f:DI 108 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 118 117 122 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 127)
;;  succ:       22 [89.0% (guessed)]  count:4134256106 (estimated locally)
;;              23 [11.0% (guessed)]  count:510975471 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 1, count 4042315861 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       19 [46.5% (guessed)]  count:4042315833 (estimated locally)
(code_label 122 118 123 21 361 (nil) [1 uses])
(note 123 122 124 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 21 (parallel [
            (set (reg/v/f:DI 108 [ __first ])
                (plus:DI (reg/v/f:DI 108 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 125 124 126 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _22 ])
            (reg/v/f:DI 108 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 126 125 127 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 132)
;;  succ:       22 [89.0% (guessed)]  count:3597661119 (estimated locally) (FALLTHRU)
;;              23 [11.0% (guessed)]  count:444654742 (estimated locally)

;; basic block 22, loop depth 1, count 7731917225 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 [89.0% (guessed)]  count:3597661119 (estimated locally) (FALLTHRU)
;;              20 [89.0% (guessed)]  count:4134256106 (estimated locally)
(code_label 127 126 128 22 362 (nil) [1 uses])
(note 128 127 132 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
;;  succ:       19 [always]  count:7731917225 (estimated locally) (FALLTHRU)

;; basic block 23, loop depth 0, count 955630213 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       21 [11.0% (guessed)]  count:444654742 (estimated locally)
;;              20 [11.0% (guessed)]  count:510975471 (estimated locally) (FALLTHRU)
(code_label 132 128 133 23 363 (nil) [1 uses])
(note 133 132 134 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 23 (set (reg/v/f:DI 108 [ __first ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 16 [0x10])) [115 MEM[(struct _Vector_base *)this_2(D) + 16B]._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       24 [always]  count:955630213 (estimated locally) (FALLTHRU)

;; basic block 24, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 [always]  count:955630213 (estimated locally) (FALLTHRU)
;;              18 [11.0% (guessed)]  count:118111600 (estimated locally)
(code_label 135 134 136 24 360 (nil) [1 uses])
(note 136 135 137 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 108 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 138 137 139 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 145)
;;  succ:       25 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
;;              26 [46.5% (guessed)]  count:499612072 (estimated locally)

;; basic block 25, loop depth 0, count 574129732 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
(note 139 138 140 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 25 (set (reg/f:DI 126)
        (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                (const_int 32 [0x20])) [115 MEM[(struct _Vector_base *)this_2(D) + 16B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 141 140 142 25 (parallel [
            (set (reg:DI 125)
                (minus:DI (reg/f:DI 126)
                    (reg/v/f:DI 108 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 111 [ this ])
                    (const_int 32 [0x20])) [115 MEM[(struct _Vector_base *)this_2(D) + 16B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])
            (reg/v/f:DI 108 [ __first ]))
        (nil)))
(insn 142 141 143 25 (set (reg:DI 4 si)
        (reg:DI 125)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 143 142 144 25 (set (reg:DI 5 di)
        (reg/v/f:DI 108 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 144 143 145 25 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       26 [always]  count:574129732 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 25, next block 1, flags: (RTL)
;;  pred:       24 [46.5% (guessed)]  count:499612072 (estimated locally)
;;              25 [always]  count:574129732 (estimated locally) (FALLTHRU)
(code_label 145 144 146 26 365 (nil) [1 uses])
(note 146 145 147 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 26 (set (reg:DI 5 di)
        (reg/f:DI 111 [ this ])) "/usr/include/boost/python/object/value_holder.hpp":39:8 74 {*movdi_internal}
     (nil))
(call_insn 148 147 149 26 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python15instance_holderD2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70a00 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/value_holder.hpp":39:8 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python15instance_holderD2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70a00 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 149 148 150 26 (set (reg:DI 4 si)
        (const_int 144 [0x90])) "/usr/include/boost/python/object/value_holder.hpp":39:8 74 {*movdi_internal}
     (nil))
(insn 150 149 151 26 (set (reg:DI 5 di)
        (reg/f:DI 111 [ this ])) "/usr/include/boost/python/object/value_holder.hpp":39:8 74 {*movdi_internal}
     (nil))
(call_insn/j 151 150 0 26 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/value_holder.hpp":39:8 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::api::slice_nil::~slice_nil (_ZN5boost6python3api9slice_nilD2Ev, funcdef_no=7476, decl_uid=175413, cgraph_uid=2182, symbol_order=3045)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 85 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/slice_nil.hpp":13:7 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 82 [ _6 ])
        (mem/f:DI (reg/f:DI 85 [ this ]) [31 MEM[(struct object_base *)this_1(D)].m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (set (reg:DI 83 [ _7 ])
        (mem:DI (reg/f:DI 82 [ _6 ]) [7 MEM[(const struct PyObject *)_6].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 10 7 11 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 83 [ _7 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 22)
;;  succ:       4 [100.0% (guessed)]  count:1073312328 (estimated locally)
;;              3 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 429496 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 86)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 2 cx)
        (reg:DI 86)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)
        (nil)))
(insn 15 14 16 3 (set (reg:SI 1 dx)
        (const_int 422 [0x1a6])) "/usr/include/boost/python/object_core.hpp":422:5 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 4 si)
        (reg:DI 87)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)
        (nil)))
(insn 18 17 19 3 (set (reg:DI 88)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (reg:DI 88)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)
        (nil)))
(call_insn 20 19 22 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":422:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 4, loop depth 0, count 1073312329 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:1073312328 (estimated locally)
(code_label 22 20 23 4 377 (nil) [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (parallel [
            (set (reg:DI 84 [ _8 ])
                (plus:DI (reg:DI 83 [ _7 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 25 24 26 4 (set (mem:DI (reg/f:DI 82 [ _6 ]) [7 _6->ob_refcnt+0 S8 A64])
        (reg:DI 84 [ _8 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 84 [ _8 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 27 26 28 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 33)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 33)
;;  succ:       6 [67.0% (guessed)]  count:719119262 (estimated locally)
;;              5 [33.0% (guessed)]  count:354193067 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 354193067 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [33.0% (guessed)]  count:354193067 (estimated locally) (FALLTHRU)
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _6 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 30 29 33 5 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -3 [0xfffffffffffffffd])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 [always]  count:354193067 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 1073312330 (estimated locally), maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [always]  count:354193067 (estimated locally) (FALLTHRU)
;;              4 [67.0% (guessed)]  count:719119262 (estimated locally)
(code_label 33 30 34 6 376 (nil) [1 uses])
(note 34 33 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:1073312330 (estimated locally) (FALLTHRU)


;; Function boost::python::api::object_base::~object_base (_ZN5boost6python3api11object_baseD2Ev, funcdef_no=7455, decl_uid=174857, cgraph_uid=2161, symbol_order=3024)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 85 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object_core.hpp":420:8 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/f:DI 85 [ this ]) [31 this_3(D)->m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (set (reg:DI 83 [ _4 ])
        (mem:DI (reg/f:DI 82 [ _1 ]) [7 MEM[(const struct PyObject *)_1].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 10 7 11 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 83 [ _4 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 22)
;;  succ:       4 [100.0% (guessed)]  count:1073312328 (estimated locally)
;;              3 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 429496 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 86)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 2 cx)
        (reg:DI 86)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)
        (nil)))
(insn 15 14 16 3 (set (reg:SI 1 dx)
        (const_int 422 [0x1a6])) "/usr/include/boost/python/object_core.hpp":422:5 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 4 si)
        (reg:DI 87)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)
        (nil)))
(insn 18 17 19 3 (set (reg:DI 88)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (reg:DI 88)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)
        (nil)))
(call_insn 20 19 22 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":422:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 4, loop depth 0, count 1073312329 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:1073312328 (estimated locally)
(code_label 22 20 23 4 383 (nil) [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (parallel [
            (set (reg:DI 84 [ _7 ])
                (plus:DI (reg:DI 83 [ _4 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 25 24 26 4 (set (mem:DI (reg/f:DI 82 [ _1 ]) [7 _1->ob_refcnt+0 S8 A64])
        (reg:DI 84 [ _7 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 84 [ _7 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 27 26 28 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 33)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 33)
;;  succ:       6 [67.0% (guessed)]  count:719119262 (estimated locally)
;;              5 [33.0% (guessed)]  count:354193067 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 354193067 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [33.0% (guessed)]  count:354193067 (estimated locally) (FALLTHRU)
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 30 29 33 5 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 [always]  count:354193067 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 1073312330 (estimated locally), maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [always]  count:354193067 (estimated locally) (FALLTHRU)
;;              4 [67.0% (guessed)]  count:719119262 (estimated locally)
(code_label 33 30 34 6 382 (nil) [1 uses])
(note 34 33 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:1073312330 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::as_to_python_function<std::vector<std::vector<Color> >, gridtype_to_list>::convert (_ZN5boost6python9converter21as_to_python_functionISt6vectorIS3_I5ColorSaIS4_EESaIS6_EE16gridtype_to_listE7convertEPKv, funcdef_no=11867, decl_uid=269424, cgraph_uid=3778, symbol_order=4684)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 120 [ x ])
        (reg:DI 5 di [ x ])) "/usr/include/boost/python/converter/as_to_python_function.hpp":25:22 74 {*movdi_internal}
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 5 2 (set (reg/f:DI 121)
        (const_int 40 [0x28])) "/usr/include/boost/python/converter/as_to_python_function.hpp":25:22 74 {*movdi_internal}
     (nil))
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.329478+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 121) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/as_to_python_function.hpp":25:22 1159 {stack_protect_set_1_di}
     (nil))
(insn 8 5 9 2 (set (reg:DI 5 di)
        (const_int 8 [0x8])) "src/ChineseCheckersWrapper.cpp":89:43 74 {*movdi_internal}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "src/ChineseCheckersWrapper.cpp":89:43 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 122)
        (reg:DI 0 ax)) "src/ChineseCheckersWrapper.cpp":89:43 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 122)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 82 [ _5 ])
        (reg/f:DI 122)) "src/ChineseCheckersWrapper.cpp":89:43 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 83 [ _6 ])
        (reg/f:DI 82 [ _5 ])) "/usr/include/boost/python/list.hpp":61:12 74 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _6 ])) "/usr/include/boost/python/list.hpp":61:12 74 {*movdi_internal}
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail9list_baseC2Ev") [flags 0x41]  <function_decl 0x7f1a39199600 __ct_base >) [0 __ct_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/list.hpp":61:12 813 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail9list_baseC2Ev") [flags 0x41]  <function_decl 0x7f1a39199600 __ct_base >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              35 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 3, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:DI 84 [ _7 ])
        (mem/f:DI (reg/v/f:DI 120 [ x ]) [115 MEM[(const struct vector * const &)x_2(D)]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg/f:DI 85 [ _8 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 120 [ x ])
                (const_int 8 [0x8])) [115 MEM[(const struct vector * const &)x_2(D) + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 84 [ _7 ])
            (reg/f:DI 85 [ _8 ]))) "src/ChineseCheckersWrapper.cpp":90:44 12 {*cmpdi_1}
     (nil))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) "src/ChineseCheckersWrapper.cpp":90:44 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 195)
;;  succ:       4 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
;;              34 [11.0% (guessed)]  count:118111600 (estimated locally)

;; basic block 4, loop depth 0, count 955630224 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 192 4 (set (reg:DI 93 [ ivtmp.2149 ])
        (reg/f:DI 84 [ _7 ])) 74 {*movdi_internal}
     (nil))
;;  succ:       5 [always]  count:955630224 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 1, count 8268346272 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       33 [always]  count:7312716060 (estimated locally) (FALLTHRU)
;;              4 [always]  count:955630224 (estimated locally) (FALLTHRU)
(code_label 192 21 22 5 405 (nil) [0 uses])
(note 22 192 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":61:12 210 {*adddi_1}
     (nil))
(insn 24 23 25 5 (set (reg:DI 5 di)
        (reg:DI 123)) "/usr/include/boost/python/list.hpp":61:12 74 {*movdi_internal}
     (nil))
(call_insn 25 24 26 5 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail9list_baseC2Ev") [flags 0x41]  <function_decl 0x7f1a39199600 __ct_base >) [0 __ct_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/list.hpp":61:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail9list_baseC2Ev") [flags 0x41]  <function_decl 0x7f1a39199600 __ct_base >)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 5 (set (reg/f:DI 114 [ _95 ])
        (reg:DI 93 [ ivtmp.2149 ])) 74 {*movdi_internal}
     (nil))
(insn 27 26 28 5 (set (reg/f:DI 86 [ _10 ])
        (mem/f:DI (reg/f:DI 114 [ _95 ]) [118 MEM[(const Color * const &)_95]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 28 27 29 5 (set (reg/f:DI 87 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 114 [ _95 ])
                (const_int 8 [0x8])) [118 MEM[(const Color * const &)_95 + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 86 [ _10 ])
            (reg/f:DI 87 [ _11 ]))) "src/ChineseCheckersWrapper.cpp":92:32 12 {*cmpdi_1}
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "src/ChineseCheckersWrapper.cpp":92:32 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 125)
;;  succ:       6 [89.0% (guessed)]  count:7358828187 (estimated locally) (FALLTHRU)
;;              23 [11.0% (guessed)]  count:909518085 (estimated locally)

;; basic block 6, loop depth 1, count 7358828187 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [89.0% (guessed)]  count:7358828187 (estimated locally) (FALLTHRU)
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 113 6 (set (reg:DI 94 [ ivtmp.2142 ])
        (reg/f:DI 86 [ _10 ])) 74 {*movdi_internal}
     (nil))
;;  succ:       7 [always]  count:7358828187 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 2, count 66532452437 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       20 [always]  count:59173624180 (estimated locally) (FALLTHRU)
;;              6 [always]  count:7358828187 (estimated locally) (FALLTHRU)
(code_label 113 32 33 7 396 (nil) [0 uses])
(note 33 113 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg:SI 90 [ value.2_14 ])
        (mem:SI (reg:DI 94 [ ivtmp.2142 ]) [197 MEM[(const Color &)_113]+0 S4 A32])) "src/ChineseCheckersWrapper.cpp":93:28 75 {*movsi_internal}
     (nil))
(insn 35 34 36 7 (set (reg:DI 124)
        (sign_extend:DI (reg:SI 90 [ value.2_14 ]))) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 147 {*extendsidi2_rex64}
     (nil))
(insn 36 35 37 7 (set (reg:DI 5 di)
        (reg:DI 124)) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 74 {*movdi_internal}
     (nil))
(call_insn 37 36 243 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyLong_FromLong") [flags 0x41]  <function_decl 0x7f1a40484b00 PyLong_FromLong>) [0 PyLong_FromLong S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("PyLong_FromLong") [flags 0x41]  <function_decl 0x7f1a40484b00 PyLong_FromLong>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       37 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 [always (adjusted)]  count:66532452437 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 2, count 66532452437 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always (adjusted)]  count:66532452437 (estimated locally) (FALLTHRU)
(note 243 37 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 243 40 8 (set (reg/f:DI 96 [ _25 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 74 {*movdi_internal}
     (nil))
(insn 40 38 41 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ _25 ])
            (const_int 0 [0]))) "/usr/include/boost/python/errors.hpp":44:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 41 40 42 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) "/usr/include/boost/python/errors.hpp":44:5 806 {*jcc}
     (int_list:REG_BR_PROB 886588628 (nil))
 -> 219)
;;  succ:       9 [17.4% (guessed)]  count:11596606465 (estimated locally) (FALLTHRU)
;;              39 [82.6% (guessed)]  count:54935845972 (estimated locally)

;; basic block 9, loop depth 0, count 11596606445 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [17.4% (guessed)]  count:11596606465 (estimated locally) (FALLTHRU)
(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 43 42 44 9 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>) [0 throw_error_already_set S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/errors.hpp":45:32 813 {*call}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>)
            (nil)))
    (nil))
;;  succ:       10 [always]  count:11596606445 (estimated locally) (FALLTHRU)
;;              37 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 10, loop depth 0, count 19959735533 (estimated locally), maybe hot
;; Invalid sum of incoming counts 11596606445 (estimated locally), should be 19959735533 (estimated locally)
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [always]  count:11596606445 (estimated locally) (FALLTHRU)
(note 44 43 45 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 10 (set (reg/f:DI 125)
        (const_int 0 [0])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 46 45 47 10 (set (reg:DI 97 [ _26 ])
        (mem/v:DI (reg/f:DI 125) [7 MEM[(struct PyObject *)0B].ob_refcnt+0 S8 A128])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 47 46 49 10 (trap_if (const_int 1 [0x1])
        (const_int 6 [0x6])) 1153 {trap}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
;;  succ:      

;; basic block 11, loop depth 0, count 18629054 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       39 [0.0% (guessed)]  count:18629055 (estimated locally) (FALLTHRU)
(note 49 47 50 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 11 (set (reg:DI 126)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 51 50 52 11 (set (reg:DI 2 cx)
        (reg:DI 126)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)
        (nil)))
(insn 52 51 53 11 (set (reg:SI 1 dx)
        (const_int 37 [0x25])) "/usr/include/boost/python/refcount.hpp":37:5 75 {*movsi_internal}
     (nil))
(insn 53 52 54 11 (set (reg:DI 127)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 54 53 55 11 (set (reg:DI 4 si)
        (reg:DI 127)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)
        (nil)))
(insn 55 54 56 11 (set (reg:DI 128)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 56 55 57 11 (set (reg:DI 5 di)
        (reg:DI 128)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)
        (nil)))
(call_insn 57 56 224 11 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/refcount.hpp":37:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 12, loop depth 2, count 46559676625 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       39 [100.0% (guessed)]  count:46554087894 (estimated locally)
(code_label 224 57 59 12 407 (nil) [1 uses])
(note 59 224 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (mem:DI (reg/f:DI 96 [ _25 ]) [7 _25->ob_refcnt+0 S8 A64])
        (reg:DI 115 [ _109 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 61 60 62 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 115 [ _109 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 62 61 63 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 66)
;;  succ:       14 [67.0% (guessed)]  count:31194983422 (estimated locally)
;;              13 [33.0% (guessed)]  count:15364693203 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 2, count 15364693207 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [33.0% (guessed)]  count:15364693203 (estimated locally) (FALLTHRU)
(note 63 62 64 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 13 (set (reg:DI 5 di)
        (reg/f:DI 96 [ _25 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 65 64 66 13 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -4 [0xfffffffffffffffc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 [always]  count:15364693207 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 2, count 66513823452 (estimated locally), maybe hot
;; Invalid sum of incoming counts 46559676629 (estimated locally), should be 66513823452 (estimated locally)
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [always]  count:15364693207 (estimated locally) (FALLTHRU)
;;              12 [67.0% (guessed)]  count:31194983422 (estimated locally)
(code_label 66 65 67 14 392 (nil) [1 uses])
(note 67 66 68 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [31 MEM[(struct object_base *)&D.329439].m_ptr+0 S8 A64])
        (reg/f:DI 96 [ _25 ])) "/usr/include/boost/python/object_core.hpp":409:7 74 {*movdi_internal}
     (nil))
(insn 69 68 70 14 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":72:21 210 {*adddi_1}
     (nil))
(insn 70 69 71 14 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":72:21 210 {*adddi_1}
     (nil))
(insn 71 70 72 14 (set (reg:DI 4 si)
        (reg:DI 129)) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(insn 72 71 73 14 (set (reg:DI 5 di)
        (reg:DI 130)) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(call_insn 73 72 74 14 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>) [0 append S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/list.hpp":72:21 813 {*call}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       15 [always]  count:66513823452 (estimated locally) (FALLTHRU)
;;              21 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 15, loop depth 2, count 66513823452 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [always]  count:66513823452 (estimated locally) (FALLTHRU)
(note 74 73 75 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 15 (set (reg/f:DI 99 [ _31 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [31 D.329439.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 76 75 79 15 (set (reg:DI 100 [ _32 ])
        (mem:DI (reg/f:DI 99 [ _31 ]) [7 MEM[(const struct PyObject *)_31].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 79 76 80 15 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 100 [ _32 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 80 79 137 15 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 91)
;;  succ:       17 [100.0% (guessed)]  count:66487217968 (estimated locally)
;;              16 [0.0% (guessed)]  count:26605484 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 0, count 33182673 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [0.0% (guessed)]  count:26605484 (estimated locally) (FALLTHRU)
;;              24 [0.0% (guessed)]  count:3289239 (estimated locally)
;;              27 [0.0% (guessed)]  count:3287924 (estimated locally) (FALLTHRU)
(code_label 137 80 81 16 399 (nil) [1 uses])
(note 81 137 82 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 16 (set (reg:DI 131)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 83 82 84 16 (set (reg:DI 2 cx)
        (reg:DI 131)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)
        (nil)))
(insn 84 83 85 16 (set (reg:SI 1 dx)
        (const_int 422 [0x1a6])) "/usr/include/boost/python/object_core.hpp":422:5 75 {*movsi_internal}
     (nil))
(insn 85 84 86 16 (set (reg:DI 132)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 86 85 87 16 (set (reg:DI 4 si)
        (reg:DI 132)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)
        (nil)))
(insn 87 86 88 16 (set (reg:DI 133)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 88 87 89 16 (set (reg:DI 5 di)
        (reg:DI 133)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)
        (nil)))
(call_insn 89 88 91 16 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":422:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 17, loop depth 2, count 66487217996 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       15 [100.0% (guessed)]  count:66487217968 (estimated locally)
(code_label 91 89 92 17 393 (nil) [1 uses])
(note 92 91 93 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 17 (parallel [
            (set (reg:DI 101 [ _33 ])
                (plus:DI (reg:DI 100 [ _32 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 94 93 95 17 (set (mem:DI (reg/f:DI 99 [ _31 ]) [7 _31->ob_refcnt+0 S8 A64])
        (reg:DI 101 [ _33 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 95 94 96 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 101 [ _33 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 96 95 97 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 106)
;;  succ:       19 [67.0% (guessed)]  count:44546436176 (estimated locally)
;;              18 [33.0% (guessed)]  count:21940781820 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 2, count 21940781801 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [33.0% (guessed)]  count:21940781820 (estimated locally) (FALLTHRU)
(note 97 96 98 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 18 (set (reg:DI 5 di)
        (reg/f:DI 99 [ _31 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 99 98 100 18 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -5 [0xfffffffffffffffb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 100 99 101 18 (parallel [
            (set (reg:DI 94 [ ivtmp.2142 ])
                (plus:DI (reg:DI 94 [ ivtmp.2142 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":92:32 210 {*adddi_1}
     (nil))
(insn 101 100 102 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _11 ])
            (reg:DI 94 [ ivtmp.2142 ]))) "src/ChineseCheckersWrapper.cpp":92:32 12 {*cmpdi_1}
     (nil))
(jump_insn 102 101 106 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) "src/ChineseCheckersWrapper.cpp":92:32 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 111)
;;  succ:       20 [89.0% (guessed)]  count:19527295816 (estimated locally)
;;              23 [11.0% (guessed)]  count:2413485985 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 2, count 44546436334 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       17 [67.0% (guessed)]  count:44546436176 (estimated locally)
(code_label 106 102 107 19 394 (nil) [1 uses])
(note 107 106 108 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 19 (parallel [
            (set (reg:DI 94 [ ivtmp.2142 ])
                (plus:DI (reg:DI 94 [ ivtmp.2142 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":92:32 210 {*adddi_1}
     (nil))
(insn 109 108 110 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _11 ])
            (reg:DI 94 [ ivtmp.2142 ]))) "src/ChineseCheckersWrapper.cpp":92:32 12 {*cmpdi_1}
     (nil))
(jump_insn 110 109 111 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "src/ChineseCheckersWrapper.cpp":92:32 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 125)
;;  succ:       20 [89.0% (guessed)]  count:39646328364 (estimated locally) (FALLTHRU)
;;              23 [11.0% (guessed)]  count:4900107970 (estimated locally)

;; basic block 20, loop depth 2, count 59173624180 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [89.0% (guessed)]  count:39646328364 (estimated locally) (FALLTHRU)
;;              18 [89.0% (guessed)]  count:19527295816 (estimated locally)
(code_label 111 110 112 20 395 (nil) [1 uses])
(note 112 111 253 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
;;  succ:       7 [always]  count:59173624180 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 0, count 0 (precise), probably never executed
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       14 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 253 112 256 21 412 (nil) [1 uses])
(note 256 253 254 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 254 256 116 21 (set (reg:DI 136)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       22 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 22, loop depth 0, count 0 (precise), probably never executed
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 116 254 117 22 397 (nil) [0 uses])
(note 117 116 118 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 22 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 119 118 120 22 (set (reg:DI 5 di)
        (reg:DI 134)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 120 119 121 22 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 121 120 125 22 (set (reg:DI 135)
        (reg:DI 136)) 74 {*movdi_internal}
     (nil))
;;  succ:       38 [always]  count:0 (precise) (FALLTHRU)

;; basic block 23, loop depth 1, count 8223112040 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       5 [11.0% (guessed)]  count:909518085 (estimated locally)
;;              19 [11.0% (guessed)]  count:4900107970 (estimated locally)
;;              18 [11.0% (guessed)]  count:2413485985 (estimated locally) (FALLTHRU)
(code_label 125 121 126 23 390 (nil) [2 uses])
(note 126 125 127 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 23 (set (reg/f:DI 102 [ _35 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [31 MEM[(const struct object_base *)&row].m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":440:12 74 {*movdi_internal}
     (nil))
(insn 128 127 129 23 (parallel [
            (set (mem:DI (reg/f:DI 102 [ _35 ]) [7 *_35.ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 102 [ _35 ]) [7 *_35.ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 129 128 130 23 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [31 MEM[(struct object_base *)&D.329450].m_ptr+0 S8 A64])
        (reg/f:DI 102 [ _35 ])) "/usr/include/boost/python/object_core.hpp":409:7 74 {*movdi_internal}
     (nil))
(insn 130 129 131 23 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":72:21 210 {*adddi_1}
     (nil))
(insn 131 130 132 23 (set (reg:DI 4 si)
        (reg:DI 139)) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(insn 132 131 133 23 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _6 ])) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(call_insn 133 132 134 23 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>) [0 append S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/list.hpp":72:21 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       24 [always]  count:8223112040 (estimated locally) (FALLTHRU)
;;              28 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 24, loop depth 1, count 8223112040 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 [always]  count:8223112040 (estimated locally) (FALLTHRU)
(note 134 133 135 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 24 (set (reg/f:DI 105 [ _38 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [31 D.329450.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 136 135 140 24 (set (reg:DI 106 [ _39 ])
        (mem:DI (reg/f:DI 105 [ _38 ]) [7 MEM[(const struct PyObject *)_38].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 140 136 141 24 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 106 [ _39 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 141 140 142 24 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 137)
;;  succ:       25 [100.0% (guessed)]  count:8219822801 (estimated locally) (FALLTHRU)
;;              16 [0.0% (guessed)]  count:3289239 (estimated locally)

;; basic block 25, loop depth 1, count 8219822770 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [100.0% (guessed)]  count:8219822801 (estimated locally) (FALLTHRU)
(note 142 141 143 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 25 (parallel [
            (set (reg:DI 107 [ _40 ])
                (plus:DI (reg:DI 106 [ _39 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 144 143 145 25 (set (mem:DI (reg/f:DI 105 [ _38 ]) [7 _38->ob_refcnt+0 S8 A64])
        (reg:DI 107 [ _40 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 145 144 146 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 107 [ _40 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 146 145 147 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 150)
;;  succ:       27 [67.0% (guessed)]  count:5507281271 (estimated locally)
;;              26 [33.0% (guessed)]  count:2712541499 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 1, count 2712541504 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [33.0% (guessed)]  count:2712541499 (estimated locally) (FALLTHRU)
(note 147 146 148 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 26 (set (reg:DI 5 di)
        (reg/f:DI 105 [ _38 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 149 148 150 26 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -7 [0xfffffffffffffff9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       27 [always]  count:2712541504 (estimated locally) (FALLTHRU)

;; basic block 27, loop depth 1, count 8219822840 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       25 [67.0% (guessed)]  count:5507281271 (estimated locally)
;;              26 [always]  count:2712541504 (estimated locally) (FALLTHRU)
(code_label 150 149 151 27 400 (nil) [1 uses])
(note 151 150 152 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 27 (set (reg/f:DI 108 [ _41 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [31 row.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 153 152 156 27 (set (reg:DI 109 [ _42 ])
        (mem:DI (reg/f:DI 108 [ _41 ]) [7 MEM[(const struct PyObject *)_41].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 156 153 157 27 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 109 [ _42 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 157 156 257 27 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 170)
;;  succ:       30 [100.0% (guessed)]  count:8216534916 (estimated locally)
;;              16 [0.0% (guessed)]  count:3287924 (estimated locally) (FALLTHRU)

;; basic block 28, loop depth 0, count 0 (precise), probably never executed
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       23 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 257 157 260 28 413 (nil) [1 uses])
(note 260 257 258 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 258 260 161 28 (set (reg:DI 141)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       29 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 29, loop depth 0, count 0 (precise), probably never executed
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 161 258 162 29 402 (nil) [0 uses])
(note 162 161 163 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 29 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 164 163 165 29 (set (reg:DI 5 di)
        (reg:DI 140)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 165 164 166 29 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 166 165 170 29 (set (reg:DI 135)
        (reg:DI 141)) 74 {*movdi_internal}
     (nil))
;;  succ:       38 [always]  count:0 (precise) (FALLTHRU)

;; basic block 30, loop depth 1, count 8216534893 (estimated locally), maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       27 [100.0% (guessed)]  count:8216534916 (estimated locally)
(code_label 170 166 171 30 401 (nil) [1 uses])
(note 171 170 172 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 30 (parallel [
            (set (reg:DI 110 [ _43 ])
                (plus:DI (reg:DI 109 [ _42 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 173 172 174 30 (set (mem:DI (reg/f:DI 108 [ _41 ]) [7 _41->ob_refcnt+0 S8 A64])
        (reg:DI 110 [ _43 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 174 173 175 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 110 [ _43 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 175 174 176 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 185)
;;  succ:       32 [67.0% (guessed)]  count:5505078393 (estimated locally)
;;              31 [33.0% (guessed)]  count:2711456500 (estimated locally) (FALLTHRU)

;; basic block 31, loop depth 1, count 2711456522 (estimated locally), maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 [33.0% (guessed)]  count:2711456500 (estimated locally) (FALLTHRU)
(note 176 175 177 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 31 (set (reg:DI 5 di)
        (reg/f:DI 108 [ _41 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 178 177 179 31 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -8 [0xfffffffffffffff8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 179 178 180 31 (parallel [
            (set (reg:DI 93 [ ivtmp.2149 ])
                (plus:DI (reg:DI 93 [ ivtmp.2149 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":90:44 210 {*adddi_1}
     (nil))
(insn 180 179 181 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ _8 ])
            (reg:DI 93 [ ivtmp.2149 ]))) "src/ChineseCheckersWrapper.cpp":90:44 12 {*cmpdi_1}
     (nil))
(jump_insn 181 180 185 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "src/ChineseCheckersWrapper.cpp":90:44 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 190)
;;  succ:       33 [89.0% (guessed)]  count:2413196306 (estimated locally)
;;              34 [11.0% (guessed)]  count:298260216 (estimated locally) (FALLTHRU)

;; basic block 32, loop depth 1, count 5505078371 (estimated locally), maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       30 [67.0% (guessed)]  count:5505078393 (estimated locally)
(code_label 185 181 186 32 403 (nil) [1 uses])
(note 186 185 187 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 32 (parallel [
            (set (reg:DI 93 [ ivtmp.2149 ])
                (plus:DI (reg:DI 93 [ ivtmp.2149 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":90:44 210 {*adddi_1}
     (nil))
(insn 188 187 189 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ _8 ])
            (reg:DI 93 [ ivtmp.2149 ]))) "src/ChineseCheckersWrapper.cpp":90:44 12 {*cmpdi_1}
     (nil))
(jump_insn 189 188 190 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) "src/ChineseCheckersWrapper.cpp":90:44 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 195)
;;  succ:       33 [89.0% (guessed)]  count:4899519753 (estimated locally) (FALLTHRU)
;;              34 [11.0% (guessed)]  count:605558618 (estimated locally)

;; basic block 33, loop depth 1, count 7312716060 (estimated locally), maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 [89.0% (guessed)]  count:4899519753 (estimated locally) (FALLTHRU)
;;              31 [89.0% (guessed)]  count:2413196306 (estimated locally)
(code_label 190 189 191 33 404 (nil) [1 uses])
(note 191 190 195 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 [always]  count:7312716060 (estimated locally) (FALLTHRU)

;; basic block 34, loop depth 0, count 1021930445 (estimated locally), maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       3 [11.0% (guessed)]  count:118111600 (estimated locally)
;;              32 [11.0% (guessed)]  count:605558618 (estimated locally)
;;              31 [11.0% (guessed)]  count:298260216 (estimated locally) (FALLTHRU)
(code_label 195 191 196 34 389 (nil) [2 uses])
(note 196 195 197 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 34 (set (reg/f:DI 119 [ <retval> ])
        (mem/f:DI (reg/f:DI 82 [ _5 ]) [31 MEM[(const struct object_base *)_5].m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":440:12 74 {*movdi_internal}
     (nil))
(insn 198 197 234 34 (parallel [
            (set (mem:DI (reg/f:DI 119 [ <retval> ]) [7 _17->ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 119 [ <retval> ]) [7 _17->ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 234 198 235 34 (set (reg/f:DI 146)
        (const_int 40 [0x28])) "/usr/include/boost/python/converter/as_to_python_function.hpp":41:5 74 {*movdi_internal}
     (nil))
(insn 235 234 236 34 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.329478+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 146) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/boost/python/converter/as_to_python_function.hpp":41:5 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 236 235 250 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) "/usr/include/boost/python/converter/as_to_python_function.hpp":41:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 239)
;;  succ:       41 [100.0% (guessed)]  count:1021521674 (estimated locally)
;;              40 [0.0% (guessed)]  count:408771 (estimated locally) (FALLTHRU)

;; basic block 35, loop depth 0, count 0 (precise), probably never executed
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       2 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 250 236 252 35 411 (nil) [1 uses])
(note 252 250 251 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 251 252 201 35 (set (reg:DI 144)
        (reg:DI 0 ax)) "src/ChineseCheckersWrapper.cpp":89:43 74 {*movdi_internal}
     (nil))
;;  succ:       36 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 36, loop depth 0, count 0 (precise), probably never executed
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       35 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 201 251 202 36 406 (nil) [0 uses])
(note 202 201 203 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 36 (set (reg:DI 4 si)
        (const_int 8 [0x8])) "src/ChineseCheckersWrapper.cpp":89:43 74 {*movdi_internal}
     (nil))
(insn 204 203 205 36 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _5 ])) "src/ChineseCheckersWrapper.cpp":89:43 74 {*movdi_internal}
     (nil))
(call_insn 205 204 206 36 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":89:43 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 206 205 207 36 (set (reg/f:DI 111 [ D.329476 ])
        (reg:DI 144)) 74 {*movdi_internal}
     (nil))
(insn 207 206 208 36 (set (reg:DI 5 di)
        (reg/f:DI 111 [ D.329476 ])) 74 {*movdi_internal}
     (nil))
(call_insn 208 207 246 36 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 37, loop depth 0, count 0 (precise), probably never executed
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       7 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 246 208 249 37 410 (nil) [1 uses])
(note 249 246 247 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 247 249 210 37 (set (reg:DI 135)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       38 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 38, loop depth 0, count 0 (precise), probably never executed
;;  prev block 37, next block 39, flags: (RTL)
;;  pred:       29 [always]  count:0 (precise) (FALLTHRU)
;;              22 [always]  count:0 (precise) (FALLTHRU)
;;              37 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 210 247 211 38 398 (nil) [0 uses])
(note 211 210 212 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 38 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 213 212 214 38 (set (reg:DI 5 di)
        (reg:DI 145)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 214 213 215 38 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 215 214 216 38 (set (reg/f:DI 88 [ D.329477 ])
        (reg:DI 135)) 74 {*movdi_internal}
     (nil))
(insn 216 215 217 38 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.329477 ])) 74 {*movdi_internal}
     (nil))
(call_insn 217 216 219 38 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 39, loop depth 2, count 46572716949 (estimated locally), maybe hot
;; Invalid sum of incoming counts 54935845972 (estimated locally), should be 46572716949 (estimated locally)
;;  prev block 38, next block 40, flags: (RTL)
;;  pred:       8 [82.6% (guessed)]  count:54935845972 (estimated locally)
(code_label 219 217 220 39 391 (nil) [1 uses])
(note 220 219 221 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 39 (set (reg:DI 115 [ _109 ])
        (mem:DI (reg/f:DI 96 [ _25 ]) [7 _25->ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 222 221 223 39 (parallel [
            (set (reg:DI 116 [ _110 ])
                (plus:DI (reg:DI 115 [ _109 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 223 222 227 39 (set (mem:DI (reg/f:DI 96 [ _25 ]) [7 _25->ob_refcnt+0 S8 A64])
        (reg:DI 116 [ _110 ])) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 227 223 228 39 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 116 [ _110 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 228 227 244 39 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 224)
;;  succ:       12 [100.0% (guessed)]  count:46554087894 (estimated locally)
;;              11 [0.0% (guessed)]  count:18629055 (estimated locally) (FALLTHRU)

;; basic block 40, loop depth 0, count 408771 (estimated locally)
;;  prev block 39, next block 41, flags: (RTL)
;;  pred:       34 [0.0% (guessed)]  count:408771 (estimated locally) (FALLTHRU)
(note 244 228 237 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(call_insn 237 244 239 40 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/converter/as_to_python_function.hpp":41:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 41, loop depth 0, count 1021521674 (estimated locally), maybe hot
;;  prev block 40, next block 1, flags: (RTL)
;;  pred:       34 [100.0% (guessed)]  count:1021521674 (estimated locally)
(code_label 239 237 245 41 409 (nil) [1 uses])
(note 245 239 240 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 240 245 241 41 (set (reg/i:DI 0 ax)
        (reg/f:DI 119 [ <retval> ])) "/usr/include/boost/python/converter/as_to_python_function.hpp":41:5 74 {*movdi_internal}
     (nil))
(insn 241 240 0 41 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/as_to_python_function.hpp":41:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1021521674 (estimated locally) (FALLTHRU)


;; Function init_module_libChineseCheckers (_Z30init_module_libChineseCheckersv, funcdef_no=11103, decl_uid=264274, cgraph_uid=2996, symbol_order=3893)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 4 2 (set (reg/f:DI 247)
        (const_int 40 [0x28])) "src/ChineseCheckersWrapper.cpp":119:41 74 {*movdi_internal}
     (nil))
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.330013+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 247) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":119:41 1159 {stack_protect_set_1_di}
     (nil))
(insn 7 4 8 2 (set (reg:DI 248)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 244 [ D.326976 ])
        (reg:DI 248)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 250)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python19to_python_converterISt6vectorIS2_I5ColorSaIS3_EESaIS5_EE16gridtype_to_listLb0EE15get_pytype_implEv") [flags 0x1]  <function_decl 0x7f1a36e34f00 get_pytype_impl>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 249)
        (reg:DI 250)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 249)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python19to_python_converterISt6vectorIS2_I5ColorSaIS3_EESaIS5_EE16gridtype_to_listLb0EE15get_pytype_implEv") [flags 0x1]  <function_decl 0x7f1a36e34f00 get_pytype_impl>)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 244 [ D.326976 ])) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 252)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter21as_to_python_functionISt6vectorIS3_I5ColorSaIS4_EESaIS6_EE16gridtype_to_listE7convertEPKv") [flags 0x1]  <function_decl 0x7f1a369c4600 convert>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 251)
        (reg:DI 252)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 251)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python9converter21as_to_python_functionISt6vectorIS3_I5ColorSaIS4_EESaIS6_EE16gridtype_to_listE7convertEPKv") [flags 0x1]  <function_decl 0x7f1a369c4600 convert>)
        (nil)))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6insertEPFP7_objectPKvENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981e00 insert>) [0 insert S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/to_python_converter.hpp":82:32 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6insertEPFP7_objectPKvENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981e00 insert>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 17 16 18 2 (set (reg:DI 253)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE")  <var_decl 0x7f1a351562d0 _ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 245 [ D.326973 ])
        (reg:DI 253)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE")  <var_decl 0x7f1a351562d0 _ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE>)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 255)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python19to_python_converterISt6vectorIS2_IS2_IiSaIiEESaIS4_EESaIS6_EE40vector_of_vector_of_positiontype_to_listLb0EE15get_pytype_implEv") [flags 0x1]  <function_decl 0x7f1a36e3bb00 get_pytype_impl>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 254)
        (reg:DI 255)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 1 dx)
        (reg:DI 254)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python19to_python_converterISt6vectorIS2_IS2_IiSaIiEESaIS4_EESaIS6_EE40vector_of_vector_of_positiontype_to_listLb0EE15get_pytype_implEv") [flags 0x1]  <function_decl 0x7f1a36e3bb00 get_pytype_impl>)
        (nil)))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (reg:DI 245 [ D.326973 ])) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 257)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter21as_to_python_functionISt6vectorIS3_IS3_IiSaIiEESaIS5_EESaIS7_EE40vector_of_vector_of_positiontype_to_listE7convertEPKv") [flags 0x1]  <function_decl 0x7f1a369c4e00 convert>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 256)
        (reg:DI 257)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 256)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python9converter21as_to_python_functionISt6vectorIS3_IS3_IiSaIiEESaIS5_EESaIS7_EE40vector_of_vector_of_positiontype_to_listE7convertEPKv") [flags 0x1]  <function_decl 0x7f1a369c4e00 convert>)
        (nil)))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6insertEPFP7_objectPKvENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981e00 insert>) [0 insert S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/to_python_converter.hpp":82:32 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6insertEPFP7_objectPKvENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981e00 insert>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 27 26 28 2 (set (reg:DI 258)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIiSaIiEE")  <var_decl 0x7f1a351561b0 _ZTSSt6vectorIiSaIiEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 246 [ D.326970 ])
        (reg:DI 258)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIiSaIiEE")  <var_decl 0x7f1a351561b0 _ZTSSt6vectorIiSaIiEE>)
        (nil)))
(insn 29 28 30 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:DI 1 dx)
        (reg:DI 246 [ D.326970 ])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 260)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN18iterable_converter9constructISt6vectorIiSaIiEEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a369cb500 construct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 259)
        (reg:DI 260)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:DI 4 si)
        (reg:DI 259)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN18iterable_converter9constructISt6vectorIiSaIiEEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a369cb500 construct>)
        (nil)))
(insn 34 33 35 2 (set (reg:DI 262)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN18iterable_converter11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a37047700 convertible>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 261)
        (reg:DI 262)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:DI 5 di)
        (reg:DI 261)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN18iterable_converter11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a37047700 convertible>)
        (nil)))
(call_insn 37 36 38 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry9push_backEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981700 push_back>) [0 push_back S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":37:52 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry9push_backEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981700 push_back>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 38 37 39 2 (set (reg:DI 263)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 243 [ D.326979 ])
        (reg:DI 263)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
        (nil)))
(insn 40 39 41 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 1 dx)
        (reg:DI 243 [ D.326979 ])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 265)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN18iterable_converter9constructISt6vectorIS1_IiSaIiEESaIS3_EEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a369cb800 construct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 264)
        (reg:DI 265)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:DI 4 si)
        (reg:DI 264)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN18iterable_converter9constructISt6vectorIS1_IiSaIiEESaIS3_EEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a369cb800 construct>)
        (nil)))
(insn 45 44 46 2 (set (reg:DI 267)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN18iterable_converter11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a37047700 convertible>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 266)
        (reg:DI 267)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 47 46 48 2 (set (reg:DI 5 di)
        (reg:DI 266)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN18iterable_converter11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a37047700 convertible>)
        (nil)))
(call_insn 48 47 49 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry9push_backEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981700 push_back>) [0 push_back S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":37:52 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry9push_backEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981700 push_back>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 49 48 50 2 (set (reg:DI 268)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 50 49 51 2 (set (reg:DI 242 [ D.326982 ])
        (reg:DI 268)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
        (nil)))
(insn 51 50 52 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:DI 1 dx)
        (reg:DI 242 [ D.326982 ])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:DI 270)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN18iterable_converter9constructISt6vectorIS1_IiSaIiEESaIS3_EEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a369cb800 construct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:DI 269)
        (reg:DI 270)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 55 54 56 2 (set (reg:DI 4 si)
        (reg:DI 269)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN18iterable_converter9constructISt6vectorIS1_IiSaIiEESaIS3_EEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a369cb800 construct>)
        (nil)))
(insn 56 55 57 2 (set (reg:DI 272)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN18iterable_converter11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a37047700 convertible>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:DI 271)
        (reg:DI 272)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:DI 5 di)
        (reg:DI 271)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN18iterable_converter11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a37047700 convertible>)
        (nil)))
(call_insn 59 58 60 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry9push_backEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981700 push_back>) [0 push_back S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":37:52 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry9push_backEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981700 push_back>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 60 59 61 2 (set (reg:DI 273)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:DI 241 [ D.326985 ])
        (reg:DI 273)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
        (nil)))
(insn 62 61 63 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 63 62 64 2 (set (reg:DI 1 dx)
        (reg:DI 241 [ D.326985 ])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 64 63 65 2 (set (reg:DI 275)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN18iterable_converter9constructISt6vectorIS1_IiSaIiEESaIS3_EEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a369cb800 construct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:DI 274)
        (reg:DI 275)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:DI 4 si)
        (reg:DI 274)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN18iterable_converter9constructISt6vectorIS1_IiSaIiEESaIS3_EEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a369cb800 construct>)
        (nil)))
(insn 67 66 68 2 (set (reg:DI 277)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN18iterable_converter11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a37047700 convertible>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:DI 276)
        (reg:DI 277)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 69 68 70 2 (set (reg:DI 5 di)
        (reg:DI 276)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN18iterable_converter11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a37047700 convertible>)
        (nil)))
(call_insn 70 69 71 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry9push_backEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981700 push_back>) [0 push_back S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":37:52 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry9push_backEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981700 push_back>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 71 70 72 2 (set (reg:DI 278)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 72 71 73 2 (set (reg:DI 240 [ D.326988 ])
        (reg:DI 278)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
        (nil)))
(insn 73 72 74 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 74 73 75 2 (set (reg:DI 1 dx)
        (reg:DI 240 [ D.326988 ])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 75 74 76 2 (set (reg:DI 280)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN18iterable_converter9constructISt6vectorIS1_I5ColorSaIS2_EESaIS4_EEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a369cba00 construct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 76 75 77 2 (set (reg:DI 279)
        (reg:DI 280)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 77 76 78 2 (set (reg:DI 4 si)
        (reg:DI 279)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN18iterable_converter9constructISt6vectorIS1_I5ColorSaIS2_EESaIS4_EEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a369cba00 construct>)
        (nil)))
(insn 78 77 79 2 (set (reg:DI 282)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN18iterable_converter11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a37047700 convertible>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 79 78 80 2 (set (reg:DI 281)
        (reg:DI 282)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (nil))
(insn 80 79 81 2 (set (reg:DI 5 di)
        (reg:DI 281)) "src/ChineseCheckersWrapper.cpp":37:52 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN18iterable_converter11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a37047700 convertible>)
        (nil)))
(call_insn 81 80 82 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry9push_backEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981700 push_back>) [0 push_back S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":37:52 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry9push_backEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981700 push_back>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 82 81 83 2 (set (reg:DI 284)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/class.hpp":175:44 74 {*movdi_internal}
     (nil))
(insn 83 82 84 2 (set (reg/f:DI 283)
        (reg:DI 284)) "/usr/include/boost/python/class.hpp":175:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(insn 84 83 85 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 D.329548.ids[0].m_base_type+0 S8 A128])
        (reg/f:DI 283)) "/usr/include/boost/python/class.hpp":175:44 74 {*movdi_internal}
     (nil))
(insn 85 84 86 2 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":581:55 210 {*adddi_1}
     (nil))
(insn 86 85 87 2 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":581:55 210 {*adddi_1}
     (nil))
(insn 87 86 88 2 (set (reg:DI 36 r8)
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":581:55 74 {*movdi_internal}
     (nil))
(insn 88 87 89 2 (set (reg:DI 2 cx)
        (reg:DI 285)) "/usr/include/boost/python/class.hpp":581:55 74 {*movdi_internal}
     (nil))
(insn 89 88 90 2 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) "/usr/include/boost/python/class.hpp":581:55 74 {*movdi_internal}
     (nil))
(insn 90 89 91 2 (set (reg:DI 287)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f1a339a7ab0 *.LC9>)) "/usr/include/boost/python/class.hpp":581:55 74 {*movdi_internal}
     (nil))
(insn 91 90 92 2 (set (reg:DI 4 si)
        (reg:DI 287)) "/usr/include/boost/python/class.hpp":581:55 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f1a339a7ab0 *.LC9>)
        (nil)))
(insn 92 91 93 2 (set (reg:DI 5 di)
        (reg:DI 286)) "/usr/include/boost/python/class.hpp":581:55 74 {*movdi_internal}
     (nil))
(call_insn 93 92 94 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects10class_baseC2EPKcmPKNS0_9type_infoES4_") [flags 0x41]  <function_decl 0x7f1a39acac00 __ct_base >) [0 __ct_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":581:55 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects10class_baseC2EPKcmPKNS0_9type_infoES4_") [flags 0x41]  <function_decl 0x7f1a39acac00 __ct_base >)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 94 93 95 2 (set (reg:V2DI 288)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/boost/python/init.hpp":105:11 1439 {movv2di_internal}
     (nil))
(insn 95 94 96 2 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -848 [0xfffffffffffffcb0])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329547]+0 S16 A128])
        (reg:V2DI 288)) "/usr/include/boost/python/init.hpp":105:11 1439 {movv2di_internal}
     (nil))
(insn 96 95 97 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -832 [0xfffffffffffffcc0])) [133 MEM[(struct pair *)&D.329547 + 8B].second+0 S8 A128])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_pair.h":233:18 74 {*movdi_internal}
     (nil))
(insn 97 96 98 2 (set (reg:DI 289)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSN5boost10shared_ptrI15ChineseCheckersEE")  <var_decl 0x7f1a3511f990 _ZTSN5boost10shared_ptrI15ChineseCheckersEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 98 97 99 2 (set (reg:DI 237 [ D.329566 ])
        (reg:DI 289)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSN5boost10shared_ptrI15ChineseCheckersEE")  <var_decl 0x7f1a3511f990 _ZTSN5boost10shared_ptrI15ChineseCheckersEE>)
        (nil)))
(insn 99 98 100 2 (set (reg:DI 291)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter32expected_from_python_type_directI15ChineseCheckersE10get_pytypeEv") [flags 0x1]  <function_decl 0x7f1a35a2ef00 get_pytype>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 100 99 101 2 (set (reg:DI 290)
        (reg:DI 291)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 101 100 102 2 (set (reg:DI 2 cx)
        (reg:DI 290)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python9converter32expected_from_python_type_directI15ChineseCheckersE10get_pytypeEv") [flags 0x1]  <function_decl 0x7f1a35a2ef00 get_pytype>)
        (nil)))
(insn 102 101 103 2 (set (reg:DI 1 dx)
        (reg:DI 237 [ D.329566 ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 103 102 104 2 (set (reg:DI 293)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersNS_10shared_ptrEE9constructEP7_objectPNS1_30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a358de500 construct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 104 103 105 2 (set (reg:DI 292)
        (reg:DI 293)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 105 104 106 2 (set (reg:DI 4 si)
        (reg:DI 292)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersNS_10shared_ptrEE9constructEP7_objectPNS1_30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a358de500 construct>)
        (nil)))
(insn 106 105 107 2 (set (reg:DI 295)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersNS_10shared_ptrEE11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a358de400 convertible>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 107 106 108 2 (set (reg:DI 294)
        (reg:DI 295)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 108 107 109 2 (set (reg:DI 5 di)
        (reg:DI 294)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersNS_10shared_ptrEE11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a358de400 convertible>)
        (nil)))
(call_insn 109 108 110 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6insertEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981500 insert>) [0 insert S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6insertEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981500 insert>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       3 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              31 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 3, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 110 109 111 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 3 (set (reg:DI 296)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt10shared_ptrI15ChineseCheckersE")  <var_decl 0x7f1a3511f900 _ZTSSt10shared_ptrI15ChineseCheckersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 112 111 113 3 (set (reg:DI 238 [ D.329565 ])
        (reg:DI 296)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt10shared_ptrI15ChineseCheckersE")  <var_decl 0x7f1a3511f900 _ZTSSt10shared_ptrI15ChineseCheckersE>)
        (nil)))
(insn 113 112 114 3 (set (reg:DI 298)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter32expected_from_python_type_directI15ChineseCheckersE10get_pytypeEv") [flags 0x1]  <function_decl 0x7f1a35a2ef00 get_pytype>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 114 113 115 3 (set (reg:DI 297)
        (reg:DI 298)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 115 114 116 3 (set (reg:DI 2 cx)
        (reg:DI 297)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python9converter32expected_from_python_type_directI15ChineseCheckersE10get_pytypeEv") [flags 0x1]  <function_decl 0x7f1a35a2ef00 get_pytype>)
        (nil)))
(insn 116 115 117 3 (set (reg:DI 1 dx)
        (reg:DI 238 [ D.329565 ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 117 116 118 3 (set (reg:DI 300)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersSt10shared_ptrE9constructEP7_objectPNS1_30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a358e6400 construct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 118 117 119 3 (set (reg:DI 299)
        (reg:DI 300)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 119 118 120 3 (set (reg:DI 4 si)
        (reg:DI 299)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersSt10shared_ptrE9constructEP7_objectPNS1_30rvalue_from_python_stage1_dataE") [flags 0x1]  <function_decl 0x7f1a358e6400 construct>)
        (nil)))
(insn 120 119 121 3 (set (reg:DI 302)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersSt10shared_ptrE11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a358e6300 convertible>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 121 120 122 3 (set (reg:DI 301)
        (reg:DI 302)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (nil))
(insn 122 121 123 3 (set (reg:DI 5 di)
        (reg:DI 301)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersSt10shared_ptrE11convertibleEP7_object") [flags 0x1]  <function_decl 0x7f1a358e6300 convertible>)
        (nil)))
(call_insn 123 122 124 3 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6insertEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981500 insert>) [0 insert S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":28:32 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6insertEPFPvP7_objectEPFvS5_PNS1_30rvalue_from_python_stage1_dataEENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981500 insert>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       4 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              31 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 124 123 125 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 4 (set (reg:DI 303)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 126 125 127 4 (set (reg:DI 239 [ D.329564 ])
        (reg:DI 303)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(insn 127 126 128 4 (set (reg:DI 305)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python7objects28non_polymorphic_id_generatorI15ChineseCheckersE7executeEPv") [flags 0x1]  <function_decl 0x7f1a35a3f900 execute>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/inheritance.hpp":72:28 74 {*movdi_internal}
     (nil))
(insn 128 127 129 4 (set (reg:DI 304)
        (reg:DI 305)) "/usr/include/boost/python/object/inheritance.hpp":72:28 74 {*movdi_internal}
     (nil))
(insn 129 128 130 4 (set (reg:DI 4 si)
        (reg:DI 304)) "/usr/include/boost/python/object/inheritance.hpp":72:28 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python7objects28non_polymorphic_id_generatorI15ChineseCheckersE7executeEPv") [flags 0x1]  <function_decl 0x7f1a35a3f900 execute>)
        (nil)))
(insn 130 129 131 4 (set (reg:DI 5 di)
        (reg:DI 239 [ D.329564 ])) "/usr/include/boost/python/object/inheritance.hpp":72:28 74 {*movdi_internal}
     (nil))
(call_insn 131 130 132 4 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects23register_dynamic_id_auxENS0_9type_infoEPFSt4pairIPvS2_ES4_E") [flags 0x41]  <function_decl 0x7f1a39621d00 register_dynamic_id_aux>) [0 register_dynamic_id_aux S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/inheritance.hpp":72:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects23register_dynamic_id_auxENS0_9type_infoEPFSt4pairIPvS2_ES4_E") [flags 0x41]  <function_decl 0x7f1a39621d00 register_dynamic_id_aux>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              31 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 5, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 132 131 133 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 5 (set (reg:DI 306)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 134 133 135 5 (set (reg:DI 236 [ D.329572 ])
        (reg:DI 306)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(insn 135 134 136 5 (set (reg:DI 308)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python19to_python_converterI15ChineseCheckersNS0_7objects18class_cref_wrapperIS2_NS3_13make_instanceIS2_NS3_12value_holderIS2_EEEEEELb1EE15get_pytype_implEv") [flags 0x1]  <function_decl 0x7f1a358f0800 get_pytype_impl>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 136 135 137 5 (set (reg:DI 307)
        (reg:DI 308)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 137 136 138 5 (set (reg:DI 1 dx)
        (reg:DI 307)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python19to_python_converterI15ChineseCheckersNS0_7objects18class_cref_wrapperIS2_NS3_13make_instanceIS2_NS3_12value_holderIS2_EEEEEELb1EE15get_pytype_implEv") [flags 0x1]  <function_decl 0x7f1a358f0800 get_pytype_impl>)
        (nil)))
(insn 138 137 139 5 (set (reg:DI 4 si)
        (reg:DI 236 [ D.329572 ])) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 139 138 140 5 (set (reg:DI 310)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter21as_to_python_functionI15ChineseCheckersNS0_7objects18class_cref_wrapperIS3_NS4_13make_instanceIS3_NS4_12value_holderIS3_EEEEEEE7convertEPKv") [flags 0x1]  <function_decl 0x7f1a35a3ff00 convert>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 140 139 141 5 (set (reg:DI 309)
        (reg:DI 310)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (nil))
(insn 141 140 142 5 (set (reg:DI 5 di)
        (reg:DI 309)) "/usr/include/boost/python/to_python_converter.hpp":82:32 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python9converter21as_to_python_functionI15ChineseCheckersNS0_7objects18class_cref_wrapperIS3_NS4_13make_instanceIS3_NS4_12value_holderIS3_EEEEEEE7convertEPKv") [flags 0x1]  <function_decl 0x7f1a35a3ff00 convert>)
        (nil)))
(call_insn 142 141 143 5 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6insertEPFP7_objectPKvENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981e00 insert>) [0 insert S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/to_python_converter.hpp":82:32 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6insertEPFP7_objectPKvENS0_9type_infoEPFPK11_typeobjectvE") [flags 0x41]  <function_decl 0x7f1a3a981e00 insert>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              31 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 6, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 143 142 144 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 6 (set (reg:DI 312)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/class_metadata.hpp":273:85 74 {*movdi_internal}
     (nil))
(insn 145 144 146 6 (set (reg/f:DI 311)
        (reg:DI 312)) "/usr/include/boost/python/object/class_metadata.hpp":273:85 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(insn 146 145 147 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [6 MEM[(struct type_info *)_903].m_base_type+0 S8 A128])
        (reg/f:DI 311)) "/usr/include/boost/python/object/class_metadata.hpp":273:85 74 {*movdi_internal}
     (nil))
(insn 147 146 148 6 (set (reg:DI 314)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/class_metadata.hpp":273:55 74 {*movdi_internal}
     (nil))
(insn 148 147 149 6 (set (reg/f:DI 313)
        (reg:DI 314)) "/usr/include/boost/python/object/class_metadata.hpp":273:55 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(insn 149 148 150 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [6 MEM[(struct type_info *)_906].m_base_type+0 S8 A128])
        (reg/f:DI 313)) "/usr/include/boost/python/object/class_metadata.hpp":273:55 74 {*movdi_internal}
     (nil))
(insn 150 149 151 6 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object/class_metadata.hpp":273:35 210 {*adddi_1}
     (nil))
(insn 151 150 152 6 (parallel [
            (set (reg:DI 316)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object/class_metadata.hpp":273:35 210 {*adddi_1}
     (nil))
(insn 152 151 153 6 (set (reg:DI 4 si)
        (reg:DI 315)) "/usr/include/boost/python/object/class_metadata.hpp":273:35 74 {*movdi_internal}
     (nil))
(insn 153 152 154 6 (set (reg:DI 5 di)
        (reg:DI 316)) "/usr/include/boost/python/object/class_metadata.hpp":273:35 74 {*movdi_internal}
     (nil))
(call_insn 154 153 155 6 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects17copy_class_objectERKNS0_9type_infoES4_") [flags 0x41]  <function_decl 0x7f1a393c8e00 copy_class_object>) [0 copy_class_object S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/class_metadata.hpp":273:35 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects17copy_class_objectERKNS0_9type_infoES4_") [flags 0x41]  <function_decl 0x7f1a393c8e00 copy_class_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       7 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              31 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 7, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 155 154 156 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 7 (parallel [
            (set (reg:DI 317)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":453:32 210 {*adddi_1}
     (nil))
(insn 157 156 158 7 (set (reg:DI 4 si)
        (const_int 144 [0x90])) "/usr/include/boost/python/class.hpp":453:32 74 {*movdi_internal}
     (nil))
(insn 158 157 159 7 (set (reg:DI 5 di)
        (reg:DI 317)) "/usr/include/boost/python/class.hpp":453:32 74 {*movdi_internal}
     (nil))
(call_insn 159 158 160 7 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects10class_base17set_instance_sizeEm") [flags 0x41]  <function_decl 0x7f1a39aca800 set_instance_size>) [0 set_instance_size S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":453:32 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects10class_base17set_instance_sizeEm") [flags 0x41]  <function_decl 0x7f1a39aca800 set_instance_size>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       8 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              31 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 8, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 160 159 161 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 8 (set (reg/f:DI 91 [ _62 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -848 [0xfffffffffffffcb0])) [6 MEM[(const struct init_base *)&D.329547].m_doc+0 S8 A128])) "/usr/include/boost/python/init.hpp":115:16 74 {*movdi_internal}
     (nil))
(insn 162 161 163 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1016 [0xfffffffffffffc08])) [6 doc+0 S8 A64])
        (reg/f:DI 91 [ _62 ])) 74 {*movdi_internal}
     (nil))
(insn 163 162 164 8 (set (reg:DI 5 di)
        (const_int 16 [0x10])) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(call_insn 164 163 1288 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/py_function.hpp":124:18 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       31 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 [always (adjusted)]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [always (adjusted)]  count:1073741824 (estimated locally) (FALLTHRU)
(note 1288 164 165 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 165 1288 166 9 (set (reg/f:DI 318)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 318)
        (nil)))
(insn 166 165 168 9 (set (reg/f:DI 92 [ _65 ])
        (reg/f:DI 318)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(insn 168 166 169 9 (set (reg:DI 320)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE")  <var_decl 0x7f1a352d2510 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 169 168 170 9 (set (reg/f:DI 319)
        (plus:DI (reg:DI 320)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":33:26 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE")  <var_decl 0x7f1a352d2510 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIPFvP7_objectENS0_21default_call_policiesENS_3mpl7vector2IvS6_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 170 169 171 9 (set (mem/f:DI (reg/f:DI 92 [ _65 ]) [5 MEM[(struct caller_py_function_impl *)_65].D.308102._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 319)) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 171 170 172 9 (set (reg:DI 322)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python7objects11make_holderILi0EE5applyINS1_12value_holderI15ChineseCheckersEENS_3mpl7vector0IN4mpl_2naEEEE7executeEP7_object") [flags 0x1]  <function_decl 0x7f1a35569000 execute>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 172 171 173 9 (set (reg/f:DI 321)
        (reg:DI 322)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python7objects11make_holderILi0EE5applyINS1_12value_holderI15ChineseCheckersEENS_3mpl7vector0IN4mpl_2naEEEE7executeEP7_object") [flags 0x1]  <function_decl 0x7f1a35569000 execute>)
        (nil)))
(insn 173 172 174 9 (set (mem/f:DI (plus:DI (reg/f:DI 92 [ _65 ])
                (const_int 8 [0x8])) [47 MEM <void (*first_type) (struct _object *)> [(struct caller_py_function_impl *)_65 + 8B]+0 S8 A64])
        (reg/f:DI 321)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 174 173 175 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [54 MEM[(struct py_function_impl_base * &)_906]+0 S8 A128])
        (reg/f:DI 92 [ _65 ])) "/usr/include/c++/11/bits/unique_ptr.h":155:56 74 {*movdi_internal}
     (nil))
(insn 175 174 176 9 (parallel [
            (set (reg:DI 323)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 176 175 177 9 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -848 [0xfffffffffffffcb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 177 176 178 9 (parallel [
            (set (reg:DI 325)
                (plus:DI (reg:DI 324)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 178 177 179 9 (parallel [
            (set (reg:DI 326)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 179 178 180 9 (set (reg:DI 1 dx)
        (reg:DI 325)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 180 179 181 9 (set (reg:DI 4 si)
        (reg:DI 326)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 181 180 182 9 (set (reg:DI 5 di)
        (reg:DI 323)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(call_insn 182 181 183 9 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>) [0 function_object S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/make_function.hpp":62:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 6 [0x6])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       10 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              13 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 10, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 183 182 184 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 10 (parallel [
            (set (reg:DI 327)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -736 [0xfffffffffffffd20])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 185 184 186 10 (parallel [
            (set (reg:DI 226 [ _673 ])
                (plus:DI (reg:DI 327)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 186 185 187 10 (parallel [
            (set (reg:DI 329)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1016 [0xfffffffffffffc08])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 187 186 188 10 (set (reg:V2DI 328)
        (vec_concat:V2DI (reg:DI 329)
            (reg:DI 226 [ _673 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 188 187 189 10 (set (reg:V2DI 221 [ _567 ])
        (reg:V2DI 328)) 1439 {movv2di_internal}
     (nil))
(insn 189 188 190 10 (set (reg:V2DI 330)
        (vec_duplicate:V2DI (reg:DI 226 [ _673 ]))) 5014 {*vec_dupv2di}
     (nil))
(insn 190 189 191 10 (set (reg:V2DI 230 [ _726 ])
        (reg:V2DI 330)) 1439 {movv2di_internal}
     (nil))
(insn 191 190 192 10 (set (reg/f:DI 93 [ _66 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [54 MEM[(struct py_function_impl_base * &)_906]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 192 191 193 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ _66 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 193 192 194 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 199)
;;  succ:       11 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
;;              12 [30.0% (guessed)]  count:322122544 (estimated locally)

;; basic block 11, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
(note 194 193 195 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 11 (set (reg/f:DI 331)
        (mem/f:DI (reg/f:DI 93 [ _66 ]) [5 _66->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 196 195 197 11 (set (reg/f:DI 332)
        (mem/f:DI (plus:DI (reg/f:DI 331)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_67 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 197 196 198 11 (set (reg:DI 5 di)
        (reg/f:DI 93 [ _66 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 198 197 199 11 (call (mem:QI (reg/f:DI 332) [0 *OBJ_TYPE_REF(_68;_66->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       12 [always]  count:751619281 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       10 [30.0% (guessed)]  count:322122544 (estimated locally)
;;              11 [always]  count:751619281 (estimated locally) (FALLTHRU)
(code_label 199 198 200 12 425 (nil) [1 uses])
(note 200 199 201 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 12 (set (reg/f:DI 99 [ _72 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1008 [0xfffffffffffffc10])) [31 MEM[(const struct object_base &)&D.329579].m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":405:32 74 {*movdi_internal}
     (nil))
(insn 202 201 203 12 (set (reg:DI 100 [ _73 ])
        (mem:DI (reg/f:DI 99 [ _72 ]) [7 *_72.ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 203 202 204 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1000 [0xfffffffffffffc18])) [31 MEM[(struct object_base *)&D.329598].m_ptr+0 S8 A64])
        (reg/f:DI 99 [ _72 ])) "/usr/include/boost/python/object_core.hpp":405:7 74 {*movdi_internal}
     (nil))
(insn 204 203 205 12 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -736 [0xfffffffffffffd20])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329605]+0 S16 A128])
        (reg:V2DI 221 [ _567 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 205 204 206 12 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -720 [0xfffffffffffffd30])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329605 + 16B]+0 S16 A128])
        (reg:V2DI 230 [ _726 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 206 205 207 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -688 [0xfffffffffffffd50])) [6 MEM[(struct cons *)&D.329605 + 48B].head+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":309:7 74 {*movdi_internal}
     (nil))
(insn 207 206 208 12 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -680 [0xfffffffffffffd58])) [0 MEM[(struct cons *)&D.329605 + 56B].head.__pfn+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 208 207 209 12 (set (mem/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -672 [0xfffffffffffffd60])) [0 MEM[(struct cons *)&D.329605 + 56B].head.__delta+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 209 208 210 12 (parallel [
            (set (reg:DI 333)
                (plus:DI (reg:DI 100 [ _73 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 210 209 211 12 (set (mem:DI (reg/f:DI 99 [ _72 ]) [7 *_72.ob_refcnt+0 S8 A64])
        (reg:DI 333)) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 211 210 212 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -992 [0xfffffffffffffc20])) [31 MEM[(struct object_base *)&D.329604].m_ptr+0 S8 A128])
        (reg/f:DI 99 [ _72 ])) "/usr/include/boost/python/object_core.hpp":405:7 74 {*movdi_internal}
     (nil))
(insn 212 211 213 12 (parallel [
            (set (reg:DI 334)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1000 [0xfffffffffffffc18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":168:36 210 {*adddi_1}
     (nil))
(insn 213 212 214 12 (parallel [
            (set (reg:DI 335)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":168:36 210 {*adddi_1}
     (nil))
(insn 214 213 215 12 (set (reg:DI 2 cx)
        (reg/f:DI 91 [ _62 ])) "/usr/include/boost/python/object_core.hpp":168:36 74 {*movdi_internal}
     (nil))
(insn 215 214 216 12 (set (reg:DI 1 dx)
        (reg:DI 334)) "/usr/include/boost/python/object_core.hpp":168:36 74 {*movdi_internal}
     (nil))
(insn 216 215 217 12 (set (reg:DI 336)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f1a339a7bd0 *.LC10>)) "/usr/include/boost/python/object_core.hpp":168:36 74 {*movdi_internal}
     (nil))
(insn 217 216 218 12 (set (reg:DI 4 si)
        (reg:DI 336)) "/usr/include/boost/python/object_core.hpp":168:36 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f1a339a7bd0 *.LC10>)
        (nil)))
(insn 218 217 219 12 (set (reg:DI 5 di)
        (reg:DI 335)) "/usr/include/boost/python/object_core.hpp":168:36 74 {*movdi_internal}
     (nil))
(call_insn 219 218 1318 12 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>) [0 add_to_namespace S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":168:36 813 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       22 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              17 [always (adjusted)]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 0 (precise), probably never executed
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       9 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1318 219 1321 13 506 (nil) [1 uses])
(note 1321 1318 1319 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 1319 1321 222 13 (set (reg:DI 340)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
;;  succ:       14 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 14, loop depth 0, count 0 (precise), probably never executed
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 222 1319 223 14 427 (nil) [0 uses])
(note 223 222 224 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 14 (set (reg/f:DI 96 [ _69 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [54 MEM[(struct py_function_impl_base * &)_906]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 225 224 226 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ _69 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 226 225 227 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 232)
;;  succ:       15 [never]  count:0 (precise) (FALLTHRU)
;;              16 [never]  count:0 (precise)

;; basic block 15, loop depth 0, count 0 (precise), probably never executed
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [never]  count:0 (precise) (FALLTHRU)
(note 227 226 228 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 15 (set (reg/f:DI 337)
        (mem/f:DI (reg/f:DI 96 [ _69 ]) [5 _69->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 229 228 230 15 (set (reg/f:DI 338)
        (mem/f:DI (plus:DI (reg/f:DI 337)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_70 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 230 229 231 15 (set (reg:DI 5 di)
        (reg/f:DI 96 [ _69 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 231 230 232 15 (call (mem:QI (reg/f:DI 338) [0 *OBJ_TYPE_REF(_71;_69->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       16 [never]  count:0 (precise) (FALLTHRU)

;; basic block 16, loop depth 0, count 0 (precise), probably never executed
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       14 [never]  count:0 (precise)
;;              15 [never]  count:0 (precise) (FALLTHRU)
(code_label 232 231 233 16 428 (nil) [1 uses])
(note 233 232 234 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 239 16 (set (reg:DI 339)
        (reg:DI 340)) 74 {*movdi_internal}
     (nil))
;;  succ:       32 [always]  count:0 (precise) (FALLTHRU)

;; basic block 17, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       12 [always (adjusted)]  count:1073741824 (estimated locally) (FALLTHRU)
(note 239 234 240 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 17 (parallel [
            (set (reg:DI 343)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 241 240 242 17 (parallel [
            (set (reg:DI 235 [ _841 ])
                (plus:DI (reg:DI 343)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 242 241 243 17 (parallel [
            (set (reg:DI 345)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 243 242 244 17 (set (reg:V2DI 344)
        (vec_concat:V2DI (reg:DI 345)
            (reg:DI 235 [ _841 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 244 243 245 17 (set (reg:V2DI 231 [ _776 ])
        (reg:V2DI 344)) 1439 {movv2di_internal}
     (nil))
(insn 245 244 246 17 (set (reg:V2DI 346)
        (vec_duplicate:V2DI (reg:DI 235 [ _841 ]))) 5014 {*vec_dupv2di}
     (nil))
(insn 246 245 247 17 (set (reg:V2DI 101 [ _74 ])
        (reg:V2DI 346)) 1439 {movv2di_internal}
     (nil))
(insn 247 246 250 17 (set (reg:DI 103 [ _81 ])
        (mem:DI (reg/f:DI 99 [ _72 ]) [7 MEM[(const struct PyObject *)_72].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 250 247 251 17 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 103 [ _81 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 251 250 279 17 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 262)
;;  succ:       19 [100.0% (guessed)]  count:1073312328 (estimated locally)
;;              18 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 0, count 5570067 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
;;              21 [0.0% (guessed)]  count:429324 (estimated locally) (FALLTHRU)
;;              26 [0.0% (guessed)]  count:429152 (estimated locally)
;;              40 [0.0% (guessed)]  count:428981 (estimated locally)
;;              54 [0.0% (guessed)]  count:428809 (estimated locally)
;;              68 [0.0% (guessed)]  count:428638 (estimated locally)
;;              82 [0.0% (guessed)]  count:428466 (estimated locally)
;;              96 [0.0% (guessed)]  count:428295 (estimated locally)
;;              110 [0.0% (guessed)]  count:428124 (estimated locally)
;;              124 [0.0% (guessed)]  count:427952 (estimated locally)
;;              138 [0.0% (guessed)]  count:427781 (estimated locally)
;;              152 [0.0% (guessed)]  count:427610 (estimated locally)
;;              155 [0.0% (guessed)]  count:427439 (estimated locally) (FALLTHRU)
(code_label 279 251 252 18 433 (nil) [10 uses])
(note 252 279 253 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 18 (set (reg:DI 347)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 254 253 255 18 (set (reg:DI 2 cx)
        (reg:DI 347)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)
        (nil)))
(insn 255 254 256 18 (set (reg:SI 1 dx)
        (const_int 422 [0x1a6])) "/usr/include/boost/python/object_core.hpp":422:5 75 {*movsi_internal}
     (nil))
(insn 256 255 257 18 (set (reg:DI 348)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 257 256 258 18 (set (reg:DI 4 si)
        (reg:DI 348)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)
        (nil)))
(insn 258 257 259 18 (set (reg:DI 349)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 259 258 260 18 (set (reg:DI 5 di)
        (reg:DI 349)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)
        (nil)))
(call_insn 260 259 262 18 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":422:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 19, loop depth 0, count 1073312329 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       17 [100.0% (guessed)]  count:1073312328 (estimated locally)
(code_label 262 260 263 19 430 (nil) [1 uses])
(note 263 262 264 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 19 (parallel [
            (set (reg:DI 104 [ _82 ])
                (plus:DI (reg:DI 103 [ _81 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 265 264 266 19 (set (mem:DI (reg/f:DI 99 [ _72 ]) [7 _72->ob_refcnt+0 S8 A64])
        (reg:DI 104 [ _82 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 266 265 267 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 104 [ _82 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 267 266 268 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 271)
;;  succ:       21 [67.0% (guessed)]  count:719119262 (estimated locally)
;;              20 [33.0% (guessed)]  count:354193067 (estimated locally) (FALLTHRU)

;; basic block 20, loop depth 0, count 354193067 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [33.0% (guessed)]  count:354193067 (estimated locally) (FALLTHRU)
(note 268 267 269 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 20 (set (reg:DI 5 di)
        (reg/f:DI 99 [ _72 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 270 269 271 20 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -12 [0xfffffffffffffff4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       21 [always]  count:354193067 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 0, count 1073312330 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       19 [67.0% (guessed)]  count:719119262 (estimated locally)
;;              20 [always]  count:354193067 (estimated locally) (FALLTHRU)
(code_label 271 270 272 21 431 (nil) [1 uses])
(note 272 271 273 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 21 (set (reg/f:DI 105 [ _83 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1000 [0xfffffffffffffc18])) [31 D.329598.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 274 273 277 21 (set (reg:DI 106 [ _84 ])
        (mem:DI (reg/f:DI 105 [ _83 ]) [7 MEM[(const struct PyObject *)_83].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 277 274 278 21 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 106 [ _84 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 278 277 1322 21 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 302)
;;  succ:       24 [100.0% (guessed)]  count:1072883006 (estimated locally)
;;              18 [0.0% (guessed)]  count:429324 (estimated locally) (FALLTHRU)

;; basic block 22, loop depth 0, count 0 (precise), probably never executed
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       12 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1322 278 1325 22 507 (nil) [1 uses])
(note 1325 1322 1323 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 1323 1325 283 22 (set (reg:DI 352)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       23 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 23, loop depth 0, count 0 (precise), probably never executed
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 283 1323 284 23 434 (nil) [0 uses])
(note 284 283 285 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 23 (parallel [
            (set (reg:DI 350)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 286 285 287 23 (set (reg:DI 5 di)
        (reg:DI 350)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 287 286 288 23 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 288 287 290 23 (set (reg:DI 351)
        (reg:DI 352)) 74 {*movdi_internal}
     (nil))
(insn 290 288 291 23 (parallel [
            (set (reg:DI 355)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1000 [0xfffffffffffffc18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 291 290 292 23 (set (reg:DI 5 di)
        (reg:DI 355)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 292 291 293 23 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 293 292 295 23 (set (reg:DI 356)
        (reg:DI 351)) 74 {*movdi_internal}
     (nil))
(insn 295 293 296 23 (parallel [
            (set (reg:DI 358)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 296 295 297 23 (set (reg:DI 5 di)
        (reg:DI 358)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 297 296 298 23 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 298 297 302 23 (set (reg:DI 339)
        (reg:DI 356)) 74 {*movdi_internal}
     (nil))
;;  succ:       32 [always]  count:0 (precise) (FALLTHRU)

;; basic block 24, loop depth 0, count 1072883006 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       21 [100.0% (guessed)]  count:1072883006 (estimated locally)
(code_label 302 298 303 24 432 (nil) [1 uses])
(note 303 302 304 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 24 (parallel [
            (set (reg:DI 107 [ _85 ])
                (plus:DI (reg:DI 106 [ _84 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 305 304 306 24 (set (mem:DI (reg/f:DI 105 [ _83 ]) [7 _83->ob_refcnt+0 S8 A64])
        (reg:DI 107 [ _85 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 306 305 307 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 107 [ _85 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 307 306 308 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 311)
;;  succ:       26 [67.0% (guessed)]  count:718831616 (estimated locally)
;;              25 [33.0% (guessed)]  count:354051390 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 0, count 354051390 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [33.0% (guessed)]  count:354051390 (estimated locally) (FALLTHRU)
(note 308 307 309 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 25 (set (reg:DI 5 di)
        (reg/f:DI 105 [ _83 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 310 309 311 25 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -13 [0xfffffffffffffff3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       26 [always]  count:354051390 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 0, count 1072883006 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       24 [67.0% (guessed)]  count:718831616 (estimated locally)
;;              25 [always]  count:354051390 (estimated locally) (FALLTHRU)
(code_label 311 310 312 26 435 (nil) [1 uses])
(note 312 311 313 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 26 (set (reg/f:DI 108 [ _86 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1008 [0xfffffffffffffc10])) [31 D.329579.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 314 313 317 26 (set (reg:DI 109 [ _87 ])
        (mem:DI (reg/f:DI 108 [ _86 ]) [7 MEM[(const struct PyObject *)_86].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 317 314 318 26 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 109 [ _87 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 318 317 319 26 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 279)
;;  succ:       27 [100.0% (guessed)]  count:1072453854 (estimated locally) (FALLTHRU)
;;              18 [0.0% (guessed)]  count:429152 (estimated locally)

;; basic block 27, loop depth 0, count 1072453854 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [100.0% (guessed)]  count:1072453854 (estimated locally) (FALLTHRU)
(note 319 318 320 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 27 (parallel [
            (set (reg:DI 110 [ _88 ])
                (plus:DI (reg:DI 109 [ _87 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 321 320 322 27 (set (mem:DI (reg/f:DI 108 [ _86 ]) [7 _86->ob_refcnt+0 S8 A64])
        (reg:DI 110 [ _88 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 322 321 323 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 110 [ _88 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 323 322 324 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 327)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 327)
;;  succ:       29 [67.0% (guessed)]  count:718544084 (estimated locally)
;;              28 [33.0% (guessed)]  count:353909770 (estimated locally) (FALLTHRU)

;; basic block 28, loop depth 0, count 353909770 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 [33.0% (guessed)]  count:353909770 (estimated locally) (FALLTHRU)
(note 324 323 325 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 28 (set (reg:DI 5 di)
        (reg/f:DI 108 [ _86 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 326 325 327 28 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -14 [0xfffffffffffffff2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       29 [always]  count:353909770 (estimated locally) (FALLTHRU)

;; basic block 29, loop depth 0, count 1072453854 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       27 [67.0% (guessed)]  count:718544084 (estimated locally)
;;              28 [always]  count:353909770 (estimated locally) (FALLTHRU)
(code_label 327 326 328 29 436 (nil) [1 uses])
(note 328 327 329 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 330 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1024 [0xfffffffffffffc00])) [6 D.329542+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":233:30 74 {*movdi_internal}
     (nil))
(insn 330 329 331 29 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -816 [0xfffffffffffffcd0])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329543]+0 S16 A128])
        (reg:V2DI 231 [ _776 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 331 330 332 29 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -800 [0xfffffffffffffce0])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329543 + 16B]+0 S16 A128])
        (reg:V2DI 101 [ _74 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 332 331 333 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -768 [0xfffffffffffffd00])) [6 MEM[(struct cons *)&D.329543 + 48B].head+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":309:7 74 {*movdi_internal}
     (nil))
(insn 333 332 334 29 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -760 [0xfffffffffffffd08])) [0 MEM[(struct cons *)&D.329543 + 56B].head.__pfn+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 334 333 335 29 (set (mem/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -752 [0xfffffffffffffd10])) [0 MEM[(struct cons *)&D.329543 + 56B].head.__delta+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 335 334 336 29 (set (reg:V2DI 359)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 336 335 337 29 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [134 MEM[(struct pair *)_906]+0 S16 A128])
        (reg:V2DI 359)) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 337 336 338 29 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(call_insn 338 337 1290 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/py_function.hpp":124:18 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              30 [always (adjusted)]  count:1072453854 (estimated locally) (FALLTHRU)

;; basic block 30, loop depth 0, count 1072453854 (estimated locally), maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 [always (adjusted)]  count:1072453854 (estimated locally) (FALLTHRU)
(note 1290 338 339 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 339 1290 340 30 (set (reg/f:DI 360)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 360)
        (nil)))
(insn 340 339 354 30 (set (reg/f:DI 111 [ _95 ])
        (reg/f:DI 360)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(insn 354 340 355 30 (set (reg:DI 363)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE")  <var_decl 0x7f1a35ba7000 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 355 354 356 30 (set (reg/f:DI 362)
        (plus:DI (reg:DI 363)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":33:26 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE")  <var_decl 0x7f1a35ba7000 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 356 355 357 30 (set (mem/f:DI (reg/f:DI 111 [ _95 ]) [5 MEM[(struct caller_py_function_impl *)_95].D.294232._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 362)) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 357 356 358 30 (set (reg:DI 365)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZN15ChineseCheckers4moveEiRKSt6vectorIS0_IiSaIiEESaIS2_EE") [flags 0x41]  <function_decl 0x7f1a37302d00 move>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 358 357 359 30 (set (reg/f:DI 364)
        (reg:DI 365)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZN15ChineseCheckers4moveEiRKSt6vectorIS0_IiSaIiEESaIS2_EE") [flags 0x41]  <function_decl 0x7f1a37302d00 move>)
        (nil)))
(insn 359 358 360 30 (set (mem/f:DI (plus:DI (reg/f:DI 111 [ _95 ])
                (const_int 8 [0x8])) [80 MEM <bool ChineseCheckers::<T285b9> (struct ChineseCheckers *, int, const struct vector &) *> [(struct caller_py_function_impl *)_95 + 8B]+0 S8 A64])
        (reg/f:DI 364)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 360 359 361 30 (set (mem:DI (plus:DI (reg/f:DI 111 [ _95 ])
                (const_int 16 [0x10])) [80 MEM <long int> [(struct caller_py_function_impl *)_95 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 361 360 362 30 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])
        (reg/f:DI 111 [ _95 ])) "/usr/include/c++/11/bits/unique_ptr.h":155:56 74 {*movdi_internal}
     (nil))
(insn 362 361 363 30 (parallel [
            (set (reg:DI 366)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -984 [0xfffffffffffffc28])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 363 362 364 30 (parallel [
            (set (reg:DI 367)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 364 363 365 30 (parallel [
            (set (reg:DI 368)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 365 364 366 30 (set (reg:DI 1 dx)
        (reg:DI 367)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 366 365 367 30 (set (reg:DI 4 si)
        (reg:DI 368)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 367 366 368 30 (set (reg:DI 5 di)
        (reg:DI 366)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(call_insn 368 367 1314 30 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>) [0 function_object S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/make_function.hpp":62:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 11 [0xb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       33 [always]  count:1072453854 (estimated locally) (FALLTHRU)
;;              36 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 31, loop depth 0, count 0 (precise), probably never executed
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       2 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1314 368 1317 31 505 (nil) [1 uses])
(note 1317 1314 1315 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 1315 1317 343 31 (set (reg:DI 339)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       32 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 32, loop depth 0, count 0 (precise), probably never executed
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       16 [always]  count:0 (precise) (FALLTHRU)
;;              31 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              23 [always]  count:0 (precise) (FALLTHRU)
(code_label 343 1315 344 32 429 (nil) [0 uses])
(note 344 343 345 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 346 32 (parallel [
            (set (reg:DI 361)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 346 345 347 32 (set (reg:DI 5 di)
        (reg:DI 361)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 347 346 348 32 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 348 347 349 32 (set (reg/f:DI 206 [ D.330010 ])
        (reg:DI 339)) 74 {*movdi_internal}
     (nil))
(insn 349 348 350 32 (set (reg:DI 5 di)
        (reg/f:DI 206 [ D.330010 ])) 74 {*movdi_internal}
     (nil))
(call_insn 350 349 369 32 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 33, loop depth 0, count 1072453854 (estimated locally), maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       30 [always]  count:1072453854 (estimated locally) (FALLTHRU)
(note 369 350 370 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 33 (set (reg/f:DI 112 [ _96 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 371 370 372 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 112 [ _96 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 372 371 373 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 378)
;;  succ:       34 [70.0% (guessed)]  count:750717701 (estimated locally) (FALLTHRU)
;;              35 [30.0% (guessed)]  count:321736153 (estimated locally)

;; basic block 34, loop depth 0, count 750717701 (estimated locally), maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 [70.0% (guessed)]  count:750717701 (estimated locally) (FALLTHRU)
(note 373 372 374 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 34 (set (reg/f:DI 369)
        (mem/f:DI (reg/f:DI 112 [ _96 ]) [5 _96->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 375 374 376 34 (set (reg/f:DI 370)
        (mem/f:DI (plus:DI (reg/f:DI 369)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_97 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 376 375 377 34 (set (reg:DI 5 di)
        (reg/f:DI 112 [ _96 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 377 376 378 34 (call (mem:QI (reg/f:DI 370) [0 *OBJ_TYPE_REF(_98;_96->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       35 [always]  count:750717701 (estimated locally) (FALLTHRU)

;; basic block 35, loop depth 0, count 1072453854 (estimated locally), maybe hot
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       33 [30.0% (guessed)]  count:321736153 (estimated locally)
;;              34 [always]  count:750717701 (estimated locally) (FALLTHRU)
(code_label 378 377 379 35 438 (nil) [1 uses])
(note 379 378 380 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 35 (parallel [
            (set (reg:DI 371)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -984 [0xfffffffffffffc28])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 381 380 382 35 (parallel [
            (set (reg:DI 372)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 382 381 383 35 (set (reg:DI 2 cx)
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 383 382 384 35 (set (reg:DI 1 dx)
        (reg:DI 371)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 384 383 385 35 (set (reg:DI 373)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f1a339a7cf0 *.LC11>)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 385 384 386 35 (set (reg:DI 4 si)
        (reg:DI 373)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f1a339a7cf0 *.LC11>)
        (nil)))
(insn 386 385 387 35 (set (reg:DI 5 di)
        (reg:DI 372)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(call_insn 387 386 1330 35 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>) [0 add_to_namespace S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 813 {*call}
     (expr_list:REG_EH_REGION (const_int 10 [0xa])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       45 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              40 [always (adjusted)]  count:1072453854 (estimated locally) (FALLTHRU)

;; basic block 36, loop depth 0, count 0 (precise), probably never executed
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       30 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1330 387 1333 36 509 (nil) [1 uses])
(note 1333 1330 1331 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 1331 1333 390 36 (set (reg:DI 377)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
;;  succ:       37 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 37, loop depth 0, count 0 (precise), probably never executed
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       36 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 390 1331 391 37 440 (nil) [0 uses])
(note 391 390 392 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 37 (set (reg/f:DI 115 [ _99 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 393 392 394 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 115 [ _99 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 394 393 395 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 400)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 400)
;;  succ:       38 [never]  count:0 (precise) (FALLTHRU)
;;              39 [never]  count:0 (precise)

;; basic block 38, loop depth 0, count 0 (precise), probably never executed
;;  prev block 37, next block 39, flags: (RTL)
;;  pred:       37 [never]  count:0 (precise) (FALLTHRU)
(note 395 394 396 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 38 (set (reg/f:DI 374)
        (mem/f:DI (reg/f:DI 115 [ _99 ]) [5 _99->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 397 396 398 38 (set (reg/f:DI 375)
        (mem/f:DI (plus:DI (reg/f:DI 374)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_100 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 398 397 399 38 (set (reg:DI 5 di)
        (reg/f:DI 115 [ _99 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 399 398 400 38 (call (mem:QI (reg/f:DI 375) [0 *OBJ_TYPE_REF(_101;_99->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       39 [never]  count:0 (precise) (FALLTHRU)

;; basic block 39, loop depth 0, count 0 (precise), probably never executed
;;  prev block 38, next block 40, flags: (RTL)
;;  pred:       37 [never]  count:0 (precise)
;;              38 [never]  count:0 (precise) (FALLTHRU)
(code_label 400 399 401 39 441 (nil) [1 uses])
(note 401 400 402 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 402 401 407 39 (set (reg:DI 376)
        (reg:DI 377)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 40, loop depth 0, count 1072453854 (estimated locally), maybe hot
;;  prev block 39, next block 41, flags: (RTL)
;;  pred:       35 [always (adjusted)]  count:1072453854 (estimated locally) (FALLTHRU)
(note 407 402 408 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 409 40 (parallel [
            (set (reg:DI 380)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 409 408 410 40 (parallel [
            (set (reg:DI 210 [ _355 ])
                (plus:DI (reg:DI 380)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 410 409 411 40 (parallel [
            (set (reg:DI 382)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -976 [0xfffffffffffffc30])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 411 410 412 40 (set (reg:V2DI 381)
        (vec_concat:V2DI (reg:DI 382)
            (reg:DI 210 [ _355 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 412 411 413 40 (set (reg:V2DI 208 [ _318 ])
        (reg:V2DI 381)) 1439 {movv2di_internal}
     (nil))
(insn 413 412 414 40 (set (reg:V2DI 383)
        (vec_duplicate:V2DI (reg:DI 210 [ _355 ]))) 5014 {*vec_dupv2di}
     (nil))
(insn 414 413 415 40 (set (reg:V2DI 212 [ _405 ])
        (reg:V2DI 383)) 1439 {movv2di_internal}
     (nil))
(insn 415 414 416 40 (set (reg/f:DI 118 [ _102 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -984 [0xfffffffffffffc28])) [31 D.329620.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 416 415 419 40 (set (reg:DI 119 [ _103 ])
        (mem:DI (reg/f:DI 118 [ _102 ]) [7 MEM[(const struct PyObject *)_102].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 419 416 420 40 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 119 [ _103 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 420 419 421 40 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 279)
;;  succ:       41 [100.0% (guessed)]  count:1072024873 (estimated locally) (FALLTHRU)
;;              18 [0.0% (guessed)]  count:428981 (estimated locally)

;; basic block 41, loop depth 0, count 1072024873 (estimated locally), maybe hot
;;  prev block 40, next block 42, flags: (RTL)
;;  pred:       40 [100.0% (guessed)]  count:1072024873 (estimated locally) (FALLTHRU)
(note 421 420 422 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 423 41 (parallel [
            (set (reg:DI 120 [ _104 ])
                (plus:DI (reg:DI 119 [ _103 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 423 422 424 41 (set (mem:DI (reg/f:DI 118 [ _102 ]) [7 _102->ob_refcnt+0 S8 A64])
        (reg:DI 120 [ _104 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 424 423 425 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 120 [ _104 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 425 424 426 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 429)
;;  succ:       43 [67.0% (guessed)]  count:718256667 (estimated locally)
;;              42 [33.0% (guessed)]  count:353768206 (estimated locally) (FALLTHRU)

;; basic block 42, loop depth 0, count 353768206 (estimated locally), maybe hot
;;  prev block 41, next block 43, flags: (RTL)
;;  pred:       41 [33.0% (guessed)]  count:353768206 (estimated locally) (FALLTHRU)
(note 426 425 427 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 42 (set (reg:DI 5 di)
        (reg/f:DI 118 [ _102 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 428 427 429 42 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -18 [0xffffffffffffffee])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       43 [always]  count:353768206 (estimated locally) (FALLTHRU)

;; basic block 43, loop depth 0, count 1072024873 (estimated locally), maybe hot
;;  prev block 42, next block 44, flags: (RTL)
;;  pred:       41 [67.0% (guessed)]  count:718256667 (estimated locally)
;;              42 [always]  count:353768206 (estimated locally) (FALLTHRU)
(code_label 429 428 430 43 443 (nil) [1 uses])
(note 430 429 431 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 43 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -976 [0xfffffffffffffc30])) [6 D.329641+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":233:30 74 {*movdi_internal}
     (nil))
(insn 432 431 433 43 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -656 [0xfffffffffffffd70])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329642]+0 S16 A128])
        (reg:V2DI 208 [ _318 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 433 432 434 43 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -640 [0xfffffffffffffd80])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329642 + 16B]+0 S16 A128])
        (reg:V2DI 212 [ _405 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 434 433 435 43 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -608 [0xfffffffffffffda0])) [6 MEM[(struct cons *)&D.329642 + 48B].head+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":309:7 74 {*movdi_internal}
     (nil))
(insn 435 434 436 43 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -600 [0xfffffffffffffda8])) [0 MEM[(struct cons *)&D.329642 + 56B].head.__pfn+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 436 435 437 43 (set (mem/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -592 [0xfffffffffffffdb0])) [0 MEM[(struct cons *)&D.329642 + 56B].head.__delta+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 437 436 438 43 (set (reg:V2DI 384)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 438 437 439 43 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [134 MEM[(struct pair *)_906]+0 S16 A128])
        (reg:V2DI 384)) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 439 438 440 43 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(call_insn 440 439 1292 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/py_function.hpp":124:18 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              44 [always (adjusted)]  count:1072024873 (estimated locally) (FALLTHRU)

;; basic block 44, loop depth 0, count 1072024873 (estimated locally), maybe hot
;;  prev block 43, next block 45, flags: (RTL)
;;  pred:       43 [always (adjusted)]  count:1072024873 (estimated locally) (FALLTHRU)
(note 1292 440 441 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 441 1292 442 44 (set (reg/f:DI 385)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 385)
        (nil)))
(insn 442 441 456 44 (set (reg/f:DI 123 [ _111 ])
        (reg/f:DI 385)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(insn 456 442 457 44 (set (reg:DI 390)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE")  <var_decl 0x7f1a35ba7630 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 457 456 458 44 (set (reg/f:DI 389)
        (plus:DI (reg:DI 390)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":33:26 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE")  <var_decl 0x7f1a35ba7630 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersF6ResultvENS0_21default_call_policiesENS_3mpl7vector2IS6_RS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 458 457 459 44 (set (mem/f:DI (reg/f:DI 123 [ _111 ]) [5 MEM[(struct caller_py_function_impl *)_111].D.294327._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 389)) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 459 458 460 44 (set (reg:DI 392)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZN15ChineseCheckers13state_of_gameEv") [flags 0x41]  <function_decl 0x7f1a37302e00 state_of_game>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 460 459 461 44 (set (reg/f:DI 391)
        (reg:DI 392)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZN15ChineseCheckers13state_of_gameEv") [flags 0x41]  <function_decl 0x7f1a37302e00 state_of_game>)
        (nil)))
(insn 461 460 462 44 (set (mem/f:DI (plus:DI (reg/f:DI 123 [ _111 ])
                (const_int 8 [0x8])) [75 MEM <Result ChineseCheckers::<T285bb> (struct ChineseCheckers *) *> [(struct caller_py_function_impl *)_111 + 8B]+0 S8 A64])
        (reg/f:DI 391)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 462 461 463 44 (set (mem:DI (plus:DI (reg/f:DI 123 [ _111 ])
                (const_int 16 [0x10])) [75 MEM <long int> [(struct caller_py_function_impl *)_111 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 463 462 464 44 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])
        (reg/f:DI 123 [ _111 ])) "/usr/include/c++/11/bits/unique_ptr.h":155:56 74 {*movdi_internal}
     (nil))
(insn 464 463 465 44 (parallel [
            (set (reg:DI 393)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -968 [0xfffffffffffffc38])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 465 464 466 44 (parallel [
            (set (reg:DI 394)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 466 465 467 44 (parallel [
            (set (reg:DI 395)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 467 466 468 44 (set (reg:DI 1 dx)
        (reg:DI 394)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 468 467 469 44 (set (reg:DI 4 si)
        (reg:DI 395)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 469 468 470 44 (set (reg:DI 5 di)
        (reg:DI 393)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(call_insn 470 469 1326 44 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>) [0 function_object S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/make_function.hpp":62:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 14 [0xe])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       47 [always]  count:1072024873 (estimated locally) (FALLTHRU)
;;              50 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 45, loop depth 0, count 0 (precise), probably never executed
;;  prev block 44, next block 46, flags: (RTL)
;;  pred:       35 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1326 470 1329 45 508 (nil) [1 uses])
(note 1329 1326 1327 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 1327 1329 445 45 (set (reg:DI 387)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       46 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 46, loop depth 0, count 0 (precise), probably never executed
;;  prev block 45, next block 47, flags: (RTL)
;;  pred:       45 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 445 1327 446 46 445 (nil) [0 uses])
(note 446 445 447 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 447 446 448 46 (parallel [
            (set (reg:DI 386)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -984 [0xfffffffffffffc28])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 448 447 449 46 (set (reg:DI 5 di)
        (reg:DI 386)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 449 448 450 46 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 450 449 471 46 (set (reg:DI 376)
        (reg:DI 387)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 47, loop depth 0, count 1072024873 (estimated locally), maybe hot
;;  prev block 46, next block 48, flags: (RTL)
;;  pred:       44 [always]  count:1072024873 (estimated locally) (FALLTHRU)
(note 471 450 472 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 472 471 473 47 (set (reg/f:DI 124 [ _112 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 473 472 474 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 124 [ _112 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 474 473 475 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 480)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 480)
;;  succ:       48 [70.0% (guessed)]  count:750417414 (estimated locally) (FALLTHRU)
;;              49 [30.0% (guessed)]  count:321607459 (estimated locally)

;; basic block 48, loop depth 0, count 750417415 (estimated locally), maybe hot
;;  prev block 47, next block 49, flags: (RTL)
;;  pred:       47 [70.0% (guessed)]  count:750417414 (estimated locally) (FALLTHRU)
(note 475 474 476 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 48 (set (reg/f:DI 396)
        (mem/f:DI (reg/f:DI 124 [ _112 ]) [5 _112->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 477 476 478 48 (set (reg/f:DI 397)
        (mem/f:DI (plus:DI (reg/f:DI 396)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_113 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 478 477 479 48 (set (reg:DI 5 di)
        (reg/f:DI 124 [ _112 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 479 478 480 48 (call (mem:QI (reg/f:DI 397) [0 *OBJ_TYPE_REF(_114;_112->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       49 [always]  count:750417415 (estimated locally) (FALLTHRU)

;; basic block 49, loop depth 0, count 1072024874 (estimated locally), maybe hot
;;  prev block 48, next block 50, flags: (RTL)
;;  pred:       47 [30.0% (guessed)]  count:321607459 (estimated locally)
;;              48 [always]  count:750417415 (estimated locally) (FALLTHRU)
(code_label 480 479 481 49 446 (nil) [1 uses])
(note 481 480 482 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 483 49 (parallel [
            (set (reg:DI 398)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -968 [0xfffffffffffffc38])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 483 482 484 49 (parallel [
            (set (reg:DI 399)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 484 483 485 49 (set (reg:DI 2 cx)
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 485 484 486 49 (set (reg:DI 1 dx)
        (reg:DI 398)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 486 485 487 49 (set (reg:DI 400)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f1a339a7e10 *.LC12>)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 487 486 488 49 (set (reg:DI 4 si)
        (reg:DI 400)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f1a339a7e10 *.LC12>)
        (nil)))
(insn 488 487 489 49 (set (reg:DI 5 di)
        (reg:DI 399)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(call_insn 489 488 1338 49 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>) [0 add_to_namespace S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 813 {*call}
     (expr_list:REG_EH_REGION (const_int 13 [0xd])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       59 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              54 [always (adjusted)]  count:1072024874 (estimated locally) (FALLTHRU)

;; basic block 50, loop depth 0, count 0 (precise), probably never executed
;;  prev block 49, next block 51, flags: (RTL)
;;  pred:       44 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1338 489 1341 50 511 (nil) [1 uses])
(note 1341 1338 1339 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 1339 1341 492 50 (set (reg:DI 403)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
;;  succ:       51 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 51, loop depth 0, count 0 (precise), probably never executed
;;  prev block 50, next block 52, flags: (RTL)
;;  pred:       50 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 492 1339 493 51 448 (nil) [0 uses])
(note 493 492 494 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 494 493 495 51 (set (reg/f:DI 127 [ _115 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 495 494 496 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 127 [ _115 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 496 495 497 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 502)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 502)
;;  succ:       52 [never]  count:0 (precise) (FALLTHRU)
;;              53 [never]  count:0 (precise)

;; basic block 52, loop depth 0, count 0 (precise), probably never executed
;;  prev block 51, next block 53, flags: (RTL)
;;  pred:       51 [never]  count:0 (precise) (FALLTHRU)
(note 497 496 498 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 499 52 (set (reg/f:DI 401)
        (mem/f:DI (reg/f:DI 127 [ _115 ]) [5 _115->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 499 498 500 52 (set (reg/f:DI 402)
        (mem/f:DI (plus:DI (reg/f:DI 401)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_116 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 500 499 501 52 (set (reg:DI 5 di)
        (reg/f:DI 127 [ _115 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 501 500 502 52 (call (mem:QI (reg/f:DI 402) [0 *OBJ_TYPE_REF(_117;_115->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       53 [never]  count:0 (precise) (FALLTHRU)

;; basic block 53, loop depth 0, count 0 (precise), probably never executed
;;  prev block 52, next block 54, flags: (RTL)
;;  pred:       51 [never]  count:0 (precise)
;;              52 [never]  count:0 (precise) (FALLTHRU)
(code_label 502 501 503 53 449 (nil) [1 uses])
(note 503 502 504 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 509 53 (set (reg:DI 376)
        (reg:DI 403)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 54, loop depth 0, count 1072024874 (estimated locally), maybe hot
;;  prev block 53, next block 55, flags: (RTL)
;;  pred:       49 [always (adjusted)]  count:1072024874 (estimated locally) (FALLTHRU)
(note 509 504 510 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 510 509 511 54 (parallel [
            (set (reg:DI 405)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -576 [0xfffffffffffffdc0])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 511 510 512 54 (parallel [
            (set (reg:DI 82 [ _8 ])
                (plus:DI (reg:DI 405)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 512 511 513 54 (parallel [
            (set (reg:DI 407)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 513 512 514 54 (set (reg:V2DI 406)
        (vec_concat:V2DI (reg:DI 407)
            (reg:DI 82 [ _8 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 514 513 515 54 (set (reg:V2DI 213 [ _418 ])
        (reg:V2DI 406)) 1439 {movv2di_internal}
     (nil))
(insn 515 514 516 54 (set (reg:V2DI 408)
        (vec_duplicate:V2DI (reg:DI 82 [ _8 ]))) 5014 {*vec_dupv2di}
     (nil))
(insn 516 515 517 54 (set (reg:V2DI 211 [ _383 ])
        (reg:V2DI 408)) 1439 {movv2di_internal}
     (nil))
(insn 517 516 518 54 (set (reg/f:DI 130 [ _118 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -968 [0xfffffffffffffc38])) [31 D.329653.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 518 517 521 54 (set (reg:DI 131 [ _119 ])
        (mem:DI (reg/f:DI 130 [ _118 ]) [7 MEM[(const struct PyObject *)_118].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 521 518 522 54 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 131 [ _119 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 522 521 523 54 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 279)
;;  succ:       55 [100.0% (guessed)]  count:1071596065 (estimated locally) (FALLTHRU)
;;              18 [0.0% (guessed)]  count:428809 (estimated locally)

;; basic block 55, loop depth 0, count 1071596065 (estimated locally), maybe hot
;;  prev block 54, next block 56, flags: (RTL)
;;  pred:       54 [100.0% (guessed)]  count:1071596065 (estimated locally) (FALLTHRU)
(note 523 522 524 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 525 55 (parallel [
            (set (reg:DI 132 [ _120 ])
                (plus:DI (reg:DI 131 [ _119 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 525 524 526 55 (set (mem:DI (reg/f:DI 130 [ _118 ]) [7 _118->ob_refcnt+0 S8 A64])
        (reg:DI 132 [ _120 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 526 525 527 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 132 [ _120 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 527 526 528 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 531)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 531)
;;  succ:       57 [67.0% (guessed)]  count:717969365 (estimated locally)
;;              56 [33.0% (guessed)]  count:353626700 (estimated locally) (FALLTHRU)

;; basic block 56, loop depth 0, count 353626699 (estimated locally), maybe hot
;;  prev block 55, next block 57, flags: (RTL)
;;  pred:       55 [33.0% (guessed)]  count:353626700 (estimated locally) (FALLTHRU)
(note 528 527 529 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 530 56 (set (reg:DI 5 di)
        (reg/f:DI 130 [ _118 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 530 529 531 56 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -22 [0xffffffffffffffea])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       57 [always]  count:353626699 (estimated locally) (FALLTHRU)

;; basic block 57, loop depth 0, count 1071596065 (estimated locally), maybe hot
;;  prev block 56, next block 58, flags: (RTL)
;;  pred:       55 [67.0% (guessed)]  count:717969365 (estimated locally)
;;              56 [always]  count:353626699 (estimated locally) (FALLTHRU)
(code_label 531 530 532 57 450 (nil) [1 uses])
(note 532 531 533 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 533 532 534 57 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -960 [0xfffffffffffffc40])) [6 D.329674+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":233:30 74 {*movdi_internal}
     (nil))
(insn 534 533 535 57 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -576 [0xfffffffffffffdc0])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329675]+0 S16 A128])
        (reg:V2DI 213 [ _418 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 535 534 536 57 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -560 [0xfffffffffffffdd0])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329675 + 16B]+0 S16 A128])
        (reg:V2DI 211 [ _383 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 536 535 537 57 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -528 [0xfffffffffffffdf0])) [6 MEM[(struct cons *)&D.329675 + 48B].head+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":309:7 74 {*movdi_internal}
     (nil))
(insn 537 536 538 57 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -520 [0xfffffffffffffdf8])) [0 MEM[(struct cons *)&D.329675 + 56B].head.__pfn+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 538 537 539 57 (set (mem/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -512 [0xfffffffffffffe00])) [0 MEM[(struct cons *)&D.329675 + 56B].head.__delta+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 539 538 540 57 (set (reg:V2DI 409)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 540 539 541 57 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [134 MEM[(struct pair *)_906]+0 S16 A128])
        (reg:V2DI 409)) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 541 540 542 57 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(call_insn 542 541 1294 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/py_function.hpp":124:18 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              58 [always (adjusted)]  count:1071596065 (estimated locally) (FALLTHRU)

;; basic block 58, loop depth 0, count 1071596065 (estimated locally), maybe hot
;;  prev block 57, next block 59, flags: (RTL)
;;  pred:       57 [always (adjusted)]  count:1071596065 (estimated locally) (FALLTHRU)
(note 1294 542 543 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 543 1294 544 58 (set (reg/f:DI 410)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 410)
        (nil)))
(insn 544 543 558 58 (set (reg/f:DI 133 [ _127 ])
        (reg/f:DI 410)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(insn 558 544 559 58 (set (reg:DI 415)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 559 558 560 58 (set (reg/f:DI 414)
        (plus:DI (reg:DI 415)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":33:26 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 560 559 561 58 (set (mem/f:DI (reg/f:DI 133 [ _127 ]) [5 MEM[(struct caller_py_function_impl *)_127].D.294396._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 414)) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 561 560 562 58 (set (reg:DI 417)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZN15ChineseCheckers8new_gameEv") [flags 0x41]  <function_decl 0x7f1a37302f00 new_game>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 562 561 563 58 (set (reg/f:DI 416)
        (reg:DI 417)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZN15ChineseCheckers8new_gameEv") [flags 0x41]  <function_decl 0x7f1a37302f00 new_game>)
        (nil)))
(insn 563 562 564 58 (set (mem/f:DI (plus:DI (reg/f:DI 133 [ _127 ])
                (const_int 8 [0x8])) [70 MEM <void ChineseCheckers::<T285bc> (struct ChineseCheckers *) *> [(struct caller_py_function_impl *)_127 + 8B]+0 S8 A64])
        (reg/f:DI 416)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 564 563 565 58 (set (mem:DI (plus:DI (reg/f:DI 133 [ _127 ])
                (const_int 16 [0x10])) [70 MEM <long int> [(struct caller_py_function_impl *)_127 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 565 564 566 58 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])
        (reg/f:DI 133 [ _127 ])) "/usr/include/c++/11/bits/unique_ptr.h":155:56 74 {*movdi_internal}
     (nil))
(insn 566 565 567 58 (parallel [
            (set (reg:DI 418)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -952 [0xfffffffffffffc48])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 567 566 568 58 (parallel [
            (set (reg:DI 419)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 568 567 569 58 (parallel [
            (set (reg:DI 420)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 569 568 570 58 (set (reg:DI 1 dx)
        (reg:DI 419)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 570 569 571 58 (set (reg:DI 4 si)
        (reg:DI 420)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 571 570 572 58 (set (reg:DI 5 di)
        (reg:DI 418)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(call_insn 572 571 1334 58 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>) [0 function_object S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/make_function.hpp":62:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 17 [0x11])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       61 [always]  count:1071596065 (estimated locally) (FALLTHRU)
;;              64 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 59, loop depth 0, count 0 (precise), probably never executed
;;  prev block 58, next block 60, flags: (RTL)
;;  pred:       49 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1334 572 1337 59 510 (nil) [1 uses])
(note 1337 1334 1335 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 1335 1337 547 59 (set (reg:DI 412)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       60 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 60, loop depth 0, count 0 (precise), probably never executed
;;  prev block 59, next block 61, flags: (RTL)
;;  pred:       59 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 547 1335 548 60 452 (nil) [0 uses])
(note 548 547 549 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 549 548 550 60 (parallel [
            (set (reg:DI 411)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -968 [0xfffffffffffffc38])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 550 549 551 60 (set (reg:DI 5 di)
        (reg:DI 411)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 551 550 552 60 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 552 551 573 60 (set (reg:DI 376)
        (reg:DI 412)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 61, loop depth 0, count 1071596065 (estimated locally), maybe hot
;;  prev block 60, next block 62, flags: (RTL)
;;  pred:       58 [always]  count:1071596065 (estimated locally) (FALLTHRU)
(note 573 552 574 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 574 573 575 61 (set (reg/f:DI 134 [ _128 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 575 574 576 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 134 [ _128 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 576 575 577 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 582)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 582)
;;  succ:       62 [70.0% (guessed)]  count:750117249 (estimated locally) (FALLTHRU)
;;              63 [30.0% (guessed)]  count:321478816 (estimated locally)

;; basic block 62, loop depth 0, count 750117249 (estimated locally), maybe hot
;;  prev block 61, next block 63, flags: (RTL)
;;  pred:       61 [70.0% (guessed)]  count:750117249 (estimated locally) (FALLTHRU)
(note 577 576 578 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 578 577 579 62 (set (reg/f:DI 421)
        (mem/f:DI (reg/f:DI 134 [ _128 ]) [5 _128->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 579 578 580 62 (set (reg/f:DI 422)
        (mem/f:DI (plus:DI (reg/f:DI 421)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_129 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 580 579 581 62 (set (reg:DI 5 di)
        (reg/f:DI 134 [ _128 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 581 580 582 62 (call (mem:QI (reg/f:DI 422) [0 *OBJ_TYPE_REF(_130;_128->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       63 [always]  count:750117249 (estimated locally) (FALLTHRU)

;; basic block 63, loop depth 0, count 1071596065 (estimated locally), maybe hot
;;  prev block 62, next block 64, flags: (RTL)
;;  pred:       61 [30.0% (guessed)]  count:321478816 (estimated locally)
;;              62 [always]  count:750117249 (estimated locally) (FALLTHRU)
(code_label 582 581 583 63 453 (nil) [1 uses])
(note 583 582 584 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 584 583 585 63 (parallel [
            (set (reg:DI 423)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -952 [0xfffffffffffffc48])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 585 584 586 63 (parallel [
            (set (reg:DI 424)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 586 585 587 63 (set (reg:DI 2 cx)
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 587 586 588 63 (set (reg:DI 1 dx)
        (reg:DI 423)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 588 587 589 63 (set (reg:DI 425)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f1a339a7f30 *.LC13>)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 589 588 590 63 (set (reg:DI 4 si)
        (reg:DI 425)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f1a339a7f30 *.LC13>)
        (nil)))
(insn 590 589 591 63 (set (reg:DI 5 di)
        (reg:DI 424)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(call_insn 591 590 1346 63 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>) [0 add_to_namespace S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 813 {*call}
     (expr_list:REG_EH_REGION (const_int 16 [0x10])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       73 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              68 [always (adjusted)]  count:1071596065 (estimated locally) (FALLTHRU)

;; basic block 64, loop depth 0, count 0 (precise), probably never executed
;;  prev block 63, next block 65, flags: (RTL)
;;  pred:       58 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1346 591 1349 64 513 (nil) [1 uses])
(note 1349 1346 1347 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 1347 1349 594 64 (set (reg:DI 428)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
;;  succ:       65 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 65, loop depth 0, count 0 (precise), probably never executed
;;  prev block 64, next block 66, flags: (RTL)
;;  pred:       64 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 594 1347 595 65 455 (nil) [0 uses])
(note 595 594 596 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 596 595 597 65 (set (reg/f:DI 137 [ _131 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 597 596 598 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 137 [ _131 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 598 597 599 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 604)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 604)
;;  succ:       66 [never]  count:0 (precise) (FALLTHRU)
;;              67 [never]  count:0 (precise)

;; basic block 66, loop depth 0, count 0 (precise), probably never executed
;;  prev block 65, next block 67, flags: (RTL)
;;  pred:       65 [never]  count:0 (precise) (FALLTHRU)
(note 599 598 600 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 600 599 601 66 (set (reg/f:DI 426)
        (mem/f:DI (reg/f:DI 137 [ _131 ]) [5 _131->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 601 600 602 66 (set (reg/f:DI 427)
        (mem/f:DI (plus:DI (reg/f:DI 426)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_132 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 602 601 603 66 (set (reg:DI 5 di)
        (reg/f:DI 137 [ _131 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 603 602 604 66 (call (mem:QI (reg/f:DI 427) [0 *OBJ_TYPE_REF(_133;_131->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       67 [never]  count:0 (precise) (FALLTHRU)

;; basic block 67, loop depth 0, count 0 (precise), probably never executed
;;  prev block 66, next block 68, flags: (RTL)
;;  pred:       65 [never]  count:0 (precise)
;;              66 [never]  count:0 (precise) (FALLTHRU)
(code_label 604 603 605 67 456 (nil) [1 uses])
(note 605 604 606 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 606 605 611 67 (set (reg:DI 376)
        (reg:DI 428)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 68, loop depth 0, count 1071596065 (estimated locally), maybe hot
;;  prev block 67, next block 69, flags: (RTL)
;;  pred:       63 [always (adjusted)]  count:1071596065 (estimated locally) (FALLTHRU)
(note 611 606 612 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 612 611 613 68 (parallel [
            (set (reg:DI 430)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -496 [0xfffffffffffffe10])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 613 612 614 68 (parallel [
            (set (reg:DI 216 [ _484 ])
                (plus:DI (reg:DI 430)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 614 613 615 68 (parallel [
            (set (reg:DI 432)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 615 614 616 68 (set (reg:V2DI 431)
        (vec_concat:V2DI (reg:DI 432)
            (reg:DI 216 [ _484 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 616 615 617 68 (set (reg:V2DI 218 [ _488 ])
        (reg:V2DI 431)) 1439 {movv2di_internal}
     (nil))
(insn 617 616 618 68 (set (reg:V2DI 433)
        (vec_duplicate:V2DI (reg:DI 216 [ _484 ]))) 5014 {*vec_dupv2di}
     (nil))
(insn 618 617 619 68 (set (reg:V2DI 215 [ _471 ])
        (reg:V2DI 433)) 1439 {movv2di_internal}
     (nil))
(insn 619 618 620 68 (set (reg/f:DI 140 [ _134 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -952 [0xfffffffffffffc48])) [31 D.329686.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 620 619 623 68 (set (reg:DI 141 [ _135 ])
        (mem:DI (reg/f:DI 140 [ _134 ]) [7 MEM[(const struct PyObject *)_134].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 623 620 624 68 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 141 [ _135 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 624 623 625 68 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 279)
;;  succ:       69 [100.0% (guessed)]  count:1071167427 (estimated locally) (FALLTHRU)
;;              18 [0.0% (guessed)]  count:428638 (estimated locally)

;; basic block 69, loop depth 0, count 1071167427 (estimated locally), maybe hot
;;  prev block 68, next block 70, flags: (RTL)
;;  pred:       68 [100.0% (guessed)]  count:1071167427 (estimated locally) (FALLTHRU)
(note 625 624 626 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 626 625 627 69 (parallel [
            (set (reg:DI 142 [ _136 ])
                (plus:DI (reg:DI 141 [ _135 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 627 626 628 69 (set (mem:DI (reg/f:DI 140 [ _134 ]) [7 _134->ob_refcnt+0 S8 A64])
        (reg:DI 142 [ _136 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 628 627 629 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 142 [ _136 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 629 628 630 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 633)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 633)
;;  succ:       71 [67.0% (guessed)]  count:717682178 (estimated locally)
;;              70 [33.0% (guessed)]  count:353485249 (estimated locally) (FALLTHRU)

;; basic block 70, loop depth 0, count 353485249 (estimated locally), maybe hot
;;  prev block 69, next block 71, flags: (RTL)
;;  pred:       69 [33.0% (guessed)]  count:353485249 (estimated locally) (FALLTHRU)
(note 630 629 631 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 631 630 632 70 (set (reg:DI 5 di)
        (reg/f:DI 140 [ _134 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 632 631 633 70 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -26 [0xffffffffffffffe6])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       71 [always]  count:353485249 (estimated locally) (FALLTHRU)

;; basic block 71, loop depth 0, count 1071167427 (estimated locally), maybe hot
;;  prev block 70, next block 72, flags: (RTL)
;;  pred:       69 [67.0% (guessed)]  count:717682178 (estimated locally)
;;              70 [always]  count:353485249 (estimated locally) (FALLTHRU)
(code_label 633 632 634 71 457 (nil) [1 uses])
(note 634 633 635 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 635 634 636 71 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -944 [0xfffffffffffffc50])) [6 D.329707+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":233:30 74 {*movdi_internal}
     (nil))
(insn 636 635 637 71 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -496 [0xfffffffffffffe10])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329708]+0 S16 A128])
        (reg:V2DI 218 [ _488 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 637 636 638 71 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -480 [0xfffffffffffffe20])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329708 + 16B]+0 S16 A128])
        (reg:V2DI 215 [ _471 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 638 637 639 71 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -448 [0xfffffffffffffe40])) [6 MEM[(struct cons *)&D.329708 + 48B].head+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":309:7 74 {*movdi_internal}
     (nil))
(insn 639 638 640 71 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -440 [0xfffffffffffffe48])) [0 MEM[(struct cons *)&D.329708 + 56B].head.__pfn+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 640 639 641 71 (set (mem/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 MEM[(struct cons *)&D.329708 + 56B].head.__delta+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 641 640 642 71 (set (reg:V2DI 434)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 642 641 643 71 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [134 MEM[(struct pair *)_906]+0 S16 A128])
        (reg:V2DI 434)) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 643 642 644 71 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(call_insn 644 643 1296 71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/py_function.hpp":124:18 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              72 [always (adjusted)]  count:1071167427 (estimated locally) (FALLTHRU)

;; basic block 72, loop depth 0, count 1071167427 (estimated locally), maybe hot
;;  prev block 71, next block 73, flags: (RTL)
;;  pred:       71 [always (adjusted)]  count:1071167427 (estimated locally) (FALLTHRU)
(note 1296 644 645 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 645 1296 646 72 (set (reg/f:DI 435)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 435)
        (nil)))
(insn 646 645 660 72 (set (reg/f:DI 143 [ _143 ])
        (reg/f:DI 435)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(insn 660 646 661 72 (set (reg:DI 440)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 661 660 662 72 (set (reg/f:DI 439)
        (plus:DI (reg:DI 440)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":33:26 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 662 661 663 72 (set (mem/f:DI (reg/f:DI 143 [ _143 ]) [5 MEM[(struct caller_py_function_impl *)_143].D.294396._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 439)) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 663 662 664 72 (set (reg:DI 442)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZN15ChineseCheckers11print_grid_Ev") [flags 0x41]  <function_decl 0x7f1a37307000 print_grid_>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 664 663 665 72 (set (reg/f:DI 441)
        (reg:DI 442)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZN15ChineseCheckers11print_grid_Ev") [flags 0x41]  <function_decl 0x7f1a37307000 print_grid_>)
        (nil)))
(insn 665 664 666 72 (set (mem/f:DI (plus:DI (reg/f:DI 143 [ _143 ])
                (const_int 8 [0x8])) [70 MEM <void ChineseCheckers::<T285bc> (struct ChineseCheckers *) *> [(struct caller_py_function_impl *)_143 + 8B]+0 S8 A64])
        (reg/f:DI 441)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 666 665 667 72 (set (mem:DI (plus:DI (reg/f:DI 143 [ _143 ])
                (const_int 16 [0x10])) [70 MEM <long int> [(struct caller_py_function_impl *)_143 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 667 666 668 72 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])
        (reg/f:DI 143 [ _143 ])) "/usr/include/c++/11/bits/unique_ptr.h":155:56 74 {*movdi_internal}
     (nil))
(insn 668 667 669 72 (parallel [
            (set (reg:DI 443)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -936 [0xfffffffffffffc58])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 669 668 670 72 (parallel [
            (set (reg:DI 444)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 670 669 671 72 (parallel [
            (set (reg:DI 445)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 671 670 672 72 (set (reg:DI 1 dx)
        (reg:DI 444)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 672 671 673 72 (set (reg:DI 4 si)
        (reg:DI 445)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 673 672 674 72 (set (reg:DI 5 di)
        (reg:DI 443)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(call_insn 674 673 1342 72 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>) [0 function_object S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/make_function.hpp":62:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 20 [0x14])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       75 [always]  count:1071167427 (estimated locally) (FALLTHRU)
;;              78 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 73, loop depth 0, count 0 (precise), probably never executed
;;  prev block 72, next block 74, flags: (RTL)
;;  pred:       63 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1342 674 1345 73 512 (nil) [1 uses])
(note 1345 1342 1343 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1343 1345 649 73 (set (reg:DI 437)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       74 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 74, loop depth 0, count 0 (precise), probably never executed
;;  prev block 73, next block 75, flags: (RTL)
;;  pred:       73 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 649 1343 650 74 459 (nil) [0 uses])
(note 650 649 651 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 651 650 652 74 (parallel [
            (set (reg:DI 436)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -952 [0xfffffffffffffc48])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 652 651 653 74 (set (reg:DI 5 di)
        (reg:DI 436)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 653 652 654 74 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 654 653 675 74 (set (reg:DI 376)
        (reg:DI 437)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 75, loop depth 0, count 1071167427 (estimated locally), maybe hot
;;  prev block 74, next block 76, flags: (RTL)
;;  pred:       72 [always]  count:1071167427 (estimated locally) (FALLTHRU)
(note 675 654 676 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 676 675 677 75 (set (reg/f:DI 144 [ _144 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 677 676 678 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 144 [ _144 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 678 677 679 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 684)
;;  succ:       76 [70.0% (guessed)]  count:749817202 (estimated locally) (FALLTHRU)
;;              77 [30.0% (guessed)]  count:321350225 (estimated locally)

;; basic block 76, loop depth 0, count 749817202 (estimated locally), maybe hot
;;  prev block 75, next block 77, flags: (RTL)
;;  pred:       75 [70.0% (guessed)]  count:749817202 (estimated locally) (FALLTHRU)
(note 679 678 680 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 680 679 681 76 (set (reg/f:DI 446)
        (mem/f:DI (reg/f:DI 144 [ _144 ]) [5 _144->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 681 680 682 76 (set (reg/f:DI 447)
        (mem/f:DI (plus:DI (reg/f:DI 446)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_145 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 682 681 683 76 (set (reg:DI 5 di)
        (reg/f:DI 144 [ _144 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 683 682 684 76 (call (mem:QI (reg/f:DI 447) [0 *OBJ_TYPE_REF(_146;_144->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       77 [always]  count:749817202 (estimated locally) (FALLTHRU)

;; basic block 77, loop depth 0, count 1071167427 (estimated locally), maybe hot
;;  prev block 76, next block 78, flags: (RTL)
;;  pred:       75 [30.0% (guessed)]  count:321350225 (estimated locally)
;;              76 [always]  count:749817202 (estimated locally) (FALLTHRU)
(code_label 684 683 685 77 460 (nil) [1 uses])
(note 685 684 686 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 686 685 687 77 (parallel [
            (set (reg:DI 448)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -936 [0xfffffffffffffc58])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 687 686 688 77 (parallel [
            (set (reg:DI 449)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 688 687 689 77 (set (reg:DI 2 cx)
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 689 688 690 77 (set (reg:DI 1 dx)
        (reg:DI 448)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 690 689 691 77 (set (reg:DI 450)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f1a339cc000 *.LC14>)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 691 690 692 77 (set (reg:DI 4 si)
        (reg:DI 450)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f1a339cc000 *.LC14>)
        (nil)))
(insn 692 691 693 77 (set (reg:DI 5 di)
        (reg:DI 449)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(call_insn 693 692 1354 77 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>) [0 add_to_namespace S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 813 {*call}
     (expr_list:REG_EH_REGION (const_int 19 [0x13])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       87 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              82 [always (adjusted)]  count:1071167427 (estimated locally) (FALLTHRU)

;; basic block 78, loop depth 0, count 0 (precise), probably never executed
;;  prev block 77, next block 79, flags: (RTL)
;;  pred:       72 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1354 693 1357 78 515 (nil) [1 uses])
(note 1357 1354 1355 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1355 1357 696 78 (set (reg:DI 453)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
;;  succ:       79 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 79, loop depth 0, count 0 (precise), probably never executed
;;  prev block 78, next block 80, flags: (RTL)
;;  pred:       78 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 696 1355 697 79 462 (nil) [0 uses])
(note 697 696 698 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 698 697 699 79 (set (reg/f:DI 147 [ _147 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 699 698 700 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 147 [ _147 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 700 699 701 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 706)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 706)
;;  succ:       80 [never]  count:0 (precise) (FALLTHRU)
;;              81 [never]  count:0 (precise)

;; basic block 80, loop depth 0, count 0 (precise), probably never executed
;;  prev block 79, next block 81, flags: (RTL)
;;  pred:       79 [never]  count:0 (precise) (FALLTHRU)
(note 701 700 702 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 702 701 703 80 (set (reg/f:DI 451)
        (mem/f:DI (reg/f:DI 147 [ _147 ]) [5 _147->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 703 702 704 80 (set (reg/f:DI 452)
        (mem/f:DI (plus:DI (reg/f:DI 451)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_148 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 704 703 705 80 (set (reg:DI 5 di)
        (reg/f:DI 147 [ _147 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 705 704 706 80 (call (mem:QI (reg/f:DI 452) [0 *OBJ_TYPE_REF(_149;_147->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       81 [never]  count:0 (precise) (FALLTHRU)

;; basic block 81, loop depth 0, count 0 (precise), probably never executed
;;  prev block 80, next block 82, flags: (RTL)
;;  pred:       79 [never]  count:0 (precise)
;;              80 [never]  count:0 (precise) (FALLTHRU)
(code_label 706 705 707 81 463 (nil) [1 uses])
(note 707 706 708 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 708 707 713 81 (set (reg:DI 376)
        (reg:DI 453)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 82, loop depth 0, count 1071167427 (estimated locally), maybe hot
;;  prev block 81, next block 83, flags: (RTL)
;;  pred:       77 [always (adjusted)]  count:1071167427 (estimated locally) (FALLTHRU)
(note 713 708 714 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 714 713 715 82 (parallel [
            (set (reg:DI 455)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 715 714 716 82 (parallel [
            (set (reg:DI 220 [ _542 ])
                (plus:DI (reg:DI 455)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 716 715 717 82 (parallel [
            (set (reg:DI 457)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -928 [0xfffffffffffffc60])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 717 716 718 82 (set (reg:V2DI 456)
        (vec_concat:V2DI (reg:DI 457)
            (reg:DI 220 [ _542 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 718 717 719 82 (set (reg:V2DI 86 [ _21 ])
        (reg:V2DI 456)) 1439 {movv2di_internal}
     (nil))
(insn 719 718 720 82 (set (reg:V2DI 458)
        (vec_duplicate:V2DI (reg:DI 220 [ _542 ]))) 5014 {*vec_dupv2di}
     (nil))
(insn 720 719 721 82 (set (reg:V2DI 219 [ _541 ])
        (reg:V2DI 458)) 1439 {movv2di_internal}
     (nil))
(insn 721 720 722 82 (set (reg/f:DI 150 [ _150 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -936 [0xfffffffffffffc58])) [31 D.329719.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 722 721 725 82 (set (reg:DI 151 [ _151 ])
        (mem:DI (reg/f:DI 150 [ _150 ]) [7 MEM[(const struct PyObject *)_150].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 725 722 726 82 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 151 [ _151 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 726 725 727 82 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 279)
;;  succ:       83 [100.0% (guessed)]  count:1070738961 (estimated locally) (FALLTHRU)
;;              18 [0.0% (guessed)]  count:428466 (estimated locally)

;; basic block 83, loop depth 0, count 1070738961 (estimated locally), maybe hot
;;  prev block 82, next block 84, flags: (RTL)
;;  pred:       82 [100.0% (guessed)]  count:1070738961 (estimated locally) (FALLTHRU)
(note 727 726 728 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 728 727 729 83 (parallel [
            (set (reg:DI 152 [ _152 ])
                (plus:DI (reg:DI 151 [ _151 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 729 728 730 83 (set (mem:DI (reg/f:DI 150 [ _150 ]) [7 _150->ob_refcnt+0 S8 A64])
        (reg:DI 152 [ _152 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 730 729 731 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 152 [ _152 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 731 730 732 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 735)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 735)
;;  succ:       85 [67.0% (guessed)]  count:717395106 (estimated locally)
;;              84 [33.0% (guessed)]  count:353343855 (estimated locally) (FALLTHRU)

;; basic block 84, loop depth 0, count 353343855 (estimated locally), maybe hot
;;  prev block 83, next block 85, flags: (RTL)
;;  pred:       83 [33.0% (guessed)]  count:353343855 (estimated locally) (FALLTHRU)
(note 732 731 733 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 733 732 734 84 (set (reg:DI 5 di)
        (reg/f:DI 150 [ _150 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 734 733 735 84 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -30 [0xffffffffffffffe2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       85 [always]  count:353343855 (estimated locally) (FALLTHRU)

;; basic block 85, loop depth 0, count 1070738961 (estimated locally), maybe hot
;;  prev block 84, next block 86, flags: (RTL)
;;  pred:       83 [67.0% (guessed)]  count:717395106 (estimated locally)
;;              84 [always]  count:353343855 (estimated locally) (FALLTHRU)
(code_label 735 734 736 85 464 (nil) [1 uses])
(note 736 735 737 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 737 736 738 85 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -928 [0xfffffffffffffc60])) [6 D.329740+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":233:30 74 {*movdi_internal}
     (nil))
(insn 738 737 739 85 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329741]+0 S16 A128])
        (reg:V2DI 86 [ _21 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 739 738 740 85 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329741 + 16B]+0 S16 A128])
        (reg:V2DI 219 [ _541 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 740 739 741 85 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -368 [0xfffffffffffffe90])) [6 MEM[(struct cons *)&D.329741 + 48B].head+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":309:7 74 {*movdi_internal}
     (nil))
(insn 741 740 742 85 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -360 [0xfffffffffffffe98])) [0 MEM[(struct cons *)&D.329741 + 56B].head.__pfn+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 742 741 743 85 (set (mem/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 MEM[(struct cons *)&D.329741 + 56B].head.__delta+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 743 742 744 85 (set (reg:V2DI 459)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 744 743 745 85 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [134 MEM[(struct pair *)_906]+0 S16 A128])
        (reg:V2DI 459)) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 745 744 746 85 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(call_insn 746 745 1298 85 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/py_function.hpp":124:18 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              86 [always (adjusted)]  count:1070738961 (estimated locally) (FALLTHRU)

;; basic block 86, loop depth 0, count 1070738961 (estimated locally), maybe hot
;;  prev block 85, next block 87, flags: (RTL)
;;  pred:       85 [always (adjusted)]  count:1070738961 (estimated locally) (FALLTHRU)
(note 1298 746 747 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 747 1298 748 86 (set (reg/f:DI 460)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 460)
        (nil)))
(insn 748 747 762 86 (set (reg/f:DI 153 [ _159 ])
        (reg/f:DI 460)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(insn 762 748 763 86 (set (reg:DI 465)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE")  <var_decl 0x7f1a35bc4240 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 763 762 764 86 (set (reg/f:DI 464)
        (plus:DI (reg:DI 465)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":33:26 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE")  <var_decl 0x7f1a35bc4240 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 764 763 765 86 (set (mem/f:DI (reg/f:DI 153 [ _159 ]) [5 MEM[(struct caller_py_function_impl *)_159].D.294465._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 464)) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 765 764 766 86 (set (reg:DI 467)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZN15ChineseCheckers9get_grid_Ev") [flags 0x41]  <function_decl 0x7f1a37307100 get_grid_>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 766 765 767 86 (set (reg/f:DI 466)
        (reg:DI 467)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZN15ChineseCheckers9get_grid_Ev") [flags 0x41]  <function_decl 0x7f1a37307100 get_grid_>)
        (nil)))
(insn 767 766 768 86 (set (mem/f:DI (plus:DI (reg/f:DI 153 [ _159 ])
                (const_int 8 [0x8])) [65 MEM <struct vector ChineseCheckers::<T285c0> (struct ChineseCheckers *) *> [(struct caller_py_function_impl *)_159 + 8B]+0 S8 A64])
        (reg/f:DI 466)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 768 767 769 86 (set (mem:DI (plus:DI (reg/f:DI 153 [ _159 ])
                (const_int 16 [0x10])) [65 MEM <long int> [(struct caller_py_function_impl *)_159 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 769 768 770 86 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])
        (reg/f:DI 153 [ _159 ])) "/usr/include/c++/11/bits/unique_ptr.h":155:56 74 {*movdi_internal}
     (nil))
(insn 770 769 771 86 (parallel [
            (set (reg:DI 468)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -920 [0xfffffffffffffc68])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 771 770 772 86 (parallel [
            (set (reg:DI 469)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 772 771 773 86 (parallel [
            (set (reg:DI 470)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 773 772 774 86 (set (reg:DI 1 dx)
        (reg:DI 469)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 774 773 775 86 (set (reg:DI 4 si)
        (reg:DI 470)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 775 774 776 86 (set (reg:DI 5 di)
        (reg:DI 468)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(call_insn 776 775 1350 86 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>) [0 function_object S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/make_function.hpp":62:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 23 [0x17])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       89 [always]  count:1070738961 (estimated locally) (FALLTHRU)
;;              92 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 87, loop depth 0, count 0 (precise), probably never executed
;;  prev block 86, next block 88, flags: (RTL)
;;  pred:       77 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1350 776 1353 87 514 (nil) [1 uses])
(note 1353 1350 1351 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1351 1353 751 87 (set (reg:DI 462)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       88 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 88, loop depth 0, count 0 (precise), probably never executed
;;  prev block 87, next block 89, flags: (RTL)
;;  pred:       87 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 751 1351 752 88 466 (nil) [0 uses])
(note 752 751 753 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 753 752 754 88 (parallel [
            (set (reg:DI 461)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -936 [0xfffffffffffffc58])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 754 753 755 88 (set (reg:DI 5 di)
        (reg:DI 461)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 755 754 756 88 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 756 755 777 88 (set (reg:DI 376)
        (reg:DI 462)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 89, loop depth 0, count 1070738961 (estimated locally), maybe hot
;;  prev block 88, next block 90, flags: (RTL)
;;  pred:       86 [always]  count:1070738961 (estimated locally) (FALLTHRU)
(note 777 756 778 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 778 777 779 89 (set (reg/f:DI 154 [ _160 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 779 778 780 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 154 [ _160 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 780 779 781 89 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 786)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 786)
;;  succ:       90 [70.0% (guessed)]  count:749517276 (estimated locally) (FALLTHRU)
;;              91 [30.0% (guessed)]  count:321221685 (estimated locally)

;; basic block 90, loop depth 0, count 749517276 (estimated locally), maybe hot
;;  prev block 89, next block 91, flags: (RTL)
;;  pred:       89 [70.0% (guessed)]  count:749517276 (estimated locally) (FALLTHRU)
(note 781 780 782 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 782 781 783 90 (set (reg/f:DI 471)
        (mem/f:DI (reg/f:DI 154 [ _160 ]) [5 _160->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 783 782 784 90 (set (reg/f:DI 472)
        (mem/f:DI (plus:DI (reg/f:DI 471)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_161 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 784 783 785 90 (set (reg:DI 5 di)
        (reg/f:DI 154 [ _160 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 785 784 786 90 (call (mem:QI (reg/f:DI 472) [0 *OBJ_TYPE_REF(_162;_160->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       91 [always]  count:749517276 (estimated locally) (FALLTHRU)

;; basic block 91, loop depth 0, count 1070738961 (estimated locally), maybe hot
;;  prev block 90, next block 92, flags: (RTL)
;;  pred:       89 [30.0% (guessed)]  count:321221685 (estimated locally)
;;              90 [always]  count:749517276 (estimated locally) (FALLTHRU)
(code_label 786 785 787 91 467 (nil) [1 uses])
(note 787 786 788 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 788 787 789 91 (parallel [
            (set (reg:DI 473)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -920 [0xfffffffffffffc68])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 789 788 790 91 (parallel [
            (set (reg:DI 474)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 790 789 791 91 (set (reg:DI 2 cx)
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 791 790 792 91 (set (reg:DI 1 dx)
        (reg:DI 473)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 792 791 793 91 (set (reg:DI 475)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f1a339cc120 *.LC15>)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 793 792 794 91 (set (reg:DI 4 si)
        (reg:DI 475)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f1a339cc120 *.LC15>)
        (nil)))
(insn 794 793 795 91 (set (reg:DI 5 di)
        (reg:DI 474)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(call_insn 795 794 1362 91 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>) [0 add_to_namespace S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 813 {*call}
     (expr_list:REG_EH_REGION (const_int 22 [0x16])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       101 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              96 [always (adjusted)]  count:1070738961 (estimated locally) (FALLTHRU)

;; basic block 92, loop depth 0, count 0 (precise), probably never executed
;;  prev block 91, next block 93, flags: (RTL)
;;  pred:       86 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1362 795 1365 92 517 (nil) [1 uses])
(note 1365 1362 1363 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1363 1365 798 92 (set (reg:DI 478)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
;;  succ:       93 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 93, loop depth 0, count 0 (precise), probably never executed
;;  prev block 92, next block 94, flags: (RTL)
;;  pred:       92 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 798 1363 799 93 469 (nil) [0 uses])
(note 799 798 800 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 800 799 801 93 (set (reg/f:DI 157 [ _163 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 801 800 802 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 157 [ _163 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 802 801 803 93 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 808)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 808)
;;  succ:       94 [never]  count:0 (precise) (FALLTHRU)
;;              95 [never]  count:0 (precise)

;; basic block 94, loop depth 0, count 0 (precise), probably never executed
;;  prev block 93, next block 95, flags: (RTL)
;;  pred:       93 [never]  count:0 (precise) (FALLTHRU)
(note 803 802 804 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 804 803 805 94 (set (reg/f:DI 476)
        (mem/f:DI (reg/f:DI 157 [ _163 ]) [5 _163->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 805 804 806 94 (set (reg/f:DI 477)
        (mem/f:DI (plus:DI (reg/f:DI 476)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_164 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 806 805 807 94 (set (reg:DI 5 di)
        (reg/f:DI 157 [ _163 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 807 806 808 94 (call (mem:QI (reg/f:DI 477) [0 *OBJ_TYPE_REF(_165;_163->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       95 [never]  count:0 (precise) (FALLTHRU)

;; basic block 95, loop depth 0, count 0 (precise), probably never executed
;;  prev block 94, next block 96, flags: (RTL)
;;  pred:       93 [never]  count:0 (precise)
;;              94 [never]  count:0 (precise) (FALLTHRU)
(code_label 808 807 809 95 470 (nil) [1 uses])
(note 809 808 810 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 810 809 815 95 (set (reg:DI 376)
        (reg:DI 478)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 96, loop depth 0, count 1070738961 (estimated locally), maybe hot
;;  prev block 95, next block 97, flags: (RTL)
;;  pred:       91 [always (adjusted)]  count:1070738961 (estimated locally) (FALLTHRU)
(note 815 810 816 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 816 815 817 96 (parallel [
            (set (reg:DI 480)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 817 816 818 96 (parallel [
            (set (reg:DI 223 [ _630 ])
                (plus:DI (reg:DI 480)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 818 817 819 96 (parallel [
            (set (reg:DI 482)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -912 [0xfffffffffffffc70])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 819 818 820 96 (set (reg:V2DI 481)
        (vec_concat:V2DI (reg:DI 482)
            (reg:DI 223 [ _630 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 820 819 821 96 (set (reg:V2DI 225 [ _644 ])
        (reg:V2DI 481)) 1439 {movv2di_internal}
     (nil))
(insn 821 820 822 96 (set (reg:V2DI 483)
        (vec_duplicate:V2DI (reg:DI 223 [ _630 ]))) 5014 {*vec_dupv2di}
     (nil))
(insn 822 821 823 96 (set (reg:V2DI 87 [ _25 ])
        (reg:V2DI 483)) 1439 {movv2di_internal}
     (nil))
(insn 823 822 824 96 (set (reg/f:DI 160 [ _166 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -920 [0xfffffffffffffc68])) [31 D.329752.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 824 823 827 96 (set (reg:DI 161 [ _167 ])
        (mem:DI (reg/f:DI 160 [ _166 ]) [7 MEM[(const struct PyObject *)_166].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 827 824 828 96 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 161 [ _167 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 828 827 829 96 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 279)
;;  succ:       97 [100.0% (guessed)]  count:1070310666 (estimated locally) (FALLTHRU)
;;              18 [0.0% (guessed)]  count:428295 (estimated locally)

;; basic block 97, loop depth 0, count 1070310666 (estimated locally), maybe hot
;;  prev block 96, next block 98, flags: (RTL)
;;  pred:       96 [100.0% (guessed)]  count:1070310666 (estimated locally) (FALLTHRU)
(note 829 828 830 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 830 829 831 97 (parallel [
            (set (reg:DI 162 [ _168 ])
                (plus:DI (reg:DI 161 [ _167 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 831 830 832 97 (set (mem:DI (reg/f:DI 160 [ _166 ]) [7 _166->ob_refcnt+0 S8 A64])
        (reg:DI 162 [ _168 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 832 831 833 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 162 [ _168 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 833 832 834 97 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 837)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 837)
;;  succ:       99 [67.0% (guessed)]  count:717108148 (estimated locally)
;;              98 [33.0% (guessed)]  count:353202518 (estimated locally) (FALLTHRU)

;; basic block 98, loop depth 0, count 353202518 (estimated locally), maybe hot
;;  prev block 97, next block 99, flags: (RTL)
;;  pred:       97 [33.0% (guessed)]  count:353202518 (estimated locally) (FALLTHRU)
(note 834 833 835 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 835 834 836 98 (set (reg:DI 5 di)
        (reg/f:DI 160 [ _166 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 836 835 837 98 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -34 [0xffffffffffffffde])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       99 [always]  count:353202518 (estimated locally) (FALLTHRU)

;; basic block 99, loop depth 0, count 1070310666 (estimated locally), maybe hot
;;  prev block 98, next block 100, flags: (RTL)
;;  pred:       97 [67.0% (guessed)]  count:717108148 (estimated locally)
;;              98 [always]  count:353202518 (estimated locally) (FALLTHRU)
(code_label 837 836 838 99 471 (nil) [1 uses])
(note 838 837 839 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 839 838 840 99 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -912 [0xfffffffffffffc70])) [6 D.329773+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":233:30 74 {*movdi_internal}
     (nil))
(insn 840 839 841 99 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -336 [0xfffffffffffffeb0])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329774]+0 S16 A128])
        (reg:V2DI 225 [ _644 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 841 840 842 99 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 MEM <vector(2) long unsigned int> [(void *)&D.329774 + 16B]+0 S16 A128])
        (reg:V2DI 87 [ _25 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 842 841 843 99 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -288 [0xfffffffffffffee0])) [6 MEM[(struct cons *)&D.329774 + 48B].head+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":309:7 74 {*movdi_internal}
     (nil))
(insn 843 842 844 99 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -280 [0xfffffffffffffee8])) [0 MEM[(struct cons *)&D.329774 + 56B].head.__pfn+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 844 843 845 99 (set (mem/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -272 [0xfffffffffffffef0])) [0 MEM[(struct cons *)&D.329774 + 56B].head.__delta+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 845 844 846 99 (set (reg:V2DI 484)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 846 845 847 99 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [134 MEM[(struct pair *)_906]+0 S16 A128])
        (reg:V2DI 484)) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 847 846 848 99 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(call_insn 848 847 1300 99 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/py_function.hpp":124:18 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              100 [always (adjusted)]  count:1070310666 (estimated locally) (FALLTHRU)

;; basic block 100, loop depth 0, count 1070310666 (estimated locally), maybe hot
;;  prev block 99, next block 101, flags: (RTL)
;;  pred:       99 [always (adjusted)]  count:1070310666 (estimated locally) (FALLTHRU)
(note 1300 848 849 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 849 1300 850 100 (set (reg/f:DI 485)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 485)
        (nil)))
(insn 850 849 864 100 (set (reg/f:DI 163 [ _175 ])
        (reg/f:DI 485)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(insn 864 850 865 100 (set (reg:DI 490)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 865 864 866 100 (set (reg/f:DI 489)
        (plus:DI (reg:DI 490)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":33:26 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 866 865 867 100 (set (mem/f:DI (reg/f:DI 163 [ _175 ]) [5 MEM[(struct caller_py_function_impl *)_175].D.294396._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 489)) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 867 866 868 100 (set (reg:DI 492)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZN15ChineseCheckers30print_position_colors_players_Ev") [flags 0x41]  <function_decl 0x7f1a37307200 print_position_colors_players_>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 868 867 869 100 (set (reg/f:DI 491)
        (reg:DI 492)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZN15ChineseCheckers30print_position_colors_players_Ev") [flags 0x41]  <function_decl 0x7f1a37307200 print_position_colors_players_>)
        (nil)))
(insn 869 868 870 100 (set (mem/f:DI (plus:DI (reg/f:DI 163 [ _175 ])
                (const_int 8 [0x8])) [70 MEM <void ChineseCheckers::<T285bc> (struct ChineseCheckers *) *> [(struct caller_py_function_impl *)_175 + 8B]+0 S8 A64])
        (reg/f:DI 491)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 870 869 871 100 (set (mem:DI (plus:DI (reg/f:DI 163 [ _175 ])
                (const_int 16 [0x10])) [70 MEM <long int> [(struct caller_py_function_impl *)_175 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 871 870 872 100 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])
        (reg/f:DI 163 [ _175 ])) "/usr/include/c++/11/bits/unique_ptr.h":155:56 74 {*movdi_internal}
     (nil))
(insn 872 871 873 100 (parallel [
            (set (reg:DI 493)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -904 [0xfffffffffffffc78])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 873 872 874 100 (parallel [
            (set (reg:DI 494)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 874 873 875 100 (parallel [
            (set (reg:DI 495)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 875 874 876 100 (set (reg:DI 1 dx)
        (reg:DI 494)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 876 875 877 100 (set (reg:DI 4 si)
        (reg:DI 495)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 877 876 878 100 (set (reg:DI 5 di)
        (reg:DI 493)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(call_insn 878 877 1358 100 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>) [0 function_object S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/make_function.hpp":62:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 26 [0x1a])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       103 [always]  count:1070310666 (estimated locally) (FALLTHRU)
;;              106 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 101, loop depth 0, count 0 (precise), probably never executed
;;  prev block 100, next block 102, flags: (RTL)
;;  pred:       91 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1358 878 1361 101 516 (nil) [1 uses])
(note 1361 1358 1359 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1359 1361 853 101 (set (reg:DI 487)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       102 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 102, loop depth 0, count 0 (precise), probably never executed
;;  prev block 101, next block 103, flags: (RTL)
;;  pred:       101 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 853 1359 854 102 473 (nil) [0 uses])
(note 854 853 855 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 855 854 856 102 (parallel [
            (set (reg:DI 486)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -920 [0xfffffffffffffc68])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 856 855 857 102 (set (reg:DI 5 di)
        (reg:DI 486)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 857 856 858 102 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 858 857 879 102 (set (reg:DI 376)
        (reg:DI 487)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 103, loop depth 0, count 1070310666 (estimated locally), maybe hot
;;  prev block 102, next block 104, flags: (RTL)
;;  pred:       100 [always]  count:1070310666 (estimated locally) (FALLTHRU)
(note 879 858 880 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 880 879 881 103 (set (reg/f:DI 164 [ _176 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 881 880 882 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 164 [ _176 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 882 881 883 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 888)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 888)
;;  succ:       104 [70.0% (guessed)]  count:749217469 (estimated locally) (FALLTHRU)
;;              105 [30.0% (guessed)]  count:321093197 (estimated locally)

;; basic block 104, loop depth 0, count 749217470 (estimated locally), maybe hot
;;  prev block 103, next block 105, flags: (RTL)
;;  pred:       103 [70.0% (guessed)]  count:749217469 (estimated locally) (FALLTHRU)
(note 883 882 884 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 884 883 885 104 (set (reg/f:DI 496)
        (mem/f:DI (reg/f:DI 164 [ _176 ]) [5 _176->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 885 884 886 104 (set (reg/f:DI 497)
        (mem/f:DI (plus:DI (reg/f:DI 496)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_177 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 886 885 887 104 (set (reg:DI 5 di)
        (reg/f:DI 164 [ _176 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 887 886 888 104 (call (mem:QI (reg/f:DI 497) [0 *OBJ_TYPE_REF(_178;_176->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       105 [always]  count:749217470 (estimated locally) (FALLTHRU)

;; basic block 105, loop depth 0, count 1070310667 (estimated locally), maybe hot
;;  prev block 104, next block 106, flags: (RTL)
;;  pred:       103 [30.0% (guessed)]  count:321093197 (estimated locally)
;;              104 [always]  count:749217470 (estimated locally) (FALLTHRU)
(code_label 888 887 889 105 474 (nil) [1 uses])
(note 889 888 890 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 890 889 891 105 (parallel [
            (set (reg:DI 498)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -904 [0xfffffffffffffc78])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 891 890 892 105 (parallel [
            (set (reg:DI 499)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 892 891 893 105 (set (reg:DI 2 cx)
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 893 892 894 105 (set (reg:DI 1 dx)
        (reg:DI 498)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 894 893 895 105 (set (reg:DI 500)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f1a339cc240 *.LC16>)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 895 894 896 105 (set (reg:DI 4 si)
        (reg:DI 500)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f1a339cc240 *.LC16>)
        (nil)))
(insn 896 895 897 105 (set (reg:DI 5 di)
        (reg:DI 499)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(call_insn 897 896 1370 105 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>) [0 add_to_namespace S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 813 {*call}
     (expr_list:REG_EH_REGION (const_int 25 [0x19])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       115 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              110 [always (adjusted)]  count:1070310667 (estimated locally) (FALLTHRU)

;; basic block 106, loop depth 0, count 0 (precise), probably never executed
;;  prev block 105, next block 107, flags: (RTL)
;;  pred:       100 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1370 897 1373 106 519 (nil) [1 uses])
(note 1373 1370 1371 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 1371 1373 900 106 (set (reg:DI 503)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
;;  succ:       107 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 107, loop depth 0, count 0 (precise), probably never executed
;;  prev block 106, next block 108, flags: (RTL)
;;  pred:       106 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 900 1371 901 107 476 (nil) [0 uses])
(note 901 900 902 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 902 901 903 107 (set (reg/f:DI 167 [ _179 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 903 902 904 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 167 [ _179 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 904 903 905 107 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 910)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 910)
;;  succ:       108 [never]  count:0 (precise) (FALLTHRU)
;;              109 [never]  count:0 (precise)

;; basic block 108, loop depth 0, count 0 (precise), probably never executed
;;  prev block 107, next block 109, flags: (RTL)
;;  pred:       107 [never]  count:0 (precise) (FALLTHRU)
(note 905 904 906 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 906 905 907 108 (set (reg/f:DI 501)
        (mem/f:DI (reg/f:DI 167 [ _179 ]) [5 _179->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 907 906 908 108 (set (reg/f:DI 502)
        (mem/f:DI (plus:DI (reg/f:DI 501)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_180 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 908 907 909 108 (set (reg:DI 5 di)
        (reg/f:DI 167 [ _179 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 909 908 910 108 (call (mem:QI (reg/f:DI 502) [0 *OBJ_TYPE_REF(_181;_179->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       109 [never]  count:0 (precise) (FALLTHRU)

;; basic block 109, loop depth 0, count 0 (precise), probably never executed
;;  prev block 108, next block 110, flags: (RTL)
;;  pred:       107 [never]  count:0 (precise)
;;              108 [never]  count:0 (precise) (FALLTHRU)
(code_label 910 909 911 109 477 (nil) [1 uses])
(note 911 910 912 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 912 911 917 109 (set (reg:DI 376)
        (reg:DI 503)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 110, loop depth 0, count 1070310667 (estimated locally), maybe hot
;;  prev block 109, next block 111, flags: (RTL)
;;  pred:       105 [always (adjusted)]  count:1070310667 (estimated locally) (FALLTHRU)
(note 917 912 918 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 918 917 919 110 (parallel [
            (set (reg:DI 505)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 919 918 920 110 (parallel [
            (set (reg:DI 228 [ _700 ])
                (plus:DI (reg:DI 505)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 920 919 921 110 (parallel [
            (set (reg:DI 507)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -896 [0xfffffffffffffc80])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 921 920 922 110 (set (reg:V2DI 506)
        (vec_concat:V2DI (reg:DI 507)
            (reg:DI 228 [ _700 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 922 921 923 110 (set (reg:V2DI 88 [ _32 ])
        (reg:V2DI 506)) 1439 {movv2di_internal}
     (nil))
(insn 923 922 924 110 (set (reg:V2DI 508)
        (vec_duplicate:V2DI (reg:DI 228 [ _700 ]))) 5014 {*vec_dupv2di}
     (nil))
(insn 924 923 925 110 (set (reg:V2DI 227 [ _697 ])
        (reg:V2DI 508)) 1439 {movv2di_internal}
     (nil))
(insn 925 924 926 110 (set (reg/f:DI 170 [ _182 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -904 [0xfffffffffffffc78])) [31 D.329785.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 926 925 929 110 (set (reg:DI 171 [ _183 ])
        (mem:DI (reg/f:DI 170 [ _182 ]) [7 MEM[(const struct PyObject *)_182].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 929 926 930 110 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 171 [ _183 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 930 929 931 110 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 279)
;;  succ:       111 [100.0% (guessed)]  count:1069882543 (estimated locally) (FALLTHRU)
;;              18 [0.0% (guessed)]  count:428124 (estimated locally)

;; basic block 111, loop depth 0, count 1069882543 (estimated locally), maybe hot
;;  prev block 110, next block 112, flags: (RTL)
;;  pred:       110 [100.0% (guessed)]  count:1069882543 (estimated locally) (FALLTHRU)
(note 931 930 932 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 932 931 933 111 (parallel [
            (set (reg:DI 172 [ _184 ])
                (plus:DI (reg:DI 171 [ _183 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 933 932 934 111 (set (mem:DI (reg/f:DI 170 [ _182 ]) [7 _182->ob_refcnt+0 S8 A64])
        (reg:DI 172 [ _184 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 934 933 935 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 172 [ _184 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 935 934 936 111 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 939)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 939)
;;  succ:       113 [67.0% (guessed)]  count:716821306 (estimated locally)
;;              112 [33.0% (guessed)]  count:353061237 (estimated locally) (FALLTHRU)

;; basic block 112, loop depth 0, count 353061237 (estimated locally), maybe hot
;;  prev block 111, next block 113, flags: (RTL)
;;  pred:       111 [33.0% (guessed)]  count:353061237 (estimated locally) (FALLTHRU)
(note 936 935 937 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 937 936 938 112 (set (reg:DI 5 di)
        (reg/f:DI 170 [ _182 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 938 937 939 112 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -38 [0xffffffffffffffda])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       113 [always]  count:353061237 (estimated locally) (FALLTHRU)

;; basic block 113, loop depth 0, count 1069882543 (estimated locally), maybe hot
;;  prev block 112, next block 114, flags: (RTL)
;;  pred:       111 [67.0% (guessed)]  count:716821306 (estimated locally)
;;              112 [always]  count:353061237 (estimated locally) (FALLTHRU)
(code_label 939 938 940 113 478 (nil) [1 uses])
(note 940 939 941 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 941 940 942 113 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -896 [0xfffffffffffffc80])) [6 D.329806+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":233:30 74 {*movdi_internal}
     (nil))
(insn 942 941 943 113 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -256 [0xffffffffffffff00])) [0 MEM <vector(2) long unsigned int> [(void *)_900]+0 S16 A128])
        (reg:V2DI 88 [ _32 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 943 942 944 113 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -240 [0xffffffffffffff10])) [0 MEM <vector(2) long unsigned int> [(void *)_900]+0 S16 A128])
        (reg:V2DI 227 [ _697 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 944 943 945 113 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -208 [0xffffffffffffff30])) [6 MEM[(struct cons *)_900].head+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":309:7 74 {*movdi_internal}
     (nil))
(insn 945 944 946 113 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -200 [0xffffffffffffff38])) [0 MEM[(struct cons *)_900].head.__pfn+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 946 945 947 113 (set (mem/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -192 [0xffffffffffffff40])) [0 MEM[(struct cons *)_900].head.__delta+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 947 946 948 113 (set (reg:V2DI 509)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 948 947 949 113 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [134 MEM[(struct pair *)_906]+0 S16 A128])
        (reg:V2DI 509)) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 949 948 950 113 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(call_insn 950 949 1302 113 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/py_function.hpp":124:18 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              114 [always (adjusted)]  count:1069882543 (estimated locally) (FALLTHRU)

;; basic block 114, loop depth 0, count 1069882543 (estimated locally), maybe hot
;;  prev block 113, next block 115, flags: (RTL)
;;  pred:       113 [always (adjusted)]  count:1069882543 (estimated locally) (FALLTHRU)
(note 1302 950 951 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 951 1302 952 114 (set (reg/f:DI 510)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 510)
        (nil)))
(insn 952 951 966 114 (set (reg/f:DI 173 [ _191 ])
        (reg/f:DI 510)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(insn 966 952 967 114 (set (reg:DI 515)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE")  <var_decl 0x7f1a35bc47e0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 967 966 968 114 (set (reg/f:DI 514)
        (plus:DI (reg:DI 515)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":33:26 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE")  <var_decl 0x7f1a35bc47e0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 968 967 969 114 (set (mem/f:DI (reg/f:DI 173 [ _191 ]) [5 MEM[(struct caller_py_function_impl *)_191].D.294534._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 514)) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 969 968 970 114 (set (reg:DI 517)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZN15ChineseCheckers28get_position_colors_players_Ev") [flags 0x41]  <function_decl 0x7f1a37307300 get_position_colors_players_>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 970 969 971 114 (set (reg/f:DI 516)
        (reg:DI 517)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZN15ChineseCheckers28get_position_colors_players_Ev") [flags 0x41]  <function_decl 0x7f1a37307300 get_position_colors_players_>)
        (nil)))
(insn 971 970 972 114 (set (mem/f:DI (plus:DI (reg/f:DI 173 [ _191 ])
                (const_int 8 [0x8])) [60 MEM <struct vector ChineseCheckers::<T285c2> (struct ChineseCheckers *) *> [(struct caller_py_function_impl *)_191 + 8B]+0 S8 A64])
        (reg/f:DI 516)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 972 971 973 114 (set (mem:DI (plus:DI (reg/f:DI 173 [ _191 ])
                (const_int 16 [0x10])) [60 MEM <long int> [(struct caller_py_function_impl *)_191 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 973 972 974 114 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])
        (reg/f:DI 173 [ _191 ])) "/usr/include/c++/11/bits/unique_ptr.h":155:56 74 {*movdi_internal}
     (nil))
(insn 974 973 975 114 (parallel [
            (set (reg:DI 518)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -888 [0xfffffffffffffc88])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 975 974 976 114 (parallel [
            (set (reg:DI 519)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 976 975 977 114 (parallel [
            (set (reg:DI 520)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 977 976 978 114 (set (reg:DI 1 dx)
        (reg:DI 519)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 978 977 979 114 (set (reg:DI 4 si)
        (reg:DI 520)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 979 978 980 114 (set (reg:DI 5 di)
        (reg:DI 518)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(call_insn 980 979 1366 114 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>) [0 function_object S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/make_function.hpp":62:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 29 [0x1d])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       117 [always]  count:1069882543 (estimated locally) (FALLTHRU)
;;              120 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 115, loop depth 0, count 0 (precise), probably never executed
;;  prev block 114, next block 116, flags: (RTL)
;;  pred:       105 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1366 980 1369 115 518 (nil) [1 uses])
(note 1369 1366 1367 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 1367 1369 955 115 (set (reg:DI 512)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       116 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 116, loop depth 0, count 0 (precise), probably never executed
;;  prev block 115, next block 117, flags: (RTL)
;;  pred:       115 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 955 1367 956 116 480 (nil) [0 uses])
(note 956 955 957 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 957 956 958 116 (parallel [
            (set (reg:DI 511)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -904 [0xfffffffffffffc78])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 958 957 959 116 (set (reg:DI 5 di)
        (reg:DI 511)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 959 958 960 116 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 960 959 981 116 (set (reg:DI 376)
        (reg:DI 512)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 117, loop depth 0, count 1069882543 (estimated locally), maybe hot
;;  prev block 116, next block 118, flags: (RTL)
;;  pred:       114 [always]  count:1069882543 (estimated locally) (FALLTHRU)
(note 981 960 982 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 982 981 983 117 (set (reg/f:DI 174 [ _192 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 983 982 984 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 174 [ _192 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 984 983 985 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 990)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 990)
;;  succ:       118 [70.0% (guessed)]  count:748917783 (estimated locally) (FALLTHRU)
;;              119 [30.0% (guessed)]  count:320964760 (estimated locally)

;; basic block 118, loop depth 0, count 748917784 (estimated locally), maybe hot
;;  prev block 117, next block 119, flags: (RTL)
;;  pred:       117 [70.0% (guessed)]  count:748917783 (estimated locally) (FALLTHRU)
(note 985 984 986 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 986 985 987 118 (set (reg/f:DI 521)
        (mem/f:DI (reg/f:DI 174 [ _192 ]) [5 _192->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 987 986 988 118 (set (reg/f:DI 522)
        (mem/f:DI (plus:DI (reg/f:DI 521)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_193 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 988 987 989 118 (set (reg:DI 5 di)
        (reg/f:DI 174 [ _192 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 989 988 990 118 (call (mem:QI (reg/f:DI 522) [0 *OBJ_TYPE_REF(_194;_192->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       119 [always]  count:748917784 (estimated locally) (FALLTHRU)

;; basic block 119, loop depth 0, count 1069882544 (estimated locally), maybe hot
;;  prev block 118, next block 120, flags: (RTL)
;;  pred:       117 [30.0% (guessed)]  count:320964760 (estimated locally)
;;              118 [always]  count:748917784 (estimated locally) (FALLTHRU)
(code_label 990 989 991 119 481 (nil) [1 uses])
(note 991 990 992 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 992 991 993 119 (parallel [
            (set (reg:DI 523)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -888 [0xfffffffffffffc88])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 993 992 994 119 (parallel [
            (set (reg:DI 524)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 994 993 995 119 (set (reg:DI 2 cx)
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 995 994 996 119 (set (reg:DI 1 dx)
        (reg:DI 523)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 996 995 997 119 (set (reg:DI 525)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f1a339cc360 *.LC17>)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 997 996 998 119 (set (reg:DI 4 si)
        (reg:DI 525)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f1a339cc360 *.LC17>)
        (nil)))
(insn 998 997 999 119 (set (reg:DI 5 di)
        (reg:DI 524)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(call_insn 999 998 1378 119 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>) [0 add_to_namespace S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 813 {*call}
     (expr_list:REG_EH_REGION (const_int 28 [0x1c])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       129 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              124 [always (adjusted)]  count:1069882544 (estimated locally) (FALLTHRU)

;; basic block 120, loop depth 0, count 0 (precise), probably never executed
;;  prev block 119, next block 121, flags: (RTL)
;;  pred:       114 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1378 999 1381 120 521 (nil) [1 uses])
(note 1381 1378 1379 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 1379 1381 1002 120 (set (reg:DI 528)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
;;  succ:       121 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 121, loop depth 0, count 0 (precise), probably never executed
;;  prev block 120, next block 122, flags: (RTL)
;;  pred:       120 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 1002 1379 1003 121 483 (nil) [0 uses])
(note 1003 1002 1004 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 1004 1003 1005 121 (set (reg/f:DI 177 [ _195 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [54 MEM[(struct py_function_impl_base * &)_903]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 1005 1004 1006 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 177 [ _195 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1006 1005 1007 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1012)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 1012)
;;  succ:       122 [never]  count:0 (precise) (FALLTHRU)
;;              123 [never]  count:0 (precise)

;; basic block 122, loop depth 0, count 0 (precise), probably never executed
;;  prev block 121, next block 123, flags: (RTL)
;;  pred:       121 [never]  count:0 (precise) (FALLTHRU)
(note 1007 1006 1008 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 1008 1007 1009 122 (set (reg/f:DI 526)
        (mem/f:DI (reg/f:DI 177 [ _195 ]) [5 _195->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 1009 1008 1010 122 (set (reg/f:DI 527)
        (mem/f:DI (plus:DI (reg/f:DI 526)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_196 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 1010 1009 1011 122 (set (reg:DI 5 di)
        (reg/f:DI 177 [ _195 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 1011 1010 1012 122 (call (mem:QI (reg/f:DI 527) [0 *OBJ_TYPE_REF(_197;_195->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       123 [never]  count:0 (precise) (FALLTHRU)

;; basic block 123, loop depth 0, count 0 (precise), probably never executed
;;  prev block 122, next block 124, flags: (RTL)
;;  pred:       121 [never]  count:0 (precise)
;;              122 [never]  count:0 (precise) (FALLTHRU)
(code_label 1012 1011 1013 123 484 (nil) [1 uses])
(note 1013 1012 1014 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 1014 1013 1019 123 (set (reg:DI 376)
        (reg:DI 528)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 124, loop depth 0, count 1069882544 (estimated locally), maybe hot
;;  prev block 123, next block 125, flags: (RTL)
;;  pred:       119 [always (adjusted)]  count:1069882544 (estimated locally) (FALLTHRU)
(note 1019 1014 1020 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1020 1019 1021 124 (parallel [
            (set (reg:DI 530)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 1021 1020 1022 124 (parallel [
            (set (reg:DI 90 [ _37 ])
                (plus:DI (reg:DI 530)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 1022 1021 1023 124 (parallel [
            (set (reg:DI 532)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -880 [0xfffffffffffffc90])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 1023 1022 1024 124 (set (reg:V2DI 531)
        (vec_concat:V2DI (reg:DI 532)
            (reg:DI 90 [ _37 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 1024 1023 1025 124 (set (reg:V2DI 233 [ _802 ])
        (reg:V2DI 531)) 1439 {movv2di_internal}
     (nil))
(insn 1025 1024 1026 124 (set (reg:V2DI 533)
        (vec_duplicate:V2DI (reg:DI 90 [ _37 ]))) 5014 {*vec_dupv2di}
     (nil))
(insn 1026 1025 1027 124 (set (reg:V2DI 89 [ _36 ])
        (reg:V2DI 533)) 1439 {movv2di_internal}
     (nil))
(insn 1027 1026 1028 124 (set (reg/f:DI 180 [ _198 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -888 [0xfffffffffffffc88])) [31 D.329818.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 1028 1027 1031 124 (set (reg:DI 181 [ _199 ])
        (mem:DI (reg/f:DI 180 [ _198 ]) [7 MEM[(const struct PyObject *)_198].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 1031 1028 1032 124 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 181 [ _199 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1032 1031 1033 124 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 279)
;;  succ:       125 [100.0% (guessed)]  count:1069454592 (estimated locally) (FALLTHRU)
;;              18 [0.0% (guessed)]  count:427952 (estimated locally)

;; basic block 125, loop depth 0, count 1069454592 (estimated locally), maybe hot
;;  prev block 124, next block 126, flags: (RTL)
;;  pred:       124 [100.0% (guessed)]  count:1069454592 (estimated locally) (FALLTHRU)
(note 1033 1032 1034 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 1034 1033 1035 125 (parallel [
            (set (reg:DI 182 [ _200 ])
                (plus:DI (reg:DI 181 [ _199 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 1035 1034 1036 125 (set (mem:DI (reg/f:DI 180 [ _198 ]) [7 _198->ob_refcnt+0 S8 A64])
        (reg:DI 182 [ _200 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 1036 1035 1037 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 182 [ _200 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1037 1036 1038 125 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1041)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 1041)
;;  succ:       127 [67.0% (guessed)]  count:716534579 (estimated locally)
;;              126 [33.0% (guessed)]  count:352920013 (estimated locally) (FALLTHRU)

;; basic block 126, loop depth 0, count 352920013 (estimated locally), maybe hot
;;  prev block 125, next block 127, flags: (RTL)
;;  pred:       125 [33.0% (guessed)]  count:352920013 (estimated locally) (FALLTHRU)
(note 1038 1037 1039 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1039 1038 1040 126 (set (reg:DI 5 di)
        (reg/f:DI 180 [ _198 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 1040 1039 1041 126 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -42 [0xffffffffffffffd6])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       127 [always]  count:352920013 (estimated locally) (FALLTHRU)

;; basic block 127, loop depth 0, count 1069454592 (estimated locally), maybe hot
;;  prev block 126, next block 128, flags: (RTL)
;;  pred:       125 [67.0% (guessed)]  count:716534579 (estimated locally)
;;              126 [always]  count:352920013 (estimated locally) (FALLTHRU)
(code_label 1041 1040 1042 127 485 (nil) [1 uses])
(note 1042 1041 1043 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1043 1042 1044 127 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -880 [0xfffffffffffffc90])) [6 D.329839+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":233:30 74 {*movdi_internal}
     (nil))
(insn 1044 1043 1045 127 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [0 MEM <vector(2) long unsigned int> [(void *)_903]+0 S16 A128])
        (reg:V2DI 233 [ _802 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 1045 1044 1046 127 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -160 [0xffffffffffffff60])) [0 MEM <vector(2) long unsigned int> [(void *)_903]+0 S16 A128])
        (reg:V2DI 89 [ _36 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 1046 1045 1047 127 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -128 [0xffffffffffffff80])) [6 MEM[(struct cons *)_903].head+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":309:7 74 {*movdi_internal}
     (nil))
(insn 1047 1046 1048 127 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -120 [0xffffffffffffff88])) [0 MEM[(struct cons *)_903].head.__pfn+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 1048 1047 1049 127 (set (mem/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [0 MEM[(struct cons *)_903].head.__delta+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 1049 1048 1050 127 (set (reg:V2DI 534)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 1050 1049 1051 127 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [134 MEM[(struct pair *)_906]+0 S16 A128])
        (reg:V2DI 534)) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 1051 1050 1052 127 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(call_insn 1052 1051 1304 127 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/py_function.hpp":124:18 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              128 [always (adjusted)]  count:1069454592 (estimated locally) (FALLTHRU)

;; basic block 128, loop depth 0, count 1069454592 (estimated locally), maybe hot
;;  prev block 127, next block 129, flags: (RTL)
;;  pred:       127 [always (adjusted)]  count:1069454592 (estimated locally) (FALLTHRU)
(note 1304 1052 1053 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1053 1304 1054 128 (set (reg/f:DI 535)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 535)
        (nil)))
(insn 1054 1053 1068 128 (set (reg/f:DI 183 [ _207 ])
        (reg/f:DI 535)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(insn 1068 1054 1069 128 (set (reg:DI 540)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 1069 1068 1070 128 (set (reg/f:DI 539)
        (plus:DI (reg:DI 540)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":33:26 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE")  <var_decl 0x7f1a35ba7bd0 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFvvENS0_21default_call_policiesENS_3mpl7vector2IvRS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 1070 1069 1071 128 (set (mem/f:DI (reg/f:DI 183 [ _207 ]) [5 MEM[(struct caller_py_function_impl *)_207].D.294396._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 539)) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 1071 1070 1072 128 (set (reg:DI 542)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZN15ChineseCheckers21print_who_is_to_play_Ev") [flags 0x41]  <function_decl 0x7f1a37307400 print_who_is_to_play_>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 1072 1071 1073 128 (set (reg/f:DI 541)
        (reg:DI 542)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZN15ChineseCheckers21print_who_is_to_play_Ev") [flags 0x41]  <function_decl 0x7f1a37307400 print_who_is_to_play_>)
        (nil)))
(insn 1073 1072 1074 128 (set (mem/f:DI (plus:DI (reg/f:DI 183 [ _207 ])
                (const_int 8 [0x8])) [70 MEM <void ChineseCheckers::<T285bc> (struct ChineseCheckers *) *> [(struct caller_py_function_impl *)_207 + 8B]+0 S8 A64])
        (reg/f:DI 541)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 1074 1073 1075 128 (set (mem:DI (plus:DI (reg/f:DI 183 [ _207 ])
                (const_int 16 [0x10])) [70 MEM <long int> [(struct caller_py_function_impl *)_207 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 1075 1074 1076 128 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -256 [0xffffffffffffff00])) [54 MEM[(struct py_function_impl_base * &)_900]+0 S8 A128])
        (reg/f:DI 183 [ _207 ])) "/usr/include/c++/11/bits/unique_ptr.h":155:56 74 {*movdi_internal}
     (nil))
(insn 1076 1075 1077 128 (parallel [
            (set (reg:DI 543)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -872 [0xfffffffffffffc98])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 1077 1076 1078 128 (parallel [
            (set (reg:DI 544)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 1078 1077 1079 128 (parallel [
            (set (reg:DI 545)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 1079 1078 1080 128 (set (reg:DI 1 dx)
        (reg:DI 544)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 1080 1079 1081 128 (set (reg:DI 4 si)
        (reg:DI 545)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 1081 1080 1082 128 (set (reg:DI 5 di)
        (reg:DI 543)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(call_insn 1082 1081 1374 128 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>) [0 function_object S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/make_function.hpp":62:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 32 [0x20])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       131 [always]  count:1069454592 (estimated locally) (FALLTHRU)
;;              134 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 129, loop depth 0, count 0 (precise), probably never executed
;;  prev block 128, next block 130, flags: (RTL)
;;  pred:       119 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1374 1082 1377 129 520 (nil) [1 uses])
(note 1377 1374 1375 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1375 1377 1057 129 (set (reg:DI 537)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       130 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 130, loop depth 0, count 0 (precise), probably never executed
;;  prev block 129, next block 131, flags: (RTL)
;;  pred:       129 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 1057 1375 1058 130 487 (nil) [0 uses])
(note 1058 1057 1059 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1059 1058 1060 130 (parallel [
            (set (reg:DI 536)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -888 [0xfffffffffffffc88])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 1060 1059 1061 130 (set (reg:DI 5 di)
        (reg:DI 536)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 1061 1060 1062 130 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1062 1061 1083 130 (set (reg:DI 376)
        (reg:DI 537)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 131, loop depth 0, count 1069454592 (estimated locally), maybe hot
;;  prev block 130, next block 132, flags: (RTL)
;;  pred:       128 [always]  count:1069454592 (estimated locally) (FALLTHRU)
(note 1083 1062 1084 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 1084 1083 1085 131 (set (reg/f:DI 184 [ _208 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -256 [0xffffffffffffff00])) [54 MEM[(struct py_function_impl_base * &)_900]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 1085 1084 1086 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 184 [ _208 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1086 1085 1087 131 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1092)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 1092)
;;  succ:       132 [70.0% (guessed)]  count:748618218 (estimated locally) (FALLTHRU)
;;              133 [30.0% (guessed)]  count:320836374 (estimated locally)

;; basic block 132, loop depth 0, count 748618218 (estimated locally), maybe hot
;;  prev block 131, next block 133, flags: (RTL)
;;  pred:       131 [70.0% (guessed)]  count:748618218 (estimated locally) (FALLTHRU)
(note 1087 1086 1088 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1088 1087 1089 132 (set (reg/f:DI 546)
        (mem/f:DI (reg/f:DI 184 [ _208 ]) [5 _208->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 1089 1088 1090 132 (set (reg/f:DI 547)
        (mem/f:DI (plus:DI (reg/f:DI 546)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_209 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 1090 1089 1091 132 (set (reg:DI 5 di)
        (reg/f:DI 184 [ _208 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 1091 1090 1092 132 (call (mem:QI (reg/f:DI 547) [0 *OBJ_TYPE_REF(_210;_208->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       133 [always]  count:748618218 (estimated locally) (FALLTHRU)

;; basic block 133, loop depth 0, count 1069454592 (estimated locally), maybe hot
;;  prev block 132, next block 134, flags: (RTL)
;;  pred:       131 [30.0% (guessed)]  count:320836374 (estimated locally)
;;              132 [always]  count:748618218 (estimated locally) (FALLTHRU)
(code_label 1092 1091 1093 133 488 (nil) [1 uses])
(note 1093 1092 1094 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 1094 1093 1095 133 (parallel [
            (set (reg:DI 548)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -872 [0xfffffffffffffc98])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 1095 1094 1096 133 (parallel [
            (set (reg:DI 549)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 1096 1095 1097 133 (set (reg:DI 2 cx)
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 1097 1096 1098 133 (set (reg:DI 1 dx)
        (reg:DI 548)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 1098 1097 1099 133 (set (reg:DI 550)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f1a339cc480 *.LC18>)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 1099 1098 1100 133 (set (reg:DI 4 si)
        (reg:DI 550)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f1a339cc480 *.LC18>)
        (nil)))
(insn 1100 1099 1101 133 (set (reg:DI 5 di)
        (reg:DI 549)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(call_insn 1101 1100 1386 133 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>) [0 add_to_namespace S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 813 {*call}
     (expr_list:REG_EH_REGION (const_int 31 [0x1f])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       143 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              138 [always (adjusted)]  count:1069454592 (estimated locally) (FALLTHRU)

;; basic block 134, loop depth 0, count 0 (precise), probably never executed
;;  prev block 133, next block 135, flags: (RTL)
;;  pred:       128 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1386 1101 1389 134 523 (nil) [1 uses])
(note 1389 1386 1387 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1387 1389 1104 134 (set (reg:DI 553)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
;;  succ:       135 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 135, loop depth 0, count 0 (precise), probably never executed
;;  prev block 134, next block 136, flags: (RTL)
;;  pred:       134 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 1104 1387 1105 135 490 (nil) [0 uses])
(note 1105 1104 1106 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1106 1105 1107 135 (set (reg/f:DI 187 [ _211 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -256 [0xffffffffffffff00])) [54 MEM[(struct py_function_impl_base * &)_900]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 1107 1106 1108 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 187 [ _211 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1108 1107 1109 135 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1114)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 1114)
;;  succ:       136 [never]  count:0 (precise) (FALLTHRU)
;;              137 [never]  count:0 (precise)

;; basic block 136, loop depth 0, count 0 (precise), probably never executed
;;  prev block 135, next block 137, flags: (RTL)
;;  pred:       135 [never]  count:0 (precise) (FALLTHRU)
(note 1109 1108 1110 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1110 1109 1111 136 (set (reg/f:DI 551)
        (mem/f:DI (reg/f:DI 187 [ _211 ]) [5 _211->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 1111 1110 1112 136 (set (reg/f:DI 552)
        (mem/f:DI (plus:DI (reg/f:DI 551)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_212 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 1112 1111 1113 136 (set (reg:DI 5 di)
        (reg/f:DI 187 [ _211 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 1113 1112 1114 136 (call (mem:QI (reg/f:DI 552) [0 *OBJ_TYPE_REF(_213;_211->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       137 [never]  count:0 (precise) (FALLTHRU)

;; basic block 137, loop depth 0, count 0 (precise), probably never executed
;;  prev block 136, next block 138, flags: (RTL)
;;  pred:       135 [never]  count:0 (precise)
;;              136 [never]  count:0 (precise) (FALLTHRU)
(code_label 1114 1113 1115 137 491 (nil) [1 uses])
(note 1115 1114 1116 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1116 1115 1121 137 (set (reg:DI 376)
        (reg:DI 553)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 138, loop depth 0, count 1069454592 (estimated locally), maybe hot
;;  prev block 137, next block 139, flags: (RTL)
;;  pred:       133 [always (adjusted)]  count:1069454592 (estimated locally) (FALLTHRU)
(note 1121 1116 1122 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1122 1121 1123 138 (parallel [
            (set (reg:DI 555)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 1123 1122 1124 138 (parallel [
            (set (reg:DI 214 [ _469 ])
                (plus:DI (reg:DI 555)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 1124 1123 1125 138 (parallel [
            (set (reg:DI 557)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -864 [0xfffffffffffffca0])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 1125 1124 1126 138 (set (reg:V2DI 556)
        (vec_concat:V2DI (reg:DI 557)
            (reg:DI 214 [ _469 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 1126 1125 1127 138 (set (reg:V2DI 122 [ _108 ])
        (reg:V2DI 556)) 1439 {movv2di_internal}
     (nil))
(insn 1127 1126 1128 138 (set (reg:V2DI 558)
        (vec_duplicate:V2DI (reg:DI 214 [ _469 ]))) 5014 {*vec_dupv2di}
     (nil))
(insn 1128 1127 1129 138 (set (reg:V2DI 84 [ _11 ])
        (reg:V2DI 558)) 1439 {movv2di_internal}
     (nil))
(insn 1129 1128 1130 138 (set (reg/f:DI 190 [ _214 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -872 [0xfffffffffffffc98])) [31 D.329851.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 1130 1129 1133 138 (set (reg:DI 191 [ _215 ])
        (mem:DI (reg/f:DI 190 [ _214 ]) [7 MEM[(const struct PyObject *)_214].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 1133 1130 1134 138 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 191 [ _215 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1134 1133 1135 138 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 279)
;;  succ:       139 [100.0% (guessed)]  count:1069026811 (estimated locally) (FALLTHRU)
;;              18 [0.0% (guessed)]  count:427781 (estimated locally)

;; basic block 139, loop depth 0, count 1069026811 (estimated locally), maybe hot
;;  prev block 138, next block 140, flags: (RTL)
;;  pred:       138 [100.0% (guessed)]  count:1069026811 (estimated locally) (FALLTHRU)
(note 1135 1134 1136 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1136 1135 1137 139 (parallel [
            (set (reg:DI 192 [ _216 ])
                (plus:DI (reg:DI 191 [ _215 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 1137 1136 1138 139 (set (mem:DI (reg/f:DI 190 [ _214 ]) [7 _214->ob_refcnt+0 S8 A64])
        (reg:DI 192 [ _216 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 1138 1137 1139 139 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 192 [ _216 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1139 1138 1140 139 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1143)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 1143)
;;  succ:       141 [67.0% (guessed)]  count:716247965 (estimated locally)
;;              140 [33.0% (guessed)]  count:352778846 (estimated locally) (FALLTHRU)

;; basic block 140, loop depth 0, count 352778846 (estimated locally), maybe hot
;;  prev block 139, next block 141, flags: (RTL)
;;  pred:       139 [33.0% (guessed)]  count:352778846 (estimated locally) (FALLTHRU)
(note 1140 1139 1141 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 1141 1140 1142 140 (set (reg:DI 5 di)
        (reg/f:DI 190 [ _214 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 1142 1141 1143 140 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -46 [0xffffffffffffffd2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       141 [always]  count:352778846 (estimated locally) (FALLTHRU)

;; basic block 141, loop depth 0, count 1069026812 (estimated locally), maybe hot
;;  prev block 140, next block 142, flags: (RTL)
;;  pred:       139 [67.0% (guessed)]  count:716247965 (estimated locally)
;;              140 [always]  count:352778846 (estimated locally) (FALLTHRU)
(code_label 1143 1142 1144 141 492 (nil) [1 uses])
(note 1144 1143 1145 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1145 1144 1146 141 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -864 [0xfffffffffffffca0])) [6 D.329873+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":233:30 74 {*movdi_internal}
     (nil))
(insn 1146 1145 1147 141 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 MEM <vector(2) long unsigned int> [(void *)_906]+0 S16 A128])
        (reg:V2DI 122 [ _108 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 1147 1146 1148 141 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 MEM <vector(2) long unsigned int> [(void *)_906]+0 S16 A128])
        (reg:V2DI 84 [ _11 ])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":301:7 1439 {movv2di_internal}
     (nil))
(insn 1148 1147 1149 141 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [6 MEM[(struct cons *)_906].head+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":309:7 74 {*movdi_internal}
     (nil))
(insn 1149 1148 1150 141 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 MEM[(struct cons *)_906].head.__pfn+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 1150 1149 1151 141 (set (mem/j/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(struct cons *)_906].head.__delta+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/tuple/detail/tuple_basic.hpp":391:5 74 {*movdi_internal}
     (nil))
(insn 1151 1150 1152 141 (set (reg:V2DI 559)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 1152 1151 1153 141 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [134 MEM[(struct pair *)_903]+0 S16 A128])
        (reg:V2DI 559)) "/usr/include/boost/python/make_function.hpp":144:19 1439 {movv2di_internal}
     (nil))
(insn 1153 1152 1154 141 (set (reg:DI 5 di)
        (const_int 24 [0x18])) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(call_insn 1154 1153 1306 141 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/py_function.hpp":124:18 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              142 [always (adjusted)]  count:1069026812 (estimated locally) (FALLTHRU)

;; basic block 142, loop depth 0, count 1069026812 (estimated locally), maybe hot
;;  prev block 141, next block 143, flags: (RTL)
;;  pred:       141 [always (adjusted)]  count:1069026812 (estimated locally) (FALLTHRU)
(note 1306 1154 1155 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1155 1306 1156 142 (set (reg/f:DI 560)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 560)
        (nil)))
(insn 1156 1155 1170 142 (set (reg/f:DI 193 [ _223 ])
        (reg/f:DI 560)) "/usr/include/boost/python/object/py_function.hpp":124:18 74 {*movdi_internal}
     (nil))
(insn 1170 1156 1171 142 (set (reg:DI 565)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE")  <var_decl 0x7f1a35bc4d80 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 1171 1170 1172 142 (set (reg/f:DI 564)
        (plus:DI (reg:DI 565)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/py_function.hpp":33:26 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE")  <var_decl 0x7f1a35bc4d80 _ZTVN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFivENS0_21default_call_policiesENS_3mpl7vector2IiRS5_EEEEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 1172 1171 1173 142 (set (mem/f:DI (reg/f:DI 193 [ _223 ]) [5 MEM[(struct caller_py_function_impl *)_223].D.294603._vptr.py_function_impl_base+0 S8 A64])
        (reg/f:DI 564)) "/usr/include/boost/python/object/py_function.hpp":33:26 74 {*movdi_internal}
     (nil))
(insn 1173 1172 1174 142 (set (reg:DI 567)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZN15ChineseCheckers19get_who_is_to_play_Ev") [flags 0x41]  <function_decl 0x7f1a37307500 get_who_is_to_play_>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 1174 1173 1175 142 (set (reg/f:DI 566)
        (reg:DI 567)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZN15ChineseCheckers19get_who_is_to_play_Ev") [flags 0x41]  <function_decl 0x7f1a37307500 get_who_is_to_play_>)
        (nil)))
(insn 1175 1174 1176 142 (set (mem/f:DI (plus:DI (reg/f:DI 193 [ _223 ])
                (const_int 8 [0x8])) [55 MEM <int ChineseCheckers::<T285c5> (struct ChineseCheckers *) *> [(struct caller_py_function_impl *)_223 + 8B]+0 S8 A64])
        (reg/f:DI 566)) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 1176 1175 1177 142 (set (mem:DI (plus:DI (reg/f:DI 193 [ _223 ])
                (const_int 16 [0x10])) [55 MEM <long int> [(struct caller_py_function_impl *)_223 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":33:11 74 {*movdi_internal}
     (nil))
(insn 1177 1176 1178 142 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -256 [0xffffffffffffff00])) [54 MEM[(struct py_function_impl_base * &)_900]+0 S8 A128])
        (reg/f:DI 193 [ _223 ])) "/usr/include/c++/11/bits/unique_ptr.h":155:56 74 {*movdi_internal}
     (nil))
(insn 1178 1177 1179 142 (parallel [
            (set (reg:DI 568)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -856 [0xfffffffffffffca8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 1179 1178 1180 142 (parallel [
            (set (reg:DI 569)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 1180 1179 1181 142 (parallel [
            (set (reg:DI 570)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/make_function.hpp":62:13 210 {*adddi_1}
     (nil))
(insn 1181 1180 1182 142 (set (reg:DI 1 dx)
        (reg:DI 569)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 1182 1181 1183 142 (set (reg:DI 4 si)
        (reg:DI 570)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(insn 1183 1182 1184 142 (set (reg:DI 5 di)
        (reg:DI 568)) "/usr/include/boost/python/make_function.hpp":62:13 74 {*movdi_internal}
     (nil))
(call_insn 1184 1183 1382 142 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>) [0 function_object S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/make_function.hpp":62:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 35 [0x23])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects15function_objectERKNS1_11py_functionERKSt4pairIPKNS0_6detail7keywordES9_E") [flags 0x41]  <function_decl 0x7f1a39530000 function_object>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       145 [always]  count:1069026812 (estimated locally) (FALLTHRU)
;;              148 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 143, loop depth 0, count 0 (precise), probably never executed
;;  prev block 142, next block 144, flags: (RTL)
;;  pred:       133 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1382 1184 1385 143 522 (nil) [1 uses])
(note 1385 1382 1383 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1383 1385 1159 143 (set (reg:DI 562)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       144 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 144, loop depth 0, count 0 (precise), probably never executed
;;  prev block 143, next block 145, flags: (RTL)
;;  pred:       143 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 1159 1383 1160 144 494 (nil) [0 uses])
(note 1160 1159 1161 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1161 1160 1162 144 (parallel [
            (set (reg:DI 561)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -872 [0xfffffffffffffc98])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 1162 1161 1163 144 (set (reg:DI 5 di)
        (reg:DI 561)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 1163 1162 1164 144 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1164 1163 1185 144 (set (reg:DI 376)
        (reg:DI 562)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 145, loop depth 0, count 1069026812 (estimated locally), maybe hot
;;  prev block 144, next block 146, flags: (RTL)
;;  pred:       142 [always]  count:1069026812 (estimated locally) (FALLTHRU)
(note 1185 1164 1186 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1186 1185 1187 145 (set (reg/f:DI 194 [ _224 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -256 [0xffffffffffffff00])) [54 MEM[(struct py_function_impl_base * &)_900]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 1187 1186 1188 145 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 194 [ _224 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1188 1187 1189 145 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1194)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 1194)
;;  succ:       146 [70.0% (guessed)]  count:748318772 (estimated locally) (FALLTHRU)
;;              147 [30.0% (guessed)]  count:320708040 (estimated locally)

;; basic block 146, loop depth 0, count 748318772 (estimated locally), maybe hot
;;  prev block 145, next block 147, flags: (RTL)
;;  pred:       145 [70.0% (guessed)]  count:748318772 (estimated locally) (FALLTHRU)
(note 1189 1188 1190 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 1190 1189 1191 146 (set (reg/f:DI 571)
        (mem/f:DI (reg/f:DI 194 [ _224 ]) [5 _224->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 1191 1190 1192 146 (set (reg/f:DI 572)
        (mem/f:DI (plus:DI (reg/f:DI 571)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_225 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 1192 1191 1193 146 (set (reg:DI 5 di)
        (reg/f:DI 194 [ _224 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 1193 1192 1194 146 (call (mem:QI (reg/f:DI 572) [0 *OBJ_TYPE_REF(_226;_224->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       147 [always]  count:748318772 (estimated locally) (FALLTHRU)

;; basic block 147, loop depth 0, count 1069026812 (estimated locally), maybe hot
;;  prev block 146, next block 148, flags: (RTL)
;;  pred:       145 [30.0% (guessed)]  count:320708040 (estimated locally)
;;              146 [always]  count:748318772 (estimated locally) (FALLTHRU)
(code_label 1194 1193 1195 147 495 (nil) [1 uses])
(note 1195 1194 1196 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1196 1195 1197 147 (parallel [
            (set (reg:DI 573)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -856 [0xfffffffffffffca8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 1197 1196 1198 147 (parallel [
            (set (reg:DI 574)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/class.hpp":490:34 210 {*adddi_1}
     (nil))
(insn 1198 1197 1199 147 (set (reg:DI 2 cx)
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 1199 1198 1200 147 (set (reg:DI 1 dx)
        (reg:DI 573)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 1200 1199 1201 147 (set (reg:DI 575)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f1a339cc5a0 *.LC19>)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(insn 1201 1200 1202 147 (set (reg:DI 4 si)
        (reg:DI 575)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f1a339cc5a0 *.LC19>)
        (nil)))
(insn 1202 1201 1203 147 (set (reg:DI 5 di)
        (reg:DI 574)) "/usr/include/boost/python/class.hpp":490:34 74 {*movdi_internal}
     (nil))
(call_insn 1203 1202 1394 147 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>) [0 add_to_namespace S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/class.hpp":490:34 813 {*call}
     (expr_list:REG_EH_REGION (const_int 34 [0x22])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects16add_to_namespaceERKNS0_3api6objectEPKcS5_S7_") [flags 0x41]  <function_decl 0x7f1a39c34f00 add_to_namespace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       156 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              152 [always (adjusted)]  count:1069026812 (estimated locally) (FALLTHRU)

;; basic block 148, loop depth 0, count 0 (precise), probably never executed
;;  prev block 147, next block 149, flags: (RTL)
;;  pred:       142 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1394 1203 1397 148 525 (nil) [1 uses])
(note 1397 1394 1395 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1395 1397 1206 148 (set (reg:DI 578)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
;;  succ:       149 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 149, loop depth 0, count 0 (precise), probably never executed
;;  prev block 148, next block 150, flags: (RTL)
;;  pred:       148 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 1206 1395 1207 149 497 (nil) [0 uses])
(note 1207 1206 1208 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1208 1207 1209 149 (set (reg/f:DI 197 [ _227 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -256 [0xffffffffffffff00])) [54 MEM[(struct py_function_impl_base * &)_900]+0 S8 A128])) "/usr/include/c++/11/bits/unique_ptr.h":360:12 74 {*movdi_internal}
     (nil))
(insn 1209 1208 1210 149 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 197 [ _227 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1210 1209 1211 149 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1216)
            (pc))) "/usr/include/c++/11/bits/unique_ptr.h":360:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 1216)
;;  succ:       150 [never]  count:0 (precise) (FALLTHRU)
;;              151 [never]  count:0 (precise)

;; basic block 150, loop depth 0, count 0 (precise), probably never executed
;;  prev block 149, next block 151, flags: (RTL)
;;  pred:       149 [never]  count:0 (precise) (FALLTHRU)
(note 1211 1210 1212 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1212 1211 1213 150 (set (reg/f:DI 576)
        (mem/f:DI (reg/f:DI 197 [ _227 ]) [5 _227->_vptr.py_function_impl_base+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 1213 1212 1214 150 (set (reg/f:DI 577)
        (mem/f:DI (plus:DI (reg/f:DI 576)
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_228 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(insn 1214 1213 1215 150 (set (reg:DI 5 di)
        (reg/f:DI 197 [ _227 ])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 74 {*movdi_internal}
     (nil))
(call_insn 1215 1214 1216 150 (call (mem:QI (reg/f:DI 577) [0 *OBJ_TYPE_REF(_229;_227->1) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/unique_ptr.h":85:2 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       151 [never]  count:0 (precise) (FALLTHRU)

;; basic block 151, loop depth 0, count 0 (precise), probably never executed
;;  prev block 150, next block 152, flags: (RTL)
;;  pred:       149 [never]  count:0 (precise)
;;              150 [never]  count:0 (precise) (FALLTHRU)
(code_label 1216 1215 1217 151 498 (nil) [1 uses])
(note 1217 1216 1218 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1218 1217 1223 151 (set (reg:DI 376)
        (reg:DI 578)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 152, loop depth 0, count 1069026812 (estimated locally), maybe hot
;;  prev block 151, next block 153, flags: (RTL)
;;  pred:       147 [always (adjusted)]  count:1069026812 (estimated locally) (FALLTHRU)
(note 1223 1218 1224 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1224 1223 1225 152 (set (reg/f:DI 200 [ _230 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -856 [0xfffffffffffffca8])) [31 D.329884.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 1225 1224 1228 152 (set (reg:DI 201 [ _231 ])
        (mem:DI (reg/f:DI 200 [ _230 ]) [7 MEM[(const struct PyObject *)_230].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 1228 1225 1229 152 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 201 [ _231 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1229 1228 1230 152 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 279)
;;  succ:       153 [100.0% (guessed)]  count:1068599202 (estimated locally) (FALLTHRU)
;;              18 [0.0% (guessed)]  count:427610 (estimated locally)

;; basic block 153, loop depth 0, count 1068599202 (estimated locally), maybe hot
;;  prev block 152, next block 154, flags: (RTL)
;;  pred:       152 [100.0% (guessed)]  count:1068599202 (estimated locally) (FALLTHRU)
(note 1230 1229 1231 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 1231 1230 1232 153 (parallel [
            (set (reg:DI 202 [ _232 ])
                (plus:DI (reg:DI 201 [ _231 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 1232 1231 1233 153 (set (mem:DI (reg/f:DI 200 [ _230 ]) [7 _230->ob_refcnt+0 S8 A64])
        (reg:DI 202 [ _232 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 1233 1232 1234 153 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 202 [ _232 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1234 1233 1235 153 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1238)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 1238)
;;  succ:       155 [67.0% (guessed)]  count:715961467 (estimated locally)
;;              154 [33.0% (guessed)]  count:352637735 (estimated locally) (FALLTHRU)

;; basic block 154, loop depth 0, count 352637735 (estimated locally), maybe hot
;;  prev block 153, next block 155, flags: (RTL)
;;  pred:       153 [33.0% (guessed)]  count:352637735 (estimated locally) (FALLTHRU)
(note 1235 1234 1236 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 1236 1235 1237 154 (set (reg:DI 5 di)
        (reg/f:DI 200 [ _230 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 1237 1236 1238 154 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -50 [0xffffffffffffffce])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       155 [always]  count:352637735 (estimated locally) (FALLTHRU)

;; basic block 155, loop depth 0, count 1068599203 (estimated locally), maybe hot
;;  prev block 154, next block 156, flags: (RTL)
;;  pred:       153 [67.0% (guessed)]  count:715961467 (estimated locally)
;;              154 [always]  count:352637735 (estimated locally) (FALLTHRU)
(code_label 1238 1237 1239 155 499 (nil) [1 uses])
(note 1239 1238 1240 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 1240 1239 1241 155 (set (reg/f:DI 203 [ _233 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1032 [0xfffffffffffffbf8])) [31 D.264960.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 1241 1240 1244 155 (set (reg:DI 204 [ _234 ])
        (mem:DI (reg/f:DI 203 [ _233 ]) [7 MEM[(const struct PyObject *)_233].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 1244 1241 1245 155 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 204 [ _234 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1245 1244 1390 155 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1258)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 1258)
;;  succ:       158 [100.0% (guessed)]  count:1068171764 (estimated locally)
;;              18 [0.0% (guessed)]  count:427439 (estimated locally) (FALLTHRU)

;; basic block 156, loop depth 0, count 0 (precise), probably never executed
;;  prev block 155, next block 157, flags: (RTL)
;;  pred:       147 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1390 1245 1393 156 524 (nil) [1 uses])
(note 1393 1390 1391 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 1391 1393 1249 156 (set (reg:DI 581)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       157 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 157, loop depth 0, count 0 (precise), probably never executed
;;  prev block 156, next block 158, flags: (RTL)
;;  pred:       156 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 1249 1391 1250 157 501 (nil) [0 uses])
(note 1250 1249 1251 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1251 1250 1252 157 (parallel [
            (set (reg:DI 580)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -856 [0xfffffffffffffca8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 1252 1251 1253 157 (set (reg:DI 5 di)
        (reg:DI 580)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 1253 1252 1254 157 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1254 1253 1258 157 (set (reg:DI 376)
        (reg:DI 581)) 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU)

;; basic block 158, loop depth 0, count 1068171764 (estimated locally), maybe hot
;;  prev block 157, next block 159, flags: (RTL)
;;  pred:       155 [100.0% (guessed)]  count:1068171764 (estimated locally)
(code_label 1258 1254 1259 158 500 (nil) [1 uses])
(note 1259 1258 1260 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 1260 1259 1261 158 (parallel [
            (set (reg:DI 205 [ _235 ])
                (plus:DI (reg:DI 204 [ _234 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 1261 1260 1262 158 (set (mem:DI (reg/f:DI 203 [ _233 ]) [7 _233->ob_refcnt+0 S8 A64])
        (reg:DI 205 [ _235 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 1262 1261 1263 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 205 [ _235 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1263 1262 1264 158 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1280)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 1280)
;;  succ:       162 [67.0% (guessed)]  count:715675084 (estimated locally)
;;              159 [33.0% (guessed)]  count:352496680 (estimated locally) (FALLTHRU)

;; basic block 159, loop depth 0, count 352496680 (estimated locally), maybe hot
;;  prev block 158, next block 160, flags: (RTL)
;;  pred:       158 [33.0% (guessed)]  count:352496680 (estimated locally) (FALLTHRU)
(note 1264 1263 1265 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1265 1264 1266 159 (set (reg:DI 5 di)
        (reg/f:DI 203 [ _233 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 1266 1265 1310 159 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -51 [0xffffffffffffffcd])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       162 [always]  count:352496680 (estimated locally) (FALLTHRU)

;; basic block 160, loop depth 0, count 0 (precise), probably never executed
;;  prev block 159, next block 161, flags: (RTL)
;;  pred:       29 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              43 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              57 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              71 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              85 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              99 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              113 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              127 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              141 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 1310 1266 1313 160 504 (nil) [1 uses])
(note 1313 1310 1311 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1311 1313 1271 160 (set (reg:DI 376)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       161 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 161, loop depth 0, count 0 (precise), probably never executed
;;  prev block 160, next block 162, flags: (RTL)
;;  pred:       46 [always]  count:0 (precise) (FALLTHRU)
;;              88 [always]  count:0 (precise) (FALLTHRU)
;;              39 [always]  count:0 (precise) (FALLTHRU)
;;              60 [always]  count:0 (precise) (FALLTHRU)
;;              102 [always]  count:0 (precise) (FALLTHRU)
;;              53 [always]  count:0 (precise) (FALLTHRU)
;;              74 [always]  count:0 (precise) (FALLTHRU)
;;              81 [always]  count:0 (precise) (FALLTHRU)
;;              67 [always]  count:0 (precise) (FALLTHRU)
;;              151 [always]  count:0 (precise) (FALLTHRU)
;;              109 [always]  count:0 (precise) (FALLTHRU)
;;              157 [always]  count:0 (precise) (FALLTHRU)
;;              137 [always]  count:0 (precise) (FALLTHRU)
;;              95 [always]  count:0 (precise) (FALLTHRU)
;;              144 [always]  count:0 (precise) (FALLTHRU)
;;              123 [always]  count:0 (precise) (FALLTHRU)
;;              116 [always]  count:0 (precise) (FALLTHRU)
;;              130 [always]  count:0 (precise) (FALLTHRU)
;;              160 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 1271 1311 1272 161 442 (nil) [0 uses])
(note 1272 1271 1273 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1273 1272 1274 161 (parallel [
            (set (reg:DI 583)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1032 [0xfffffffffffffbf8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 1274 1273 1275 161 (set (reg:DI 5 di)
        (reg:DI 583)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 1275 1274 1276 161 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1276 1275 1277 161 (set (reg/f:DI 207 [ D.330011 ])
        (reg:DI 376)) 74 {*movdi_internal}
     (nil))
(insn 1277 1276 1278 161 (set (reg:DI 5 di)
        (reg/f:DI 207 [ D.330011 ])) 74 {*movdi_internal}
     (nil))
(call_insn 1278 1277 1280 161 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 162, loop depth 0, count 1068171764 (estimated locally), maybe hot
;;  prev block 161, next block 163, flags: (RTL)
;;  pred:       159 [always]  count:352496680 (estimated locally) (FALLTHRU)
;;              158 [67.0% (guessed)]  count:715675084 (estimated locally)
(code_label 1280 1278 1287 162 424 (nil) [1 uses])
(note 1287 1280 1281 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1281 1287 1282 162 (set (reg/f:DI 584)
        (const_int 40 [0x28])) "src/ChineseCheckersWrapper.cpp":143:1 74 {*movdi_internal}
     (nil))
(insn 1282 1281 1283 162 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.330013+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 584) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "src/ChineseCheckersWrapper.cpp":143:1 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 1283 1282 1308 162 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1286)
            (pc))) "src/ChineseCheckersWrapper.cpp":143:1 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 1286)
;;  succ:       164 [100.0% (guessed)]  count:1067744496 (estimated locally)
;;              163 [0.0% (guessed)]  count:427268 (estimated locally) (FALLTHRU)

;; basic block 163, loop depth 0, count 427268 (estimated locally)
;;  prev block 162, next block 164, flags: (RTL)
;;  pred:       162 [0.0% (guessed)]  count:427268 (estimated locally) (FALLTHRU)
(note 1308 1283 1284 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(call_insn 1284 1308 1286 163 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":143:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 164, loop depth 0, count 1067744496 (estimated locally), maybe hot
;;  prev block 163, next block 1, flags: (RTL)
;;  pred:       162 [100.0% (guessed)]  count:1067744496 (estimated locally)
(code_label 1286 1284 1309 164 503 (nil) [1 uses])
(note 1309 1286 0 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:1067744496 (estimated locally) (FALLTHRU)


;; Function vector_of_vector_of_positiontype_to_list::convert (_ZN40vector_of_vector_of_positiontype_to_list7convertERKSt6vectorIS0_IS0_IiSaIiEESaIS2_EESaIS4_EE, funcdef_no=11093, decl_uid=261739, cgraph_uid=2988, symbol_order=3881)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 2351804 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:2351804 (estimated locally) (FALLTHRU)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 145 [ position_colors_players_ ])
        (reg:DI 5 di [ position_colors_players_ ])) "src/ChineseCheckersWrapper.cpp":101:22 74 {*movdi_internal}
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 5 2 (set (reg/f:DI 146)
        (const_int 40 [0x28])) "src/ChineseCheckersWrapper.cpp":101:22 74 {*movdi_internal}
     (nil))
(insn 5 4 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.330133+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 146) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":101:22 1159 {stack_protect_set_1_di}
     (nil))
(insn 10 5 11 2 (set (reg:DI 5 di)
        (const_int 8 [0x8])) "src/ChineseCheckersWrapper.cpp":103:43 74 {*movdi_internal}
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "src/ChineseCheckersWrapper.cpp":103:43 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 147)
        (reg:DI 0 ax)) "src/ChineseCheckersWrapper.cpp":103:43 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 147)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 82 [ _10 ])
        (reg/f:DI 147)) "src/ChineseCheckersWrapper.cpp":103:43 74 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 84 [ _15 ])
        (reg/f:DI 82 [ _10 ])) "/usr/include/boost/python/list.hpp":61:12 74 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _15 ])) "/usr/include/boost/python/list.hpp":61:12 74 {*movdi_internal}
     (nil))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail9list_baseC2Ev") [flags 0x41]  <function_decl 0x7f1a39199600 __ct_base >) [0 __ct_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/list.hpp":61:12 813 {*call}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail9list_baseC2Ev") [flags 0x41]  <function_decl 0x7f1a39199600 __ct_base >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  count:2351804 (estimated locally) (FALLTHRU)
;;              70 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 3, loop depth 0, count 2351804 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [always]  count:2351804 (estimated locally) (FALLTHRU)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg/f:DI 85 [ _17 ])
        (mem/f:DI (reg/v/f:DI 145 [ position_colors_players_ ]) [121 MEM[(const struct vector * const &)position_colors_players__13(D)]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg/f:DI 83 [ _14 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 145 [ position_colors_players_ ])
                (const_int 8 [0x8])) [121 MEM[(const struct vector * const &)position_colors_players__13(D) + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ _14 ])
            (reg/f:DI 85 [ _17 ]))) "src/ChineseCheckersWrapper.cpp":104:51 12 {*cmpdi_1}
     (nil))
(jump_insn 21 20 375 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "src/ChineseCheckersWrapper.cpp":104:51 806 {*jcc}
     (int_list:REG_BR_PROB 1034442876 (nil))
 -> 27)
;;  succ:       5 [96.3% (guessed)]  count:2265728 (estimated locally)
;;              4 [3.7% (guessed)]  count:86076 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 139534 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [3.7% (guessed)]  count:86076 (estimated locally) (FALLTHRU)
;;              68 [3.7% (guessed)]  count:35817 (estimated locally)
;;              67 [3.7% (guessed)]  count:17641 (estimated locally) (FALLTHRU)
(code_label 375 21 22 4 664 (nil) [1 uses])
(note 22 375 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:DI 144 [ <retval> ])
        (mem/f:DI (reg/f:DI 82 [ _10 ]) [31 MEM[(const struct object_base *)_10].m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":440:12 74 {*movdi_internal}
     (nil))
(insn 24 23 467 4 (parallel [
            (set (mem:DI (reg/f:DI 144 [ <retval> ]) [7 _52->ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 144 [ <retval> ]) [7 _52->ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 467 24 468 4 (set (reg/f:DI 197)
        (const_int 40 [0x28])) "src/ChineseCheckersWrapper.cpp":115:5 74 {*movdi_internal}
     (nil))
(insn 468 467 469 4 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.330133+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 197) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "src/ChineseCheckersWrapper.cpp":115:5 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 469 468 27 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 472)
            (pc))) "src/ChineseCheckersWrapper.cpp":115:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 472)
;;  succ:       86 [100.0% (guessed)]  count:139478 (estimated locally)
;;              85 [0.0% (guessed)]  count:56 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 2265728 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3 [96.3% (guessed)]  count:2265728 (estimated locally)
(code_label 27 469 28 5 632 (nil) [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 386 5 (set (reg:DI 135 [ ivtmp.2217 ])
        (reg/f:DI 85 [ _17 ])) 74 {*movdi_internal}
     (nil))
;;  succ:       6 [always]  count:2265728 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 1, count 3672883 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       69 [always]  count:1407156 (estimated locally) (FALLTHRU)
;;              5 [always]  count:2265728 (estimated locally) (FALLTHRU)
(code_label 386 29 30 6 665 (nil) [0 uses])
(note 30 386 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":61:12 210 {*adddi_1}
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg:DI 149)) "/usr/include/boost/python/list.hpp":61:12 74 {*movdi_internal}
     (nil))
(call_insn 33 32 34 6 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail9list_baseC2Ev") [flags 0x41]  <function_decl 0x7f1a39199600 __ct_base >) [0 __ct_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/list.hpp":61:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail9list_baseC2Ev") [flags 0x41]  <function_decl 0x7f1a39199600 __ct_base >)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 34 33 35 6 (set (reg/f:DI 138 [ _245 ])
        (reg:DI 135 [ ivtmp.2217 ])) 74 {*movdi_internal}
     (nil))
(insn 35 34 36 6 (set (reg/f:DI 88 [ _31 ])
        (mem/f:DI (reg/f:DI 138 [ _245 ]) [124 MEM[(const struct vector * const &)_245]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 36 35 37 6 (set (reg/f:DI 87 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 138 [ _245 ])
                (const_int 8 [0x8])) [124 MEM[(const struct vector * const &)_245 + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _30 ])
            (reg/f:DI 88 [ _31 ]))) "src/ChineseCheckersWrapper.cpp":106:39 12 {*cmpdi_1}
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) "src/ChineseCheckersWrapper.cpp":106:39 806 {*jcc}
     (int_list:REG_BR_PROB 39298956 (nil))
 -> 319)
;;  succ:       7 [96.3% (guessed)]  count:3538455 (estimated locally) (FALLTHRU)
;;              59 [3.7% (guessed)]  count:134428 (estimated locally)

;; basic block 7, loop depth 1, count 3538455 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [96.3% (guessed)]  count:3538455 (estimated locally) (FALLTHRU)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 436 7 (set (reg:DI 95 [ ivtmp.2211 ])
        (reg/f:DI 88 [ _31 ])) 74 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:3538455 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 2, count 38477636 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       81 [always]  count:34939180 (estimated locally) (FALLTHRU)
;;              7 [always]  count:3538455 (estimated locally) (FALLTHRU)
(code_label 436 40 41 8 669 (nil) [0 uses])
(note 41 436 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg/f:DI 86 [ _18 ])
        (reg:DI 95 [ ivtmp.2211 ])) 74 {*movdi_internal}
     (nil))
(insn 43 42 44 8 (set (reg/f:DI 97 [ _82 ])
        (mem/f:DI (plus:DI (reg/f:DI 86 [ _18 ])
                (const_int 8 [0x8])) [142 MEM[(int * *)_18 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:40 74 {*movdi_internal}
     (nil))
(insn 44 43 45 8 (set (reg/f:DI 98 [ _83 ])
        (mem/f:DI (reg/f:DI 86 [ _18 ]) [142 MEM[(int * *)_18]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:66 74 {*movdi_internal}
     (nil))
(insn 45 44 46 8 (parallel [
            (set (reg:DI 99 [ _84 ])
                (minus:DI (reg/f:DI 97 [ _82 ])
                    (reg/f:DI 98 [ _83 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (nil))
(insn 46 45 47 8 (set (reg:DI 139 [ _248 ])
        (reg:DI 99 [ _84 ])) 74 {*movdi_internal}
     (nil))
(insn 47 46 48 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 99 [ _84 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 48 47 49 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 479)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 479)
;;  succ:       9 [54.7% (guessed)]  count:21035724 (estimated locally) (FALLTHRU)
;;              15 [45.3% (guessed)]  count:17441912 (estimated locally)

;; basic block 9, loop depth 2, count 21035723 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [54.7% (guessed)]  count:21035724 (estimated locally) (FALLTHRU)
(note 49 48 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 49 53 9 (set (reg:DI 150)
        (const_int 9223372036854775804 [0x7ffffffffffffffc])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 53 52 54 9 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 139 [ _248 ])
            (reg:DI 150))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 67)
;;  succ:       10 [10.0% (guessed)]  count:2103572 (estimated locally) (FALLTHRU)
;;              13 [90.0% (guessed)]  count:18932151 (estimated locally)

;; basic block 10, loop depth 0, count 2103572 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [10.0% (guessed)]  count:2103572 (estimated locally) (FALLTHRU)
(note 55 54 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 55 59 10 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 99 [ _84 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 59 58 60 10 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 63)
;;  succ:       11 [50.0% (guessed)]  count:1051786 (estimated locally) (FALLTHRU)
;;              12 [50.0% (guessed)]  count:1051786 (estimated locally)

;; basic block 11, loop depth 0, count 1051786 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [50.0% (guessed)]  count:1051786 (estimated locally) (FALLTHRU)
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 61 60 63 11 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 7 [0x7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       78 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 12, loop depth 0, count 1051786 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       10 [50.0% (guessed)]  count:1051786 (estimated locally)
(code_label 63 61 64 12 636 (nil) [1 uses])
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 65 64 67 12 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 7 [0x7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       78 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 13, loop depth 2, count 18932151 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       9 [90.0% (guessed)]  count:18932151 (estimated locally)
(code_label 67 65 68 13 635 (nil) [1 uses])
(note 68 67 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 13 (set (reg:DI 5 di)
        (reg:DI 139 [ _248 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 70 69 480 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 7 [0x7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       78 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 [always (adjusted)]  count:18932151 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 2, count 18932151 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [always (adjusted)]  count:18932151 (estimated locally) (FALLTHRU)
(note 480 70 71 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 71 480 72 14 (set (reg/f:DI 151)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 151)
        (nil)))
(insn 72 71 74 14 (set (reg/f:DI 100 [ iftmp.9_96 ])
        (reg/f:DI 151)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 74 72 75 14 (set (reg/f:DI 97 [ _82 ])
        (mem/f:DI (plus:DI (reg/f:DI 86 [ _18 ])
                (const_int 8 [0x8])) [142 MEM[(const int * const &)_18 + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 75 74 76 14 (set (reg/f:DI 98 [ _83 ])
        (mem/f:DI (reg/f:DI 86 [ _18 ]) [142 MEM[(const int * const &)_18]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 76 75 77 14 (parallel [
            (set (reg:DI 99 [ _84 ])
                (minus:DI (reg/f:DI 97 [ _82 ])
                    (reg/f:DI 98 [ _83 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":429:34 283 {*subdi_1}
     (nil))
(insn 77 76 479 14 (set (reg:DI 133 [ prephitmp_156 ])
        (reg:DI 99 [ _84 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
;;  succ:       16 [always]  count:18932151 (estimated locally) (FALLTHRU)

;; basic block 15, loop depth 2, count 17441912 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       8 [45.3% (guessed)]  count:17441912 (estimated locally)
(code_label 479 77 478 15 675 (nil) [1 uses])
(note 478 479 6 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 6 478 7 15 (set (reg:DI 133 [ prephitmp_156 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 7 6 78 15 (set (reg/f:DI 100 [ iftmp.9_96 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       16 [always]  count:17441912 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 2, count 36374063 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [always]  count:17441912 (estimated locally) (FALLTHRU)
;;              14 [always]  count:18932151 (estimated locally) (FALLTHRU)
(code_label 78 7 79 16 634 (nil) [0 uses])
(note 79 78 80 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ _83 ])
            (reg/f:DI 97 [ _82 ]))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 12 {*cmpdi_1}
     (nil))
(jump_insn 81 80 82 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 87)
;;  succ:       17 [53.5% (guessed)]  count:19449211 (estimated locally) (FALLTHRU)
;;              18 [46.5% (guessed)]  count:16924852 (estimated locally)

;; basic block 17, loop depth 2, count 19449212 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [53.5% (guessed)]  count:19449211 (estimated locally) (FALLTHRU)
(note 82 81 83 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 17 (set (reg:DI 1 dx)
        (reg:DI 133 [ prephitmp_156 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 84 83 85 17 (set (reg:DI 4 si)
        (reg/f:DI 98 [ _83 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 85 84 86 17 (set (reg:DI 5 di)
        (reg/f:DI 100 [ iftmp.9_96 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(call_insn 86 85 87 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_algobase.h":431:23 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       18 [always]  count:19449212 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 2, count 36374063 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16 [46.5% (guessed)]  count:16924852 (estimated locally)
;;              17 [always]  count:19449212 (estimated locally) (FALLTHRU)
(code_label 87 86 88 18 637 (nil) [1 uses])
(note 88 87 89 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 18 (parallel [
            (set (reg:DI 152)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":61:12 210 {*adddi_1}
     (nil))
(insn 90 89 91 18 (set (reg:DI 5 di)
        (reg:DI 152)) "/usr/include/boost/python/list.hpp":61:12 74 {*movdi_internal}
     (nil))
(call_insn 91 90 92 18 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail9list_baseC2Ev") [flags 0x41]  <function_decl 0x7f1a39199600 __ct_base >) [0 __ct_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/list.hpp":61:12 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail9list_baseC2Ev") [flags 0x41]  <function_decl 0x7f1a39199600 __ct_base >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       19 [always]  count:36374063 (estimated locally) (FALLTHRU)
;;              74 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 19, loop depth 2, count 36374063 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [always]  count:36374063 (estimated locally) (FALLTHRU)
(note 92 91 93 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 133 [ prephitmp_156 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":1072:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 94 93 95 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1072:2 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 103)
;;  succ:       20 [0.0% (guessed)]  count:14550 (estimated locally) (FALLTHRU)
;;              21 [100.0% (guessed)]  count:36359513 (estimated locally)

;; basic block 20, loop depth 0, count 14550 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [0.0% (guessed)]  count:14550 (estimated locally) (FALLTHRU)
(note 95 94 96 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 20 (set (reg:DI 1 dx)
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1073:28 74 {*movdi_internal}
     (nil))
(insn 97 96 98 20 (set (reg:DI 4 si)
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1073:28 74 {*movdi_internal}
     (nil))
(insn 98 97 99 20 (set (reg:DI 153)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f1a33a89120 *.LC21>)) "/usr/include/c++/11/bits/stl_vector.h":1073:28 74 {*movdi_internal}
     (nil))
(insn 99 98 100 20 (set (reg:DI 5 di)
        (reg:DI 153)) "/usr/include/c++/11/bits/stl_vector.h":1073:28 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f1a33a89120 *.LC21>)
        (nil)))
(insn 100 99 101 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1073:28 77 {*movqi_internal}
     (nil))
(call_insn 101 100 103 20 (call (mem:QI (symbol_ref:DI ("_ZSt24__throw_out_of_range_fmtPKcz") [flags 0x41]  <function_decl 0x7f1a40e4a400 __throw_out_of_range_fmt>) [0 __throw_out_of_range_fmt S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1073:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 5 [0x5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt24__throw_out_of_range_fmtPKcz") [flags 0x41]  <function_decl 0x7f1a40e4a400 __throw_out_of_range_fmt>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       72 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 21, loop depth 2, count 36359514 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       19 [100.0% (guessed)]  count:36359513 (estimated locally)
(code_label 103 101 104 21 638 (nil) [1 uses])
(note 104 103 105 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 21 (set (reg:SI 155)
        (mem:SI (reg/f:DI 100 [ iftmp.9_96 ]) [35 MEM[(const int &)iftmp.9_96]+0 S4 A32])) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 75 {*movsi_internal}
     (nil))
(insn 106 105 107 21 (set (reg:DI 154)
        (sign_extend:DI (reg:SI 155))) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 147 {*extendsidi2_rex64}
     (nil))
(insn 107 106 108 21 (set (reg:DI 5 di)
        (reg:DI 154)) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 74 {*movdi_internal}
     (nil))
(call_insn 108 107 481 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyLong_FromLong") [flags 0x41]  <function_decl 0x7f1a40484b00 PyLong_FromLong>) [0 PyLong_FromLong S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 5 [0x5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("PyLong_FromLong") [flags 0x41]  <function_decl 0x7f1a40484b00 PyLong_FromLong>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       72 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 [always (adjusted)]  count:36359514 (estimated locally) (FALLTHRU)

;; basic block 22, loop depth 2, count 36359514 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 [always (adjusted)]  count:36359514 (estimated locally) (FALLTHRU)
(note 481 108 109 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 109 481 111 22 (set (reg/f:DI 103 [ _109 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 74 {*movdi_internal}
     (nil))
(insn 111 109 112 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 103 [ _109 ])
            (const_int 0 [0]))) "/usr/include/boost/python/errors.hpp":44:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 112 111 113 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 452)
            (pc))) "/usr/include/boost/python/errors.hpp":44:5 806 {*jcc}
     (int_list:REG_BR_PROB 886588628 (nil))
 -> 452)
;;  succ:       23 [17.4% (guessed)]  count:6337463 (estimated locally) (FALLTHRU)
;;              83 [82.6% (guessed)]  count:30022051 (estimated locally)

;; basic block 23, loop depth 0, count 6337463 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [17.4% (guessed)]  count:6337463 (estimated locally) (FALLTHRU)
(note 113 112 114 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(call_insn 114 113 115 23 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>) [0 throw_error_already_set S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/errors.hpp":45:32 813 {*call}
     (expr_list:REG_EH_REGION (const_int 5 [0x5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>)
            (nil)))
    (nil))
;;  succ:       24 [always]  count:6337463 (estimated locally) (FALLTHRU)
;;              72 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 24, loop depth 0, count 10907854 (estimated locally), maybe hot
;; Invalid sum of incoming counts 6337463 (estimated locally), should be 10907854 (estimated locally)
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 [always]  count:6337463 (estimated locally) (FALLTHRU)
(note 115 114 116 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 24 (set (reg/f:DI 156)
        (const_int 0 [0])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 117 116 118 24 (set (reg:DI 104 [ _110 ])
        (mem/v:DI (reg/f:DI 156) [7 MEM[(struct PyObject *)0B].ob_refcnt+0 S8 A128])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 118 117 120 24 (trap_if (const_int 1 [0x1])
        (const_int 6 [0x6])) 1153 {trap}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
;;  succ:      

;; basic block 25, loop depth 0, count 10170 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       82 [0.0% (guessed)]  count:10170 (estimated locally) (FALLTHRU)
(note 120 118 121 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 463 25 (set (mem:DI (reg/f:DI 110 [ _123 ]) [7 _123->ob_refcnt+0 S8 A64])
        (reg:DI 141 [ _261 ])) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
;;  succ:       26 [always]  count:10170 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 0, count 20351 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       84 [always]  count:10181 (estimated locally) (FALLTHRU)
;;              25 [always]  count:10170 (estimated locally) (FALLTHRU)
(code_label 463 121 122 26 673 (nil) [0 uses])
(note 122 463 123 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 26 (set (reg:DI 157)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 124 123 125 26 (set (reg:DI 2 cx)
        (reg:DI 157)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)
        (nil)))
(insn 125 124 126 26 (set (reg:SI 1 dx)
        (const_int 37 [0x25])) "/usr/include/boost/python/refcount.hpp":37:5 75 {*movsi_internal}
     (nil))
(insn 126 125 127 26 (set (reg:DI 158)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 127 126 128 26 (set (reg:DI 4 si)
        (reg:DI 158)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)
        (nil)))
(insn 128 127 129 26 (set (reg:DI 159)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 129 128 130 26 (set (reg:DI 5 di)
        (reg:DI 159)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)
        (nil)))
(call_insn 130 129 456 26 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/refcount.hpp":37:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 27, loop depth 2, count 25444533 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       83 [100.0% (guessed)]  count:25441479 (estimated locally)
(code_label 456 130 132 27 672 (nil) [1 uses])
(note 132 456 133 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 142 [ _264 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 134 133 135 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 138)
;;  succ:       29 [67.0% (guessed)]  count:17047837 (estimated locally)
;;              28 [33.0% (guessed)]  count:8396696 (estimated locally) (FALLTHRU)

;; basic block 28, loop depth 2, count 8396696 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 [33.0% (guessed)]  count:8396696 (estimated locally) (FALLTHRU)
(note 135 134 136 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 28 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _109 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 137 136 138 28 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -18 [0xffffffffffffffee])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       29 [always]  count:8396696 (estimated locally) (FALLTHRU)

;; basic block 29, loop depth 2, count 36349333 (estimated locally), maybe hot
;; Invalid sum of incoming counts 25444533 (estimated locally), should be 36349333 (estimated locally)
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 [always]  count:8396696 (estimated locally) (FALLTHRU)
;;              27 [67.0% (guessed)]  count:17047837 (estimated locally)
(code_label 138 137 139 29 640 (nil) [1 uses])
(note 139 138 140 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [31 MEM[(struct object_base *)&D.330054].m_ptr+0 S8 A64])
        (reg/f:DI 103 [ _109 ])) "/usr/include/boost/python/object_core.hpp":409:7 74 {*movdi_internal}
     (nil))
(insn 141 140 142 29 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":72:21 210 {*adddi_1}
     (nil))
(insn 142 141 143 29 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":72:21 210 {*adddi_1}
     (nil))
(insn 143 142 144 29 (set (reg:DI 4 si)
        (reg:DI 160)) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(insn 144 143 145 29 (set (reg:DI 5 di)
        (reg:DI 161)) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(call_insn 145 144 146 29 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>) [0 append S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/list.hpp":72:21 813 {*call}
     (expr_list:REG_EH_REGION (const_int 9 [0x9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       30 [always]  count:36349333 (estimated locally) (FALLTHRU)
;;              35 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 30, loop depth 2, count 36349333 (estimated locally), maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 [always]  count:36349333 (estimated locally) (FALLTHRU)
(note 146 145 147 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 30 (set (reg/f:DI 105 [ _115 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [31 D.330054.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 148 147 151 30 (set (reg:DI 106 [ _116 ])
        (mem:DI (reg/f:DI 105 [ _115 ]) [7 MEM[(const struct PyObject *)_115].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 151 148 152 30 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 106 [ _116 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 152 151 234 30 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 163)
;;  succ:       32 [100.0% (guessed)]  count:36334793 (estimated locally)
;;              31 [0.0% (guessed)]  count:14540 (estimated locally) (FALLTHRU)

;; basic block 31, loop depth 0, count 59263 (estimated locally), maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 [0.0% (guessed)]  count:14540 (estimated locally) (FALLTHRU)
;;              45 [0.0% (guessed)]  count:14524 (estimated locally)
;;              51 [0.0% (guessed)]  count:14518 (estimated locally)
;;              54 [0.0% (guessed)]  count:14512 (estimated locally) (FALLTHRU)
;;              60 [0.0% (guessed)]  count:585 (estimated locally)
;;              63 [0.0% (guessed)]  count:584 (estimated locally) (FALLTHRU)
(code_label 234 152 153 31 649 (nil) [3 uses])
(note 153 234 154 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 31 (set (reg:DI 162)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 155 154 156 31 (set (reg:DI 2 cx)
        (reg:DI 162)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)
        (nil)))
(insn 156 155 157 31 (set (reg:SI 1 dx)
        (const_int 422 [0x1a6])) "/usr/include/boost/python/object_core.hpp":422:5 75 {*movsi_internal}
     (nil))
(insn 157 156 158 31 (set (reg:DI 163)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 158 157 159 31 (set (reg:DI 4 si)
        (reg:DI 163)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)
        (nil)))
(insn 159 158 160 31 (set (reg:DI 164)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 160 159 161 31 (set (reg:DI 5 di)
        (reg:DI 164)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)
        (nil)))
(call_insn 161 160 163 31 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":422:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 32, loop depth 2, count 36334793 (estimated locally), maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       30 [100.0% (guessed)]  count:36334793 (estimated locally)
(code_label 163 161 164 32 641 (nil) [1 uses])
(note 164 163 165 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 32 (parallel [
            (set (reg:DI 107 [ _117 ])
                (plus:DI (reg:DI 106 [ _116 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 166 165 167 32 (set (mem:DI (reg/f:DI 105 [ _115 ]) [7 _115->ob_refcnt+0 S8 A64])
        (reg:DI 107 [ _117 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 167 166 168 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 107 [ _117 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 168 167 169 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 172)
;;  succ:       34 [67.0% (guessed)]  count:24344311 (estimated locally)
;;              33 [33.0% (guessed)]  count:11990482 (estimated locally) (FALLTHRU)

;; basic block 33, loop depth 2, count 11990482 (estimated locally), maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 [33.0% (guessed)]  count:11990482 (estimated locally) (FALLTHRU)
(note 169 168 170 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 33 (set (reg:DI 5 di)
        (reg/f:DI 105 [ _115 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 171 170 172 33 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -19 [0xffffffffffffffed])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       34 [always]  count:11990482 (estimated locally) (FALLTHRU)

;; basic block 34, loop depth 2, count 36334793 (estimated locally), maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       32 [67.0% (guessed)]  count:24344311 (estimated locally)
;;              33 [always]  count:11990482 (estimated locally) (FALLTHRU)
(code_label 172 171 173 34 642 (nil) [1 uses])
(note 173 172 176 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 176 173 177 34 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 133 [ prephitmp_156 ])
            (const_int 4 [0x4]))) "/usr/include/c++/11/bits/stl_vector.h":1072:2 12 {*cmpdi_1}
     (nil))
(jump_insn 177 176 505 34 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1072:2 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 190)
;;  succ:       37 [0.0% (guessed)]  count:14534 (estimated locally)
;;              38 [100.0% (guessed)]  count:36320259 (estimated locally) (FALLTHRU)

;; basic block 35, loop depth 0, count 0 (precise), probably never executed
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       29 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 505 177 508 35 680 (nil) [1 uses])
(note 508 505 506 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 506 508 181 35 (set (reg:DI 167)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       36 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 36, loop depth 0, count 0 (precise), probably never executed
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       35 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 181 506 182 36 645 (nil) [0 uses])
(note 182 181 183 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 36 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 184 183 185 36 (set (reg:DI 5 di)
        (reg:DI 165)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 185 184 186 36 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 186 185 190 36 (set (reg:DI 166)
        (reg:DI 167)) 74 {*movdi_internal}
     (nil))
;;  succ:       73 [always]  count:0 (precise) (FALLTHRU)

;; basic block 37, loop depth 0, count 14534 (estimated locally), maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       34 [0.0% (guessed)]  count:14534 (estimated locally)
(code_label 190 186 191 37 643 (nil) [1 uses])
(note 191 190 192 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 37 (parallel [
            (set (reg:DI 171)
                (ashiftrt:DI (reg:DI 99 [ _84 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 704 {*ashrdi3_1}
     (expr_list:REG_EQUAL (div:DI (reg:DI 99 [ _84 ])
            (const_int 4 [0x4]))
        (nil)))
(insn 193 192 194 37 (set (reg:DI 1 dx)
        (reg:DI 171)) "/usr/include/c++/11/bits/stl_vector.h":1073:28 74 {*movdi_internal}
     (nil))
(insn 194 193 195 37 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/usr/include/c++/11/bits/stl_vector.h":1073:28 74 {*movdi_internal}
     (nil))
(insn 195 194 196 37 (set (reg:DI 172)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f1a33a89120 *.LC21>)) "/usr/include/c++/11/bits/stl_vector.h":1073:28 74 {*movdi_internal}
     (nil))
(insn 196 195 197 37 (set (reg:DI 5 di)
        (reg:DI 172)) "/usr/include/c++/11/bits/stl_vector.h":1073:28 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f1a33a89120 *.LC21>)
        (nil)))
(insn 197 196 198 37 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1073:28 77 {*movqi_internal}
     (nil))
(call_insn 198 197 201 37 (call (mem:QI (symbol_ref:DI ("_ZSt24__throw_out_of_range_fmtPKcz") [flags 0x41]  <function_decl 0x7f1a40e4a400 __throw_out_of_range_fmt>) [0 __throw_out_of_range_fmt S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1073:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 5 [0x5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt24__throw_out_of_range_fmtPKcz") [flags 0x41]  <function_decl 0x7f1a40e4a400 __throw_out_of_range_fmt>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       72 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 38, loop depth 2, count 36320260 (estimated locally), maybe hot
;;  prev block 37, next block 39, flags: (RTL)
;;  pred:       34 [100.0% (guessed)]  count:36320259 (estimated locally) (FALLTHRU)
(note 201 198 202 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 38 (set (reg:SI 174)
        (mem:SI (plus:DI (reg/f:DI 100 [ iftmp.9_96 ])
                (const_int 4 [0x4])) [35 MEM[(const int &)iftmp.9_96 + 4]+0 S4 A32])) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 75 {*movsi_internal}
     (nil))
(insn 203 202 204 38 (set (reg:DI 173)
        (sign_extend:DI (reg:SI 174))) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 147 {*extendsidi2_rex64}
     (nil))
(insn 204 203 205 38 (set (reg:DI 5 di)
        (reg:DI 173)) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 74 {*movdi_internal}
     (nil))
(call_insn 205 204 482 38 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyLong_FromLong") [flags 0x41]  <function_decl 0x7f1a40484b00 PyLong_FromLong>) [0 PyLong_FromLong S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 5 [0x5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("PyLong_FromLong") [flags 0x41]  <function_decl 0x7f1a40484b00 PyLong_FromLong>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       72 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              39 [always (adjusted)]  count:36320260 (estimated locally) (FALLTHRU)

;; basic block 39, loop depth 2, count 36320260 (estimated locally), maybe hot
;;  prev block 38, next block 40, flags: (RTL)
;;  pred:       38 [always (adjusted)]  count:36320260 (estimated locally) (FALLTHRU)
(note 482 205 206 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 206 482 208 39 (set (reg/f:DI 110 [ _123 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/builtin_converters.hpp":122:1 74 {*movdi_internal}
     (nil))
(insn 208 206 209 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 110 [ _123 ])
            (const_int 0 [0]))) "/usr/include/boost/python/errors.hpp":44:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 209 208 210 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 439)
            (pc))) "/usr/include/boost/python/errors.hpp":44:5 806 {*jcc}
     (int_list:REG_BR_PROB 886588628 (nil))
 -> 439)
;;  succ:       40 [17.4% (guessed)]  count:6330621 (estimated locally) (FALLTHRU)
;;              82 [82.6% (guessed)]  count:29989639 (estimated locally)

;; basic block 40, loop depth 0, count 6330621 (estimated locally), maybe hot
;;  prev block 39, next block 41, flags: (RTL)
;;  pred:       39 [17.4% (guessed)]  count:6330621 (estimated locally) (FALLTHRU)
(note 210 209 211 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(call_insn 211 210 212 40 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>) [0 throw_error_already_set S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/errors.hpp":45:32 813 {*call}
     (expr_list:REG_EH_REGION (const_int 5 [0x5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>)
            (nil)))
    (nil))
;;  succ:       41 [always]  count:6330621 (estimated locally) (FALLTHRU)
;;              72 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 41, loop depth 0, count 10896078 (estimated locally), maybe hot
;; Invalid sum of incoming counts 6330621 (estimated locally), should be 10896078 (estimated locally)
;;  prev block 40, next block 42, flags: (RTL)
;;  pred:       40 [always]  count:6330621 (estimated locally) (FALLTHRU)
(note 212 211 213 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 214 41 (set (reg/f:DI 175)
        (const_int 0 [0])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 214 213 215 41 (set (reg:DI 111 [ _124 ])
        (mem/v:DI (reg/f:DI 175) [7 MEM[(struct PyObject *)0B].ob_refcnt+0 S8 A128])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 215 214 443 41 (trap_if (const_int 1 [0x1])
        (const_int 6 [0x6])) 1153 {trap}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
;;  succ:      

;; basic block 42, loop depth 2, count 25417063 (estimated locally), maybe hot
;;  prev block 41, next block 43, flags: (RTL)
;;  pred:       82 [100.0% (guessed)]  count:25414012 (estimated locally)
(code_label 443 215 217 42 670 (nil) [1 uses])
(note 217 443 218 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 140 [ _260 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 219 218 220 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 223)
;;  succ:       44 [67.0% (guessed)]  count:17029432 (estimated locally)
;;              43 [33.0% (guessed)]  count:8387631 (estimated locally) (FALLTHRU)

;; basic block 43, loop depth 2, count 8387631 (estimated locally), maybe hot
;;  prev block 42, next block 44, flags: (RTL)
;;  pred:       42 [33.0% (guessed)]  count:8387631 (estimated locally) (FALLTHRU)
(note 220 219 221 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 43 (set (reg:DI 5 di)
        (reg/f:DI 110 [ _123 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 222 221 223 43 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -21 [0xffffffffffffffeb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       44 [always]  count:8387631 (estimated locally) (FALLTHRU)

;; basic block 44, loop depth 2, count 36310090 (estimated locally), maybe hot
;; Invalid sum of incoming counts 25417063 (estimated locally), should be 36310090 (estimated locally)
;;  prev block 43, next block 45, flags: (RTL)
;;  pred:       43 [always]  count:8387631 (estimated locally) (FALLTHRU)
;;              42 [67.0% (guessed)]  count:17029432 (estimated locally)
(code_label 223 222 224 44 648 (nil) [1 uses])
(note 224 223 225 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 44 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [31 MEM[(struct object_base *)&D.330067].m_ptr+0 S8 A64])
        (reg/f:DI 110 [ _123 ])) "/usr/include/boost/python/object_core.hpp":409:7 74 {*movdi_internal}
     (nil))
(insn 226 225 227 44 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":72:21 210 {*adddi_1}
     (nil))
(insn 227 226 228 44 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":72:21 210 {*adddi_1}
     (nil))
(insn 228 227 229 44 (set (reg:DI 4 si)
        (reg:DI 176)) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(insn 229 228 230 44 (set (reg:DI 5 di)
        (reg:DI 177)) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(call_insn 230 229 231 44 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>) [0 append S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/list.hpp":72:21 813 {*call}
     (expr_list:REG_EH_REGION (const_int 10 [0xa])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       45 [always]  count:36310090 (estimated locally) (FALLTHRU)
;;              49 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 45, loop depth 2, count 36310090 (estimated locally), maybe hot
;;  prev block 44, next block 46, flags: (RTL)
;;  pred:       44 [always]  count:36310090 (estimated locally) (FALLTHRU)
(note 231 230 232 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 45 (set (reg/f:DI 112 [ _129 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [31 D.330067.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 233 232 237 45 (set (reg:DI 113 [ _130 ])
        (mem:DI (reg/f:DI 112 [ _129 ]) [7 MEM[(const struct PyObject *)_129].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 237 233 238 45 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 113 [ _130 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 238 237 239 45 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 234)
;;  succ:       46 [100.0% (guessed)]  count:36295566 (estimated locally) (FALLTHRU)
;;              31 [0.0% (guessed)]  count:14524 (estimated locally)

;; basic block 46, loop depth 2, count 36295566 (estimated locally), maybe hot
;;  prev block 45, next block 47, flags: (RTL)
;;  pred:       45 [100.0% (guessed)]  count:36295566 (estimated locally) (FALLTHRU)
(note 239 238 240 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 46 (parallel [
            (set (reg:DI 114 [ _131 ])
                (plus:DI (reg:DI 113 [ _130 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 241 240 242 46 (set (mem:DI (reg/f:DI 112 [ _129 ]) [7 _129->ob_refcnt+0 S8 A64])
        (reg:DI 114 [ _131 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 242 241 243 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 114 [ _131 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 243 242 244 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 247)
;;  succ:       48 [67.0% (guessed)]  count:24318029 (estimated locally)
;;              47 [33.0% (guessed)]  count:11977537 (estimated locally) (FALLTHRU)

;; basic block 47, loop depth 2, count 11977537 (estimated locally), maybe hot
;;  prev block 46, next block 48, flags: (RTL)
;;  pred:       46 [33.0% (guessed)]  count:11977537 (estimated locally) (FALLTHRU)
(note 244 243 245 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 47 (set (reg:DI 5 di)
        (reg/f:DI 112 [ _129 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 246 245 247 47 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -22 [0xffffffffffffffea])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       48 [always]  count:11977537 (estimated locally) (FALLTHRU)

;; basic block 48, loop depth 2, count 36295566 (estimated locally), maybe hot
;;  prev block 47, next block 49, flags: (RTL)
;;  pred:       46 [67.0% (guessed)]  count:24318029 (estimated locally)
;;              47 [always]  count:11977537 (estimated locally) (FALLTHRU)
(code_label 247 246 248 48 650 (nil) [1 uses])
(note 248 247 249 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 48 (set (reg/f:DI 115 [ _133 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [31 MEM[(const struct object_base *)&position].m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":440:12 74 {*movdi_internal}
     (nil))
(insn 250 249 251 48 (parallel [
            (set (mem:DI (reg/f:DI 115 [ _133 ]) [7 *_133.ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 115 [ _133 ]) [7 *_133.ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 251 250 252 48 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [31 MEM[(struct object_base *)&D.330078].m_ptr+0 S8 A64])
        (reg/f:DI 115 [ _133 ])) "/usr/include/boost/python/object_core.hpp":409:7 74 {*movdi_internal}
     (nil))
(insn 252 251 253 48 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":72:21 210 {*adddi_1}
     (nil))
(insn 253 252 254 48 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":72:21 210 {*adddi_1}
     (nil))
(insn 254 253 255 48 (set (reg:DI 4 si)
        (reg:DI 178)) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(insn 255 254 256 48 (set (reg:DI 5 di)
        (reg:DI 179)) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(call_insn 256 255 509 48 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>) [0 append S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/list.hpp":72:21 813 {*call}
     (expr_list:REG_EH_REGION (const_int 11 [0xb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       55 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              51 [always (adjusted)]  count:36295566 (estimated locally) (FALLTHRU)

;; basic block 49, loop depth 0, count 0 (precise), probably never executed
;;  prev block 48, next block 50, flags: (RTL)
;;  pred:       44 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 509 256 512 49 681 (nil) [1 uses])
(note 512 509 510 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 510 512 259 49 (set (reg:DI 181)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       50 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 50, loop depth 0, count 0 (precise), probably never executed
;;  prev block 49, next block 51, flags: (RTL)
;;  pred:       49 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 259 510 260 50 652 (nil) [0 uses])
(note 260 259 261 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 50 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 262 261 263 50 (set (reg:DI 5 di)
        (reg:DI 180)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 263 262 264 50 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 264 263 269 50 (set (reg:DI 166)
        (reg:DI 181)) 74 {*movdi_internal}
     (nil))
;;  succ:       73 [always]  count:0 (precise) (FALLTHRU)

;; basic block 51, loop depth 2, count 36295566 (estimated locally), maybe hot
;;  prev block 50, next block 52, flags: (RTL)
;;  pred:       48 [always (adjusted)]  count:36295566 (estimated locally) (FALLTHRU)
(note 269 264 270 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 51 (set (reg/f:DI 118 [ _136 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [31 D.330078.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 271 270 274 51 (set (reg:DI 119 [ _137 ])
        (mem:DI (reg/f:DI 118 [ _136 ]) [7 MEM[(const struct PyObject *)_136].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 274 271 275 51 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 119 [ _137 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 275 274 276 51 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 234)
;;  succ:       52 [100.0% (guessed)]  count:36281048 (estimated locally) (FALLTHRU)
;;              31 [0.0% (guessed)]  count:14518 (estimated locally)

;; basic block 52, loop depth 2, count 36281048 (estimated locally), maybe hot
;;  prev block 51, next block 53, flags: (RTL)
;;  pred:       51 [100.0% (guessed)]  count:36281048 (estimated locally) (FALLTHRU)
(note 276 275 277 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 52 (parallel [
            (set (reg:DI 120 [ _138 ])
                (plus:DI (reg:DI 119 [ _137 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 278 277 279 52 (set (mem:DI (reg/f:DI 118 [ _136 ]) [7 _136->ob_refcnt+0 S8 A64])
        (reg:DI 120 [ _138 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 279 278 280 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 120 [ _138 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 280 279 281 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 284)
;;  succ:       54 [67.0% (guessed)]  count:24308302 (estimated locally)
;;              53 [33.0% (guessed)]  count:11972746 (estimated locally) (FALLTHRU)

;; basic block 53, loop depth 2, count 11972746 (estimated locally), maybe hot
;;  prev block 52, next block 54, flags: (RTL)
;;  pred:       52 [33.0% (guessed)]  count:11972746 (estimated locally) (FALLTHRU)
(note 281 280 282 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 53 (set (reg:DI 5 di)
        (reg/f:DI 118 [ _136 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 283 282 284 53 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -24 [0xffffffffffffffe8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       54 [always]  count:11972746 (estimated locally) (FALLTHRU)

;; basic block 54, loop depth 2, count 36281048 (estimated locally), maybe hot
;;  prev block 53, next block 55, flags: (RTL)
;;  pred:       52 [67.0% (guessed)]  count:24308302 (estimated locally)
;;              53 [always]  count:11972746 (estimated locally) (FALLTHRU)
(code_label 284 283 285 54 653 (nil) [1 uses])
(note 285 284 286 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 54 (set (reg/f:DI 121 [ _139 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [31 position.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 287 286 290 54 (set (reg:DI 122 [ _140 ])
        (mem:DI (reg/f:DI 121 [ _139 ]) [7 MEM[(const struct PyObject *)_139].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 290 287 291 54 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 122 [ _140 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 291 290 513 54 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 304)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 304)
;;  succ:       57 [100.0% (guessed)]  count:36266536 (estimated locally)
;;              31 [0.0% (guessed)]  count:14512 (estimated locally) (FALLTHRU)

;; basic block 55, loop depth 0, count 0 (precise), probably never executed
;;  prev block 54, next block 56, flags: (RTL)
;;  pred:       48 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 513 291 516 55 682 (nil) [1 uses])
(note 516 513 514 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 514 516 295 55 (set (reg:DI 184)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       56 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 56, loop depth 0, count 0 (precise), probably never executed
;;  prev block 55, next block 57, flags: (RTL)
;;  pred:       55 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 295 514 296 56 655 (nil) [0 uses])
(note 296 295 297 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 56 (parallel [
            (set (reg:DI 183)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 298 297 299 56 (set (reg:DI 5 di)
        (reg:DI 183)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 299 298 300 56 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 300 299 304 56 (set (reg:DI 166)
        (reg:DI 184)) 74 {*movdi_internal}
     (nil))
;;  succ:       73 [always]  count:0 (precise) (FALLTHRU)

;; basic block 57, loop depth 2, count 36266535 (estimated locally), maybe hot
;;  prev block 56, next block 58, flags: (RTL)
;;  pred:       54 [100.0% (guessed)]  count:36266536 (estimated locally)
(code_label 304 300 305 57 654 (nil) [1 uses])
(note 305 304 306 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 306 305 307 57 (parallel [
            (set (reg:DI 123 [ _141 ])
                (plus:DI (reg:DI 122 [ _140 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 307 306 308 57 (set (mem:DI (reg/f:DI 121 [ _139 ]) [7 _139->ob_refcnt+0 S8 A64])
        (reg:DI 123 [ _141 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 308 307 309 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 123 [ _141 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 309 308 310 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 426)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 426)
;;  succ:       80 [67.0% (guessed)]  count:24298579 (estimated locally)
;;              58 [33.0% (guessed)]  count:11967956 (estimated locally) (FALLTHRU)

;; basic block 58, loop depth 2, count 11967957 (estimated locally), maybe hot
;;  prev block 57, next block 59, flags: (RTL)
;;  pred:       57 [33.0% (guessed)]  count:11967956 (estimated locally) (FALLTHRU)
(note 310 309 311 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 58 (set (reg:DI 5 di)
        (reg/f:DI 121 [ _139 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 312 311 313 58 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -25 [0xffffffffffffffe7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 313 312 314 58 (set (reg:DI 4 si)
        (reg:DI 139 [ _248 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 314 313 315 58 (set (reg:DI 5 di)
        (reg/f:DI 100 [ iftmp.9_96 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 315 314 316 58 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 316 315 317 58 (parallel [
            (set (reg:DI 95 [ ivtmp.2211 ])
                (plus:DI (reg:DI 95 [ ivtmp.2211 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":106:39 210 {*adddi_1}
     (nil))
(insn 317 316 318 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _30 ])
            (reg:DI 95 [ ivtmp.2211 ]))) "src/ChineseCheckersWrapper.cpp":106:39 12 {*cmpdi_1}
     (nil))
(jump_insn 318 317 319 58 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) "src/ChineseCheckersWrapper.cpp":106:39 806 {*jcc}
     (int_list:REG_BR_PROB 1034442876 (nil))
 -> 434)
;;  succ:       81 [96.3% (guessed)]  count:11529930 (estimated locally)
;;              59 [3.7% (guessed)]  count:438027 (estimated locally) (FALLTHRU)

;; basic block 59, loop depth 1, count 1461783 (estimated locally), maybe hot
;;  prev block 58, next block 60, flags: (RTL)
;;  pred:       6 [3.7% (guessed)]  count:134428 (estimated locally)
;;              80 [3.7% (guessed)]  count:889328 (estimated locally)
;;              58 [3.7% (guessed)]  count:438027 (estimated locally) (FALLTHRU)
(code_label 319 318 320 59 633 (nil) [2 uses])
(note 320 319 321 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 59 (set (reg/f:DI 124 [ _144 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [31 MEM[(const struct object_base *)&row].m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":440:12 74 {*movdi_internal}
     (nil))
(insn 322 321 323 59 (parallel [
            (set (mem:DI (reg/f:DI 124 [ _144 ]) [7 *_144.ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 124 [ _144 ]) [7 *_144.ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 323 322 324 59 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [31 MEM[(struct object_base *)&D.330087].m_ptr+0 S8 A64])
        (reg/f:DI 124 [ _144 ])) "/usr/include/boost/python/object_core.hpp":409:7 74 {*movdi_internal}
     (nil))
(insn 324 323 325 59 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/list.hpp":72:21 210 {*adddi_1}
     (nil))
(insn 325 324 326 59 (set (reg:DI 4 si)
        (reg:DI 186)) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(insn 326 325 327 59 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _15 ])) "/usr/include/boost/python/list.hpp":72:21 74 {*movdi_internal}
     (nil))
(call_insn 327 326 328 59 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>) [0 append S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/list.hpp":72:21 813 {*call}
     (expr_list:REG_EH_REGION (const_int 12 [0xc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail9list_base6appendERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3918cb00 append>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       60 [always]  count:1461783 (estimated locally) (FALLTHRU)
;;              64 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 60, loop depth 1, count 1461783 (estimated locally), maybe hot
;;  prev block 59, next block 61, flags: (RTL)
;;  pred:       59 [always]  count:1461783 (estimated locally) (FALLTHRU)
(note 328 327 329 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 330 60 (set (reg/f:DI 127 [ _147 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [31 D.330087.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 330 329 333 60 (set (reg:DI 128 [ _148 ])
        (mem:DI (reg/f:DI 127 [ _147 ]) [7 MEM[(const struct PyObject *)_147].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 333 330 334 60 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 128 [ _148 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 334 333 335 60 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 234)
;;  succ:       61 [100.0% (guessed)]  count:1461198 (estimated locally) (FALLTHRU)
;;              31 [0.0% (guessed)]  count:585 (estimated locally)

;; basic block 61, loop depth 1, count 1461198 (estimated locally), maybe hot
;;  prev block 60, next block 62, flags: (RTL)
;;  pred:       60 [100.0% (guessed)]  count:1461198 (estimated locally) (FALLTHRU)
(note 335 334 336 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 61 (parallel [
            (set (reg:DI 129 [ _149 ])
                (plus:DI (reg:DI 128 [ _148 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 337 336 338 61 (set (mem:DI (reg/f:DI 127 [ _147 ]) [7 _147->ob_refcnt+0 S8 A64])
        (reg:DI 129 [ _149 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 338 337 339 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 129 [ _149 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 339 338 340 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 343)
;;  succ:       63 [67.0% (guessed)]  count:979003 (estimated locally)
;;              62 [33.0% (guessed)]  count:482195 (estimated locally) (FALLTHRU)

;; basic block 62, loop depth 1, count 482195 (estimated locally), maybe hot
;;  prev block 61, next block 63, flags: (RTL)
;;  pred:       61 [33.0% (guessed)]  count:482195 (estimated locally) (FALLTHRU)
(note 340 339 341 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 62 (set (reg:DI 5 di)
        (reg/f:DI 127 [ _147 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 342 341 343 62 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -27 [0xffffffffffffffe5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       63 [always]  count:482195 (estimated locally) (FALLTHRU)

;; basic block 63, loop depth 1, count 1461198 (estimated locally), maybe hot
;;  prev block 62, next block 64, flags: (RTL)
;;  pred:       61 [67.0% (guessed)]  count:979003 (estimated locally)
;;              62 [always]  count:482195 (estimated locally) (FALLTHRU)
(code_label 343 342 344 63 658 (nil) [1 uses])
(note 344 343 345 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 346 63 (set (reg/f:DI 130 [ _150 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [31 row.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 346 345 349 63 (set (reg:DI 131 [ _151 ])
        (mem:DI (reg/f:DI 130 [ _150 ]) [7 MEM[(const struct PyObject *)_150].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 349 346 350 63 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 131 [ _151 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 350 349 517 63 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 363)
;;  succ:       66 [100.0% (guessed)]  count:1460614 (estimated locally)
;;              31 [0.0% (guessed)]  count:584 (estimated locally) (FALLTHRU)

;; basic block 64, loop depth 0, count 0 (precise), probably never executed
;;  prev block 63, next block 65, flags: (RTL)
;;  pred:       59 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 517 350 520 64 683 (nil) [1 uses])
(note 520 517 518 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 518 520 354 64 (set (reg:DI 189)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       65 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 65, loop depth 0, count 0 (precise), probably never executed
;;  prev block 64, next block 66, flags: (RTL)
;;  pred:       64 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 354 518 355 65 660 (nil) [0 uses])
(note 355 354 356 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 65 (parallel [
            (set (reg:DI 187)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 357 356 358 65 (set (reg:DI 5 di)
        (reg:DI 187)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 358 357 359 65 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 359 358 363 65 (set (reg:DI 188)
        (reg:DI 189)) 74 {*movdi_internal}
     (nil))
;;  succ:       79 [always]  count:0 (precise) (FALLTHRU)

;; basic block 66, loop depth 1, count 1460614 (estimated locally), maybe hot
;;  prev block 65, next block 67, flags: (RTL)
;;  pred:       63 [100.0% (guessed)]  count:1460614 (estimated locally)
(code_label 363 359 364 66 659 (nil) [1 uses])
(note 364 363 365 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 66 (parallel [
            (set (reg:DI 132 [ _152 ])
                (plus:DI (reg:DI 131 [ _151 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 366 365 367 66 (set (mem:DI (reg/f:DI 130 [ _150 ]) [7 _150->ob_refcnt+0 S8 A64])
        (reg:DI 132 [ _152 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 367 366 368 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 132 [ _152 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 368 367 369 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 379)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 379)
;;  succ:       68 [67.0% (guessed)]  count:978611 (estimated locally)
;;              67 [33.0% (guessed)]  count:482003 (estimated locally) (FALLTHRU)

;; basic block 67, loop depth 1, count 482002 (estimated locally), maybe hot
;;  prev block 66, next block 68, flags: (RTL)
;;  pred:       66 [33.0% (guessed)]  count:482003 (estimated locally) (FALLTHRU)
(note 369 368 370 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 67 (set (reg:DI 5 di)
        (reg/f:DI 130 [ _150 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 371 370 372 67 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -28 [0xffffffffffffffe4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 372 371 373 67 (parallel [
            (set (reg:DI 135 [ ivtmp.2217 ])
                (plus:DI (reg:DI 135 [ ivtmp.2217 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":104:51 210 {*adddi_1}
     (nil))
(insn 373 372 374 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ _14 ])
            (reg:DI 135 [ ivtmp.2217 ]))) "src/ChineseCheckersWrapper.cpp":104:51 12 {*cmpdi_1}
     (nil))
(jump_insn 374 373 379 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) "src/ChineseCheckersWrapper.cpp":104:51 806 {*jcc}
     (int_list:REG_BR_PROB 1034442876 (nil))
 -> 384)
;;  succ:       69 [96.3% (guessed)]  count:464361 (estimated locally)
;;              4 [3.7% (guessed)]  count:17641 (estimated locally) (FALLTHRU)

;; basic block 68, loop depth 1, count 978612 (estimated locally), maybe hot
;;  prev block 67, next block 69, flags: (RTL)
;;  pred:       66 [67.0% (guessed)]  count:978611 (estimated locally)
(code_label 379 374 380 68 662 (nil) [1 uses])
(note 380 379 381 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 68 (parallel [
            (set (reg:DI 135 [ ivtmp.2217 ])
                (plus:DI (reg:DI 135 [ ivtmp.2217 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":104:51 210 {*adddi_1}
     (nil))
(insn 382 381 383 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ _14 ])
            (reg:DI 135 [ ivtmp.2217 ]))) "src/ChineseCheckersWrapper.cpp":104:51 12 {*cmpdi_1}
     (nil))
(jump_insn 383 382 384 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) "src/ChineseCheckersWrapper.cpp":104:51 806 {*jcc}
     (int_list:REG_BR_PROB 39298956 (nil))
 -> 375)
;;  succ:       69 [96.3% (guessed)]  count:942795 (estimated locally) (FALLTHRU)
;;              4 [3.7% (guessed)]  count:35817 (estimated locally)

;; basic block 69, loop depth 1, count 1407156 (estimated locally), maybe hot
;;  prev block 68, next block 70, flags: (RTL)
;;  pred:       68 [96.3% (guessed)]  count:942795 (estimated locally) (FALLTHRU)
;;              67 [96.3% (guessed)]  count:464361 (estimated locally)
(code_label 384 383 385 69 663 (nil) [1 uses])
(note 385 384 486 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
;;  succ:       6 [always]  count:1407156 (estimated locally) (FALLTHRU)

;; basic block 70, loop depth 0, count 0 (precise), probably never executed
;;  prev block 69, next block 71, flags: (RTL)
;;  pred:       2 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 486 385 488 70 676 (nil) [1 uses])
(note 488 486 487 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 487 488 389 70 (set (reg:DI 192)
        (reg:DI 0 ax)) "src/ChineseCheckersWrapper.cpp":103:43 74 {*movdi_internal}
     (nil))
;;  succ:       71 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 71, loop depth 0, count 0 (precise), probably never executed
;;  prev block 70, next block 72, flags: (RTL)
;;  pred:       70 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 389 487 390 71 666 (nil) [0 uses])
(note 390 389 391 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 391 390 392 71 (set (reg:DI 4 si)
        (const_int 8 [0x8])) "src/ChineseCheckersWrapper.cpp":103:43 74 {*movdi_internal}
     (nil))
(insn 392 391 393 71 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _10 ])) "src/ChineseCheckersWrapper.cpp":103:43 74 {*movdi_internal}
     (nil))
(call_insn 393 392 394 71 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":103:43 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 394 393 395 71 (set (reg/f:DI 96 [ D.330131 ])
        (reg:DI 192)) 74 {*movdi_internal}
     (nil))
(insn 395 394 396 71 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.330131 ])) 74 {*movdi_internal}
     (nil))
(call_insn 396 395 495 71 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 72, loop depth 0, count 0 (precise), probably never executed
;;  prev block 71, next block 73, flags: (RTL)
;;  pred:       20 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              23 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              37 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              38 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              40 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 495 396 498 72 678 (nil) [1 uses])
(note 498 495 496 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 496 498 398 72 (set (reg:DI 166)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       73 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 73, loop depth 0, count 0 (precise), probably never executed
;;  prev block 72, next block 74, flags: (RTL)
;;  pred:       36 [always]  count:0 (precise) (FALLTHRU)
;;              56 [always]  count:0 (precise) (FALLTHRU)
;;              72 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              50 [always]  count:0 (precise) (FALLTHRU)
(code_label 398 496 399 73 646 (nil) [0 uses])
(note 399 398 400 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 401 73 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 401 400 402 73 (set (reg:DI 5 di)
        (reg:DI 193)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 402 401 403 73 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 403 402 489 73 (set (reg:DI 194)
        (reg:DI 166)) 74 {*movdi_internal}
     (nil))
;;  succ:       75 [always]  count:0 (precise) (FALLTHRU)

;; basic block 74, loop depth 0, count 0 (precise), probably never executed
;;  prev block 73, next block 75, flags: (RTL)
;;  pred:       18 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 489 403 494 74 677 (nil) [1 uses])
(note 494 489 490 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 490 494 405 74 (set (reg:DI 194)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_vector.h":353:2 74 {*movdi_internal}
     (nil))
;;  succ:       75 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 75, loop depth 0, count 0 (precise), probably never executed
;;  prev block 74, next block 76, flags: (RTL)
;;  pred:       74 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              73 [always]  count:0 (precise) (FALLTHRU)
(code_label 405 490 406 75 667 (nil) [0 uses])
(note 406 405 407 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ iftmp.9_96 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 408 407 409 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 413)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 413)
;;  succ:       76 [never]  count:0 (precise) (FALLTHRU)
;;              77 [never]  count:0 (precise)

;; basic block 76, loop depth 0, count 0 (precise), probably never executed
;;  prev block 75, next block 77, flags: (RTL)
;;  pred:       75 [never]  count:0 (precise) (FALLTHRU)
(note 409 408 410 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 76 (set (reg:DI 4 si)
        (reg:DI 139 [ _248 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 411 410 412 76 (set (reg:DI 5 di)
        (reg/f:DI 100 [ iftmp.9_96 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 412 411 413 76 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       77 [never]  count:0 (precise) (FALLTHRU)

;; basic block 77, loop depth 0, count 0 (precise), probably never executed
;;  prev block 76, next block 78, flags: (RTL)
;;  pred:       75 [never]  count:0 (precise)
;;              76 [never]  count:0 (precise) (FALLTHRU)
(code_label 413 412 414 77 668 (nil) [1 uses])
(note 414 413 415 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 415 414 499 77 (set (reg:DI 188)
        (reg:DI 194)) 74 {*movdi_internal}
     (nil))
;;  succ:       79 [always]  count:0 (precise) (FALLTHRU)

;; basic block 78, loop depth 0, count 0 (precise), probably never executed
;;  prev block 77, next block 79, flags: (RTL)
;;  pred:       11 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 499 415 504 78 679 (nil) [1 uses])
(note 504 499 500 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 500 504 417 78 (set (reg:DI 188)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       79 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 79, loop depth 0, count 0 (precise), probably never executed
;;  prev block 78, next block 80, flags: (RTL)
;;  pred:       78 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              77 [always]  count:0 (precise) (FALLTHRU)
;;              65 [always]  count:0 (precise) (FALLTHRU)
(code_label 417 500 418 79 661 (nil) [0 uses])
(note 418 417 419 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 79 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 420 419 421 79 (set (reg:DI 5 di)
        (reg:DI 196)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 421 420 422 79 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 422 421 423 79 (set (reg/f:DI 134 [ D.330132 ])
        (reg:DI 188)) 74 {*movdi_internal}
     (nil))
(insn 423 422 424 79 (set (reg:DI 5 di)
        (reg/f:DI 134 [ D.330132 ])) 74 {*movdi_internal}
     (nil))
(call_insn 424 423 426 79 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 80, loop depth 2, count 24298578 (estimated locally), maybe hot
;;  prev block 79, next block 81, flags: (RTL)
;;  pred:       57 [67.0% (guessed)]  count:24298579 (estimated locally)
(code_label 426 424 427 80 656 (nil) [1 uses])
(note 427 426 428 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 428 427 429 80 (set (reg:DI 4 si)
        (reg:DI 139 [ _248 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 429 428 430 80 (set (reg:DI 5 di)
        (reg/f:DI 100 [ iftmp.9_96 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 430 429 431 80 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 431 430 432 80 (parallel [
            (set (reg:DI 95 [ ivtmp.2211 ])
                (plus:DI (reg:DI 95 [ ivtmp.2211 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":106:39 210 {*adddi_1}
     (nil))
(insn 432 431 433 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _30 ])
            (reg:DI 95 [ ivtmp.2211 ]))) "src/ChineseCheckersWrapper.cpp":106:39 12 {*cmpdi_1}
     (nil))
(jump_insn 433 432 434 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) "src/ChineseCheckersWrapper.cpp":106:39 806 {*jcc}
     (int_list:REG_BR_PROB 39298956 (nil))
 -> 319)
;;  succ:       81 [96.3% (guessed)]  count:23409250 (estimated locally) (FALLTHRU)
;;              59 [3.7% (guessed)]  count:889328 (estimated locally)

;; basic block 81, loop depth 2, count 34939180 (estimated locally), maybe hot
;;  prev block 80, next block 82, flags: (RTL)
;;  pred:       80 [96.3% (guessed)]  count:23409250 (estimated locally) (FALLTHRU)
;;              58 [96.3% (guessed)]  count:11529930 (estimated locally)
(code_label 434 433 435 81 657 (nil) [1 uses])
(note 435 434 439 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
;;  succ:       8 [always]  count:34939180 (estimated locally) (FALLTHRU)

;; basic block 82, loop depth 2, count 25424182 (estimated locally), maybe hot
;; Invalid sum of incoming counts 29989639 (estimated locally), should be 25424182 (estimated locally)
;;  prev block 81, next block 83, flags: (RTL)
;;  pred:       39 [82.6% (guessed)]  count:29989639 (estimated locally)
(code_label 439 435 440 82 647 (nil) [1 uses])
(note 440 439 441 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 82 (set (reg:DI 140 [ _260 ])
        (mem:DI (reg/f:DI 110 [ _123 ]) [7 _123->ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 442 441 446 82 (parallel [
            (set (reg:DI 141 [ _261 ])
                (plus:DI (reg:DI 140 [ _260 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 446 442 447 82 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 141 [ _261 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 447 446 452 82 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 443)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 443)
;;  succ:       42 [100.0% (guessed)]  count:25414012 (estimated locally)
;;              25 [0.0% (guessed)]  count:10170 (estimated locally) (FALLTHRU)

;; basic block 83, loop depth 2, count 25451660 (estimated locally), maybe hot
;; Invalid sum of incoming counts 30022051 (estimated locally), should be 25451660 (estimated locally)
;;  prev block 82, next block 84, flags: (RTL)
;;  pred:       22 [82.6% (guessed)]  count:30022051 (estimated locally)
(code_label 452 447 453 83 639 (nil) [1 uses])
(note 453 452 454 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 83 (set (reg:DI 142 [ _264 ])
        (mem:DI (reg/f:DI 103 [ _109 ]) [7 _109->ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 455 454 459 83 (parallel [
            (set (reg:DI 143 [ _265 ])
                (plus:DI (reg:DI 142 [ _264 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 459 455 460 83 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 143 [ _265 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 460 459 461 83 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 456)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 456)
;;  succ:       27 [100.0% (guessed)]  count:25441479 (estimated locally)
;;              84 [0.0% (guessed)]  count:10181 (estimated locally) (FALLTHRU)

;; basic block 84, loop depth 0, count 10181 (estimated locally), maybe hot
;;  prev block 83, next block 85, flags: (RTL)
;;  pred:       83 [0.0% (guessed)]  count:10181 (estimated locally) (FALLTHRU)
(note 461 460 462 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 484 84 (set (mem:DI (reg/f:DI 103 [ _109 ]) [7 _109->ob_refcnt+0 S8 A64])
        (reg:DI 143 [ _265 ])) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
;;  succ:       26 [always]  count:10181 (estimated locally) (FALLTHRU)

;; basic block 85, loop depth 0, count 56 (estimated locally)
;;  prev block 84, next block 86, flags: (RTL)
;;  pred:       4 [0.0% (guessed)]  count:56 (estimated locally) (FALLTHRU)
(note 484 462 470 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(call_insn 470 484 472 85 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":115:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 86, loop depth 0, count 139478 (estimated locally), maybe hot
;;  prev block 85, next block 1, flags: (RTL)
;;  pred:       4 [100.0% (guessed)]  count:139478 (estimated locally)
(code_label 472 470 485 86 674 (nil) [1 uses])
(note 485 472 473 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 473 485 474 86 (set (reg/i:DI 0 ax)
        (reg/f:DI 144 [ <retval> ])) "src/ChineseCheckersWrapper.cpp":115:5 74 {*movdi_internal}
     (nil))
(insn 474 473 0 86 (use (reg/i:DI 0 ax)) "src/ChineseCheckersWrapper.cpp":115:5 -1
     (nil))
;;  succ:       EXIT [always]  count:139478 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::as_to_python_function<std::vector<std::vector<std::vector<int> > >, vector_of_vector_of_positiontype_to_list>::convert (_ZN5boost6python9converter21as_to_python_functionISt6vectorIS3_IS3_IiSaIiEESaIS5_EESaIS7_EE40vector_of_vector_of_positiontype_to_listE7convertEPKv, funcdef_no=11870, decl_uid=269448, cgraph_uid=3781, symbol_order=4687)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 83 [ x ])
        (reg:DI 5 di [ x ])) "/usr/include/boost/python/converter/as_to_python_function.hpp":25:22 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 83 [ x ])) "/usr/include/boost/python/converter/as_to_python_function.hpp":40:33 74 {*movdi_internal}
     (nil))
(call_insn/j 7 6 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN40vector_of_vector_of_positiontype_to_list7convertERKSt6vectorIS0_IS0_IiSaIiEESaIS2_EESaIS4_EE") [flags 0x1]  <function_decl 0x7f1a370fba00 convert>) [0 convert S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/as_to_python_function.hpp":40:33 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN40vector_of_vector_of_positiontype_to_list7convertERKSt6vectorIS0_IS0_IiSaIiEESaIS2_EESaIS4_EE") [flags 0x1]  <function_decl 0x7f1a370fba00 convert>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function PyInit_libChineseCheckers (PyInit_libChineseCheckers, funcdef_no=11102, decl_uid=264275, cgraph_uid=2989, symbol_order=3886)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:QI 82 [ _1 ])
        (mem/v:QI (symbol_ref:DI ("_ZGVZ25PyInit_libChineseCheckersE9moduledef") [flags 0x2]  <var_decl 0x7f1a36e08510 _ZGVZ25PyInit_libChineseCheckersE9moduledef>) [-1  S1 A64])) "src/ChineseCheckersWrapper.cpp":119:1 77 {*movqi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) "src/ChineseCheckersWrapper.cpp":119:1 835 {*memory_blockage}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 82 [ _1 ])
            (const_int 0 [0]))) "src/ChineseCheckersWrapper.cpp":119:1 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 8 7 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) "src/ChineseCheckersWrapper.cpp":119:1 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 12)
;;  succ:       3 [33.0% (guessed)]  count:354334800 (estimated locally)
;;              5 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 354334800 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [33.0% (guessed)]  count:354334800 (estimated locally)
(code_label 12 8 13 3 714 (nil) [1 uses])
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:DI 85)
        (symbol_ref:DI ("_ZGVZ25PyInit_libChineseCheckersE9moduledef") [flags 0x2]  <var_decl 0x7f1a36e08510 _ZGVZ25PyInit_libChineseCheckersE9moduledef>)) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg:DI 85)) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZGVZ25PyInit_libChineseCheckersE9moduledef") [flags 0x2]  <var_decl 0x7f1a36e08510 _ZGVZ25PyInit_libChineseCheckersE9moduledef>)
        (nil)))
(call_insn 16 15 17 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>) [0 __cxa_guard_acquire S1 A8])
            (const_int 0 [0]))) "src/ChineseCheckersWrapper.cpp":119:1 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_acquire") [flags 0x41]  <function_decl 0x7f1a36e34800 __cxa_guard_acquire>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 19 3 (set (reg:SI 83 [ _2 ])
        (reg:SI 0 ax)) "src/ChineseCheckersWrapper.cpp":119:1 75 {*movsi_internal}
     (nil))
(insn 19 17 20 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ _2 ])
            (const_int 0 [0]))) "src/ChineseCheckersWrapper.cpp":119:1 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 39)
            (pc))) "src/ChineseCheckersWrapper.cpp":119:1 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 39)
;;  succ:       4 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
;;              5 [67.0% (guessed)]  count:237404317 (estimated locally)

;; basic block 4, loop depth 0, count 116930483 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [33.0% (guessed)]  count:116930483 (estimated locally) (FALLTHRU)
(note 21 20 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 21 25 4 (set (reg/f:DI 88)
        (symbol_ref:DI ("_ZZ25PyInit_libChineseCheckersE9moduledef") [flags 0x2]  <var_decl 0x7f1a36e08e10 moduledef>)) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 25 24 26 4 (set (reg/f:DI 89)
        (symbol_ref:DI ("_ZZ25PyInit_libChineseCheckersE14initial_m_base") [flags 0x2]  <var_decl 0x7f1a36e08c60 initial_m_base>)) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:TI 90)
        (mem/u/c:TI (reg/f:DI 89) [126 initial_m_base+0 S16 A256])) "src/ChineseCheckersWrapper.cpp":119:1 73 {*movti_internal}
     (nil))
(insn 27 26 28 4 (set (mem/c:TI (reg/f:DI 88) [126 moduledef.m_base+0 S16 A256])
        (reg:TI 90)) "src/ChineseCheckersWrapper.cpp":119:1 73 {*movti_internal}
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 91)
        (const:DI (plus:DI (symbol_ref:DI ("_ZZ25PyInit_libChineseCheckersE9moduledef") [flags 0x2]  <var_decl 0x7f1a36e08e10 moduledef>)
                (const_int 16 [0x10])))) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg/f:DI 92)
        (const:DI (plus:DI (symbol_ref:DI ("_ZZ25PyInit_libChineseCheckersE14initial_m_base") [flags 0x2]  <var_decl 0x7f1a36e08c60 initial_m_base>)
                (const_int 16 [0x10])))) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:TI 93)
        (mem/u/c:TI (reg/f:DI 92) [126 initial_m_base+16 S16 A128])) "src/ChineseCheckersWrapper.cpp":119:1 73 {*movti_internal}
     (nil))
(insn 31 30 32 4 (set (mem/c:TI (reg/f:DI 91) [126 moduledef.m_base+16 S16 A128])
        (reg:TI 93)) "src/ChineseCheckersWrapper.cpp":119:1 73 {*movti_internal}
     (nil))
(insn 32 31 33 4 (set (reg/f:DI 94)
        (const:DI (plus:DI (symbol_ref:DI ("_ZZ25PyInit_libChineseCheckersE9moduledef") [flags 0x2]  <var_decl 0x7f1a36e08e10 moduledef>)
                (const_int 32 [0x20])))) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 95)
        (const:DI (plus:DI (symbol_ref:DI ("_ZZ25PyInit_libChineseCheckersE14initial_m_base") [flags 0x2]  <var_decl 0x7f1a36e08c60 initial_m_base>)
                (const_int 32 [0x20])))) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 96)
        (mem/u/c:DI (reg/f:DI 95) [126 initial_m_base+32 S8 A256])) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 35 34 36 4 (set (mem/c:DI (reg/f:DI 94) [126 moduledef.m_base+32 S8 A256])
        (reg:DI 96)) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:DI 97)
        (symbol_ref:DI ("_ZGVZ25PyInit_libChineseCheckersE9moduledef") [flags 0x2]  <var_decl 0x7f1a36e08510 _ZGVZ25PyInit_libChineseCheckersE9moduledef>)) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (reg:DI 97)) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZGVZ25PyInit_libChineseCheckersE9moduledef") [flags 0x2]  <var_decl 0x7f1a36e08510 _ZGVZ25PyInit_libChineseCheckersE9moduledef>)
        (nil)))
(call_insn 38 37 39 4 (call (mem:QI (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>) [0 __cxa_guard_release S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":119:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_guard_release") [flags 0x41]  <function_decl 0x7f1a36e34900 __cxa_guard_release>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 [always]  count:116930483 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       2 [67.0% (guessed)]  count:719407024 (estimated locally) (FALLTHRU)
;;              4 [always]  count:116930483 (estimated locally) (FALLTHRU)
;;              3 [67.0% (guessed)]  count:237404317 (estimated locally)
(code_label 39 38 40 5 715 (nil) [1 uses])
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 5 (set (reg:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Z30init_module_libChineseCheckersv") [flags 0x1]  <function_decl 0x7f1a36e26300 init_module_libChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 42 41 43 5 (set (reg:DI 98)
        (reg:DI 99)) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:DI 4 si)
        (reg:DI 98)) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_Z30init_module_libChineseCheckersv") [flags 0x1]  <function_decl 0x7f1a36e26300 init_module_libChineseCheckers>)
        (nil)))
(insn 44 43 45 5 (set (reg:DI 100)
        (symbol_ref:DI ("_ZZ25PyInit_libChineseCheckersE9moduledef") [flags 0x2]  <var_decl 0x7f1a36e08e10 moduledef>)) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (nil))
(insn 45 44 46 5 (set (reg:DI 5 di)
        (reg:DI 100)) "src/ChineseCheckersWrapper.cpp":119:1 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZZ25PyInit_libChineseCheckersE9moduledef") [flags 0x2]  <var_decl 0x7f1a36e08e10 moduledef>)
        (nil)))
(call_insn/j 46 45 0 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python6detail11init_moduleER11PyModuleDefPFvvE") [flags 0x41]  <function_decl 0x7f1a38a66900 init_module>) [0 init_module S1 A8])
            (const_int 0 [0]))) "src/ChineseCheckersWrapper.cpp":119:1 828 {*sibcall_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python6detail11init_moduleER11PyModuleDefPFvvE") [flags 0x41]  <function_decl 0x7f1a38a66900 init_module>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (ABNORMAL,SIBCALL)


;; Function boost::python::xdecref<_object> (_ZN5boost6python7xdecrefI7_objectEEvPT_, funcdef_no=11529, decl_uid=192106, cgraph_uid=3432, symbol_order=4332)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 84 [ p ])
        (reg:DI 5 di [ p ])) "/usr/include/boost/python/refcount.hpp":35:13 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 84 [ p ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 11)
;;  succ:       7 [30.0% (guessed)]  count:322122544 (estimated locally) (FALLTHRU)
;;              3 [70.0% (guessed)]  count:751619280 (estimated locally)

;; basic block 3, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [70.0% (guessed)]  count:751619280 (estimated locally)
(code_label 11 7 12 3 723 (nil) [1 uses])
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 16 3 (set (reg:DI 83 [ _6 ])
        (mem:DI (reg/v/f:DI 84 [ p ]) [7 MEM[(const struct PyObject *)p_1(D)].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 16 13 17 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 83 [ _6 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 28)
;;  succ:       5 [100.0% (guessed)]  count:751318634 (estimated locally)
;;              4 [0.0% (guessed)]  count:300647 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 300647 (estimated locally)
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [0.0% (guessed)]  count:300647 (estimated locally) (FALLTHRU)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:DI 2 cx)
        (reg:DI 85)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)
        (nil)))
(insn 21 20 22 4 (set (reg:SI 1 dx)
        (const_int 37 [0x25])) "/usr/include/boost/python/refcount.hpp":37:5 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:DI 86)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:DI 4 si)
        (reg:DI 86)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)
        (nil)))
(insn 24 23 25 4 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg:DI 87)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)
        (nil)))
(call_insn 26 25 28 4 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/refcount.hpp":37:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 5, loop depth 0, count 751408828 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3 [100.0% (guessed)]  count:751318634 (estimated locally)
(code_label 28 26 29 5 725 (nil) [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (parallel [
            (set (reg:DI 82 [ _3 ])
                (plus:DI (reg:DI 83 [ _6 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 31 30 33 5 (set (mem:DI (reg/v/f:DI 84 [ p ]) [7 MEM[(struct PyObject *)p_1(D)].ob_refcnt+0 S8 A64])
        (reg:DI 82 [ _3 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 33 31 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 82 [ _3 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 41)
;;  succ:       7 [67.0% (guessed)]  count:503443916 (estimated locally)
;;              6 [33.0% (guessed)]  count:247964912 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 247964912 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [33.0% (guessed)]  count:247964912 (estimated locally) (FALLTHRU)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:DI 5 di)
        (reg/v/f:DI 84 [ p ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn/j 37 36 41 6 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [always]  count:247964912 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 7, loop depth 0, count 825476267 (estimated locally), maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       5 [67.0% (guessed)]  count:503443916 (estimated locally)
;;              2 [30.0% (guessed)]  count:322122544 (estimated locally) (FALLTHRU)
(code_label 41 37 42 7 722 (nil) [1 uses])
(note 42 41 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:825476267 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::shared_ptr_from_python<ChineseCheckers, boost::shared_ptr>::construct (_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersNS_10shared_ptrEE9constructEP7_objectPNS1_30rvalue_from_python_stage1_dataE, funcdef_no=12825, decl_uid=296465, cgraph_uid=4739, symbol_order=5664)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 116 [ source ])
        (reg:DI 5 di [ source ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":44:15 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 117 [ data ])
        (reg:DI 4 si [ data ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":44:15 74 {*movdi_internal}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 6 2 (set (reg/f:DI 118)
        (const_int 40 [0x28])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":44:15 74 {*movdi_internal}
     (nil))
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.330182+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 118) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":44:15 1159 {stack_protect_set_1_di}
     (nil))
(insn 9 6 10 2 (parallel [
            (set (reg/v/f:DI 83 [ storage ])
                (plus:DI (reg/v/f:DI 117 [ data ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":46:17 210 {*adddi_1}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 117 [ data ]) [43 data_5(D)->convertible+0 S8 A64])
            (reg/v/f:DI 116 [ source ]))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":48:5 12 {*cmpdi_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":48:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 17)
;;  succ:       3 [30.0% (guessed)]  count:322122544 (estimated locally) (FALLTHRU)
;;              4 [70.0% (guessed)]  count:751619280 (estimated locally)

;; basic block 3, loop depth 0, count 322122544 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [30.0% (guessed)]  count:322122544 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:V2DI 119)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/boost/smart_ptr/shared_ptr.hpp":346:54 1439 {movv2di_internal}
     (nil))
(insn 14 13 17 3 (set (mem:V2DI (plus:DI (reg/v/f:DI 117 [ data ])
                (const_int 16 [0x10])) [0 MEM <vector(2) long unsigned int> [(void *)data_5(D) + 16B]+0 S16 A64])
        (reg:V2DI 119)) "/usr/include/boost/smart_ptr/shared_ptr.hpp":346:54 1439 {movv2di_internal}
     (nil))
;;  succ:       29 [always]  count:322122544 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [70.0% (guessed)]  count:751619280 (estimated locally)
(code_label 17 14 18 4 733 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 116 [ source ])
            (const_int 0 [0]))) "/usr/include/boost/python/errors.hpp":44:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "/usr/include/boost/python/errors.hpp":44:5 806 {*jcc}
     (int_list:REG_BR_PROB 886588628 (nil))
 -> 23)
;;  succ:       5 [17.4% (guessed)]  count:131007241 (estimated locally) (FALLTHRU)
;;              6 [82.6% (guessed)]  count:620612040 (estimated locally)

;; basic block 5, loop depth 0, count 131007241 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [17.4% (guessed)]  count:131007241 (estimated locally) (FALLTHRU)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 22 21 23 5 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>) [0 throw_error_already_set S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/errors.hpp":45:32 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>)
        (nil))
    (nil))
;;  succ:       6 [always]  count:131007241 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [82.6% (guessed)]  count:620612040 (estimated locally)
;;              5 [always]  count:131007241 (estimated locally) (FALLTHRU)
(code_label 23 22 24 6 735 (nil) [1 uses])
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (parallel [
            (set (mem:DI (reg/v/f:DI 116 [ source ]) [7 *source_8(D).ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/v/f:DI 116 [ source ]) [7 *source_8(D).ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 26 25 27 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [31 D.300656.m_p+0 S8 A128])
        (reg/v/f:DI 116 [ source ])) "/usr/include/boost/python/handle.hpp":75:11 74 {*movdi_internal}
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":53:13 210 {*adddi_1}
     (nil))
(insn 28 27 29 6 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":53:13 210 {*adddi_1}
     (nil))
(insn 29 28 30 6 (set (reg:DI 4 si)
        (reg:DI 120)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":53:13 74 {*movdi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:DI 5 di)
        (reg:DI 121)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":53:13 74 {*movdi_internal}
     (nil))
(call_insn 31 30 32 6 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterC1ENS0_6handleI7_objectEE") [flags 0x41]  <function_decl 0x7f1a3a9fb300 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":53:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterC1ENS0_6handleI7_objectEE") [flags 0x41]  <function_decl 0x7f1a3a9fb300 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       30 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [always]  count:751619281 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [always]  count:751619281 (estimated locally) (FALLTHRU)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg/f:DI 88 [ _48 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [31 MEM[(const struct handle &)&D.300666].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":105:33 74 {*movdi_internal}
     (nil))
(insn 34 33 35 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _48 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":557:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "/usr/include/python3.10/object.h":557:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 38)
;;  succ:       8 [70.0% (guessed)]  count:526133499 (estimated locally) (FALLTHRU)
;;              9 [30.0% (guessed)]  count:225485782 (estimated locally)

;; basic block 8, loop depth 0, count 526133498 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [70.0% (guessed)]  count:526133499 (estimated locally) (FALLTHRU)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 8 (parallel [
            (set (mem:DI (reg/f:DI 88 [ _48 ]) [7 MEM[(struct PyObject *)_48].ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 88 [ _48 ]) [7 MEM[(struct PyObject *)_48].ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
;;  succ:       9 [always]  count:526133498 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7 [30.0% (guessed)]  count:225485782 (estimated locally)
;;              8 [always]  count:526133498 (estimated locally) (FALLTHRU)
(code_label 38 37 39 9 736 (nil) [1 uses])
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [31 MEM[(struct handle *)&D.330151].m_p+0 S8 A128])
        (reg/f:DI 88 [ _48 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 41 40 42 9 (set (reg:DI 5 di)
        (const_int 32 [0x20])) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":187:19 74 {*movdi_internal}
     (nil))
(call_insn 42 41 219 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":187:19 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       13 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 [always (adjusted)]  count:751619281 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [always (adjusted)]  count:751619281 (estimated locally) (FALLTHRU)
(note 219 42 43 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 43 219 44 10 (set (reg/f:DI 122)
        (reg:DI 0 ax)) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":187:19 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 122)
        (nil)))
(insn 44 43 46 10 (set (reg/f:DI 91 [ _51 ])
        (reg/f:DI 122)) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":187:19 74 {*movdi_internal}
     (nil))
(insn 46 44 47 10 (parallel [
            (set (reg/f:DI 98 [ vectp.2234 ])
                (plus:DI (reg/f:DI 91 [ _51 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 47 46 48 10 (set (reg:V2SI 123)
        (mem/u/c:V2SI (symbol_ref/u:DI ("*.LC22") [flags 0x2]) [0  S8 A64])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":82:24 1287 {*movv2si_internal}
     (nil))
(insn 48 47 49 10 (set (mem:V2SI (plus:DI (reg/f:DI 91 [ _51 ])
                (const_int 8 [0x8])) [35 MEM <vector(2) unsigned int> [(unsigned int *)_51 + 8B]+0 S8 A64])
        (reg:V2SI 123)) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":82:24 1287 {*movv2si_internal}
     (nil))
(insn 49 48 50 10 (set (reg:DI 125)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE")  <var_decl 0x7f1a3559a3f0 _ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":159:56 74 {*movdi_internal}
     (nil))
(insn 50 49 51 10 (set (reg/f:DI 124)
        (plus:DI (reg:DI 125)
            (const_int 16 [0x10]))) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":159:56 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE")  <var_decl 0x7f1a3559a3f0 _ZTVN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 51 50 52 10 (set (mem/f:DI (reg/f:DI 91 [ _51 ]) [5 MEM[(struct sp_counted_impl_pd *)_51].D.305869._vptr.sp_counted_base+0 S8 A64])
        (reg/f:DI 124)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":159:56 74 {*movdi_internal}
     (nil))
(insn 52 51 53 10 (set (mem/f:DI (plus:DI (reg/f:DI 91 [ _51 ])
                (const_int 16 [0x10])) [43 MEM[(struct sp_counted_impl_pd *)_51].ptr+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":159:39 74 {*movdi_internal}
     (nil))
(insn 53 52 54 10 (set (reg/f:DI 92 [ _52 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [31 MEM[(const struct handle &)&D.330151].m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":105:33 74 {*movdi_internal}
     (nil))
(insn 54 53 55 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ _52 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":557:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 55 54 56 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "/usr/include/python3.10/object.h":557:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 58)
;;  succ:       11 [70.0% (guessed)]  count:526133499 (estimated locally) (FALLTHRU)
;;              12 [30.0% (guessed)]  count:225485782 (estimated locally)

;; basic block 11, loop depth 0, count 526133498 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [70.0% (guessed)]  count:526133499 (estimated locally) (FALLTHRU)
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 11 (parallel [
            (set (mem:DI (reg/f:DI 92 [ _52 ]) [7 MEM[(struct PyObject *)_52].ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 92 [ _52 ]) [7 MEM[(struct PyObject *)_52].ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
;;  succ:       12 [always]  count:526133498 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       10 [30.0% (guessed)]  count:225485782 (estimated locally)
;;              11 [always]  count:526133498 (estimated locally) (FALLTHRU)
(code_label 58 57 59 12 737 (nil) [1 uses])
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (mem/f:DI (plus:DI (reg/f:DI 91 [ _51 ])
                (const_int 24 [0x18])) [31 MEM[(struct handle *)_51 + 24B].m_p+0 S8 A64])
        (reg/f:DI 92 [ _52 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 61 60 62 12 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/shared_ptr.hpp":382:67 210 {*adddi_1}
     (nil))
(insn 62 61 63 12 (set (reg:DI 5 di)
        (reg:DI 126)) "/usr/include/boost/smart_ptr/shared_ptr.hpp":382:67 74 {*movdi_internal}
     (nil))
(call_insn 63 62 64 12 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/shared_ptr.hpp":382:67 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 64 63 65 12 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 65 64 66 12 (set (reg:DI 5 di)
        (reg:DI 127)) 74 {*movdi_internal}
     (nil))
(call_insn 66 65 67 12 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 67 66 68 12 (set (reg/f:DI 86 [ _23 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [31 D.300656.m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 68 67 69 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 86 [ _23 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 69 68 230 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 195)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 195)
;;  succ:       32 [30.0% (guessed)]  count:225485782 (estimated locally)
;;              18 [70.0% (guessed)]  count:526133499 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 0 (precise), probably never executed
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       9 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 230 69 232 13 755 (nil) [1 uses])
(note 232 230 231 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 231 232 73 13 (set (reg:DI 128)
        (reg:DI 0 ax)) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":189:9 74 {*movdi_internal}
     (nil))
;;  succ:       14 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 14, loop depth 0, count 0 (precise), probably never executed
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 73 231 74 14 740 (nil) [0 uses])
(note 74 73 75 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 14 (set (reg/f:DI 95 [ _55 ])
        (reg:DI 128)) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":189:9 74 {*movdi_internal}
     (nil))
(insn 76 75 77 14 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _55 ])) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":189:9 74 {*movdi_internal}
     (nil))
(call_insn 77 76 78 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":189:9 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 78 77 79 14 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":191:14 210 {*adddi_1}
     (nil))
(insn 79 78 80 14 (set (reg:DI 4 si)
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":191:14 74 {*movdi_internal}
     (nil))
(insn 80 79 81 14 (set (reg:DI 5 di)
        (reg:DI 129)) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":191:14 74 {*movdi_internal}
     (nil))
(call_insn 81 80 82 14 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterclEPKv") [flags 0x41]  <function_decl 0x7f1a3a9fb200 operator()>) [0 operator() S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":191:14 813 {*call}
     (expr_list:REG_EH_REGION (const_int 7 [0x7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterclEPKv") [flags 0x41]  <function_decl 0x7f1a3a9fb200 operator()>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       15 [never]  count:0 (precise) (FALLTHRU)
;;              16 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 15, loop depth 0, count 0 (precise), probably never executed
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [never]  count:0 (precise) (FALLTHRU)
(note 82 81 83 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 83 82 226 15 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":192:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 7 [0x7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       16 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 16, loop depth 0, count 0 (precise), probably never executed
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       14 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 226 83 229 16 754 (nil) [1 uses])
(note 229 226 227 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 227 229 85 16 (set (reg:DI 131)
        (reg:DI 0 ax)) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":189:9 74 {*movdi_internal}
     (nil))
;;  succ:       17 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 17, loop depth 0, count 0 (precise), probably never executed
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 85 227 86 17 741 (nil) [0 uses])
(note 86 85 87 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn 87 86 88 17 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/shared_count.hpp":189:9 813 {*call}
     (expr_list:REG_EH_REGION (const_int -20 [0xffffffffffffffec])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 88 87 90 17 (set (reg:DI 130)
        (reg:DI 131)) 74 {*movdi_internal}
     (nil))
(insn 90 88 91 17 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/shared_ptr.hpp":382:67 210 {*adddi_1}
     (nil))
(insn 91 90 92 17 (set (reg:DI 5 di)
        (reg:DI 134)) "/usr/include/boost/smart_ptr/shared_ptr.hpp":382:67 74 {*movdi_internal}
     (nil))
(call_insn 92 91 93 17 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/shared_ptr.hpp":382:67 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 93 92 95 17 (set (reg:DI 135)
        (reg:DI 130)) 74 {*movdi_internal}
     (nil))
(insn 95 93 96 17 (parallel [
            (set (reg:DI 137)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 96 95 97 17 (set (reg:DI 5 di)
        (reg:DI 137)) 74 {*movdi_internal}
     (nil))
(call_insn 97 96 98 17 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 98 97 103 17 (set (reg:DI 138)
        (reg:DI 135)) 74 {*movdi_internal}
     (nil))
;;  succ:       31 [always]  count:0 (precise) (FALLTHRU)

;; basic block 18, loop depth 0, count 526133498 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       12 [70.0% (guessed)]  count:526133499 (estimated locally) (FALLTHRU)
(note 103 98 104 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 107 18 (set (reg:DI 96 [ _56 ])
        (mem:DI (reg/f:DI 86 [ _23 ]) [7 MEM[(const struct PyObject *)_23].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 107 104 108 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 96 [ _56 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 108 107 109 18 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 119)
;;  succ:       20 [100.0% (guessed)]  count:525923045 (estimated locally)
;;              19 [0.0% (guessed)]  count:210453 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 0, count 210453 (estimated locally)
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [0.0% (guessed)]  count:210453 (estimated locally) (FALLTHRU)
(note 109 108 110 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 19 (set (reg:DI 140)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 111 110 112 19 (set (reg:DI 2 cx)
        (reg:DI 140)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)
        (nil)))
(insn 112 111 113 19 (set (reg:SI 1 dx)
        (const_int 37 [0x25])) "/usr/include/boost/python/refcount.hpp":37:5 75 {*movsi_internal}
     (nil))
(insn 113 112 114 19 (set (reg:DI 141)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 114 113 115 19 (set (reg:DI 4 si)
        (reg:DI 141)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)
        (nil)))
(insn 115 114 116 19 (set (reg:DI 142)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 116 115 117 19 (set (reg:DI 5 di)
        (reg:DI 142)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)
        (nil)))
(call_insn 117 116 119 19 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/refcount.hpp":37:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 20, loop depth 0, count 525986181 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       18 [100.0% (guessed)]  count:525923045 (estimated locally)
(code_label 119 117 120 20 743 (nil) [1 uses])
(note 120 119 121 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 20 (parallel [
            (set (reg:DI 97 [ _58 ])
                (plus:DI (reg:DI 96 [ _56 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 122 121 123 20 (set (mem:DI (reg/f:DI 86 [ _23 ]) [7 MEM[(struct PyObject *)_23].ob_refcnt+0 S8 A64])
        (reg:DI 97 [ _58 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 123 122 124 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 97 [ _58 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 124 123 125 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 195)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 195)
;;  succ:       32 [67.0% (guessed)]  count:352410742 (estimated locally)
;;              21 [33.0% (guessed)]  count:173575439 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 0, count 173575439 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [33.0% (guessed)]  count:173575439 (estimated locally) (FALLTHRU)
(note 125 124 126 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 21 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _23 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 127 126 204 21 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -17 [0xffffffffffffffef])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       32 [always]  count:173575439 (estimated locally) (FALLTHRU)

;; basic block 22, loop depth 0, count 136604623 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       32 [34.0% (guessed)]  count:136604623 (estimated locally)
(code_label 204 127 130 22 750 (nil) [1 uses])
(note 130 204 131 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 22 (set (reg/f:DI 143)
        (mem/f:DI (reg/f:DI 91 [ _51 ]) [5 MEM[(struct sp_counted_base *)_51]._vptr.sp_counted_base+0 S8 A64])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":120:20 74 {*movdi_internal}
     (nil))
(insn 132 131 133 22 (set (reg/f:DI 101 [ _62 ])
        (mem/f:DI (plus:DI (reg/f:DI 143)
                (const_int 16 [0x10])) [38 MEM[(int (*) () *)_61 + 16B]+0 S8 A64])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":120:20 74 {*movdi_internal}
     (nil))
(insn 133 132 134 22 (set (reg:DI 145)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEE7disposeEv") [flags 0x1]  <function_decl 0x7f1a355a2200 dispose>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 134 133 135 22 (set (reg:DI 144)
        (reg:DI 145)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6detail18sp_counted_impl_pdIPvNS_6python9converter18shared_ptr_deleterEE7disposeEv") [flags 0x1]  <function_decl 0x7f1a355a2200 dispose>)
        (nil)))
(insn 135 134 136 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 101 [ _62 ])
            (reg:DI 144))) 12 {*cmpdi_1}
     (nil))
(jump_insn 136 135 137 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 214748372 (nil))
 -> 145)
;;  succ:       23 [80.0% (guessed)]  count:109283698 (estimated locally) (FALLTHRU)
;;              24 [20.0% (guessed)]  count:27320925 (estimated locally)

;; basic block 23, loop depth 0, count 109283698 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [80.0% (guessed)]  count:109283698 (estimated locally) (FALLTHRU)
(note 137 136 138 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 23 (set (reg:DI 146)
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _51 ])
                (const_int 16 [0x10])) [43 MEM[(struct sp_counted_impl_pd *)_51].ptr+0 S8 A64])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":169:12 74 {*movdi_internal}
     (nil))
(insn 139 138 140 23 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 91 [ _51 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":169:12 210 {*adddi_1}
     (nil))
(insn 140 139 141 23 (set (reg:DI 4 si)
        (reg:DI 146)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":169:12 74 {*movdi_internal}
     (nil))
(insn 141 140 142 23 (set (reg:DI 5 di)
        (reg:DI 147)) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":169:12 74 {*movdi_internal}
     (nil))
(call_insn 142 141 145 23 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterclEPKv") [flags 0x41]  <function_decl 0x7f1a3a9fb200 operator()>) [0 operator() S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp":169:12 813 {*call}
     (expr_list:REG_EH_REGION (const_int -23 [0xffffffffffffffe9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterclEPKv") [flags 0x41]  <function_decl 0x7f1a3a9fb200 operator()>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       25 [always]  count:109283698 (estimated locally) (FALLTHRU)

;; basic block 24, loop depth 0, count 27320925 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       22 [20.0% (guessed)]  count:27320925 (estimated locally)
(code_label 145 142 146 24 745 (nil) [1 uses])
(note 146 145 147 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 24 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _51 ])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":120:20 74 {*movdi_internal}
     (nil))
(call_insn 148 147 149 24 (call (mem:QI (reg/f:DI 101 [ _62 ]) [0 *OBJ_TYPE_REF(_62;_51->2) S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":120:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -16 [0xfffffffffffffff0])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       25 [always]  count:27320925 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 0, count 136604623 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [always]  count:27320925 (estimated locally) (FALLTHRU)
;;              23 [always]  count:109283698 (estimated locally) (FALLTHRU)
(code_label 149 148 150 25 746 (nil) [0 uses])
(note 150 149 151 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 25 (set (reg:SI 149)
        (const_int 1 [0x1])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":40:30 75 {*movsi_internal}
     (nil))
(insn 152 151 153 25 (parallel [
            (set (reg:SI 148)
                (neg:SI (reg:SI 149)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":40:30 575 {*negsi_1}
     (nil))
(insn 153 152 154 25 (parallel [
            (set (reg:SI 106 [ _68 ])
                (unspec_volatile:SI [
                        (mem/v:SI (plus:DI (reg/f:DI 91 [ _51 ])
                                (const_int 12 [0xc])) [-1  S4 A32])
                        (const_int 4 [0x4])
                    ] UNSPECV_XCHG))
            (set (mem/v:SI (plus:DI (reg/f:DI 91 [ _51 ])
                        (const_int 12 [0xc])) [-1  S4 A32])
                (plus:SI (mem/v:SI (plus:DI (reg/f:DI 91 [ _51 ])
                            (const_int 12 [0xc])) [-1  S4 A32])
                    (reg:SI 148)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":40:30 5977 {atomic_fetch_addsi}
     (nil))
(insn 154 153 155 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ _68 ])
            (const_int 1 [0x1]))) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":132:9 11 {*cmpsi_1}
     (nil))
(jump_insn 155 154 159 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":132:9 806 {*jcc}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 159)
;;  succ:       26 [34.0% (guessed)]  count:46445572 (estimated locally)
;;              29 [66.0% (guessed)]  count:90159051 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 0, count 46445572 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [34.0% (guessed)]  count:46445572 (estimated locally)
(code_label 159 155 160 26 747 (nil) [1 uses])
(note 160 159 161 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 26 (set (reg/f:DI 107 [ _69 ])
        (mem/f:DI (reg/f:DI 91 [ _51 ]) [5 MEM[(struct sp_counted_base *)_51]._vptr.sp_counted_base+0 S8 A64])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":134:20 74 {*movdi_internal}
     (nil))
(insn 162 161 163 26 (set (reg/f:DI 108 [ _70 ])
        (mem/f:DI (plus:DI (reg/f:DI 107 [ _69 ])
                (const_int 24 [0x18])) [38 MEM[(int (*) () *)_69 + 24B]+0 S8 A64])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":134:20 74 {*movdi_internal}
     (nil))
(insn 163 162 164 26 (set (reg:DI 151)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6detail15sp_counted_base7destroyEv") [flags 0x1]  <function_decl 0x7f1a3a9ffa00 destroy>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 164 163 165 26 (set (reg:DI 150)
        (reg:DI 151)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6detail15sp_counted_base7destroyEv") [flags 0x1]  <function_decl 0x7f1a3a9ffa00 destroy>)
        (nil)))
(insn 165 164 166 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 108 [ _70 ])
            (reg:DI 150))) 12 {*cmpdi_1}
     (nil))
(jump_insn 166 165 167 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 214748364 (nil))
 -> 173)
;;  succ:       27 [80.0% (guessed)]  count:37156458 (estimated locally) (FALLTHRU)
;;              28 [20.0% (guessed)]  count:9289114 (estimated locally)

;; basic block 27, loop depth 0, count 37156458 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [80.0% (guessed)]  count:37156458 (estimated locally) (FALLTHRU)
(note 167 166 168 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 27 (set (reg/f:DI 152)
        (mem/f:DI (plus:DI (reg/f:DI 107 [ _69 ])
                (const_int 8 [0x8])) [38 MEM[(int (*) () *)_69 + 8B]+0 S8 A64])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":99:16 74 {*movdi_internal}
     (nil))
(insn 169 168 170 27 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _51 ])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":99:16 74 {*movdi_internal}
     (nil))
(call_insn 170 169 173 27 (call (mem:QI (reg/f:DI 152) [0 *OBJ_TYPE_REF(_74;_51->1) S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":99:16 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       29 [always]  count:37156458 (estimated locally) (FALLTHRU)

;; basic block 28, loop depth 0, count 9289114 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       26 [20.0% (guessed)]  count:9289114 (estimated locally)
(code_label 173 170 174 28 749 (nil) [1 uses])
(note 174 173 175 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 28 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _51 ])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":134:20 74 {*movdi_internal}
     (nil))
(call_insn 176 175 179 28 (call (mem:QI (reg/f:DI 108 [ _70 ]) [0 *OBJ_TYPE_REF(_70;_51->3) S1 A8])
        (const_int 0 [0])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":134:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -16 [0xfffffffffffffff0])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       29 [always]  count:9289114 (estimated locally) (FALLTHRU)

;; basic block 29, loop depth 0, count 1073531373 (estimated locally), maybe hot
;; Invalid sum of incoming counts 723900843 (estimated locally), should be 1073531373 (estimated locally)
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       3 [always]  count:322122544 (estimated locally) (FALLTHRU)
;;              28 [always]  count:9289114 (estimated locally) (FALLTHRU)
;;              25 [66.0% (guessed)]  count:90159051 (estimated locally) (FALLTHRU)
;;              27 [always]  count:37156458 (estimated locally) (FALLTHRU)
;;              32 [66.0% (guessed)]  count:265173676 (estimated locally) (FALLTHRU)
(code_label 179 176 180 29 734 (nil) [0 uses])
(note 180 179 181 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 212 29 (set (mem/f:DI (reg/v/f:DI 117 [ data ]) [43 data_5(D)->convertible+0 S8 A64])
        (reg/v/f:DI 83 [ storage ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":59:23 74 {*movdi_internal}
     (nil))
(insn 212 181 213 29 (set (reg/f:DI 158)
        (const_int 40 [0x28])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":60:3 74 {*movdi_internal}
     (nil))
(insn 213 212 214 29 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.330182+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 158) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":60:3 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 214 213 222 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 217)
            (pc))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":60:3 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 217)
;;  succ:       34 [100.0% (guessed)]  count:1073101961 (estimated locally)
;;              33 [0.0% (guessed)]  count:429412 (estimated locally) (FALLTHRU)

;; basic block 30, loop depth 0, count 0 (precise), probably never executed
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       6 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 222 214 225 30 753 (nil) [1 uses])
(note 225 222 223 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 223 225 184 30 (set (reg:DI 138)
        (reg:DI 0 ax)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
;;  succ:       31 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 31, loop depth 0, count 0 (precise), probably never executed
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              17 [always]  count:0 (precise) (FALLTHRU)
(code_label 184 223 185 31 742 (nil) [0 uses])
(note 185 184 186 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 31 (set (reg:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [31 D.300656.m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 187 186 188 31 (set (reg:DI 5 di)
        (reg:DI 153)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 188 187 189 31 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -18 [0xffffffffffffffee])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 189 188 190 31 (set (reg/f:DI 115 [ D.330181 ])
        (reg:DI 138)) 74 {*movdi_internal}
     (nil))
(insn 190 189 191 31 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.330181 ])) 74 {*movdi_internal}
     (nil))
(call_insn 191 190 195 31 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 32, loop depth 0, count 401778299 (estimated locally), maybe hot
;; Invalid sum of incoming counts 751471963 (estimated locally), should be 401778299 (estimated locally)
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       21 [always]  count:173575439 (estimated locally) (FALLTHRU)
;;              20 [67.0% (guessed)]  count:352410742 (estimated locally)
;;              12 [30.0% (guessed)]  count:225485782 (estimated locally)
(code_label 195 191 196 32 744 (nil) [2 uses])
(note 196 195 197 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 32 (set (reg/f:DI 155)
        (mem/f:DI (reg/v/f:DI 117 [ data ]) [43 data_5(D)->convertible+0 S8 A64])) "/usr/include/boost/smart_ptr/shared_ptr.hpp":458:81 74 {*movdi_internal}
     (nil))
(insn 198 197 199 32 (set (reg:V2DI 154)
        (vec_concat:V2DI (reg/f:DI 155)
            (reg/f:DI 91 [ _51 ]))) "/usr/include/boost/smart_ptr/shared_ptr.hpp":458:81 4306 {vec_concatv2di}
     (nil))
(insn 199 198 200 32 (set (mem:V2DI (plus:DI (reg/v/f:DI 117 [ data ])
                (const_int 16 [0x10])) [0 MEM <vector(2) long unsigned int> [(void *)data_5(D) + 16B]+0 S16 A64])
        (reg:V2DI 154)) "/usr/include/boost/smart_ptr/shared_ptr.hpp":458:81 1439 {movv2di_internal}
     (nil))
(insn 200 199 201 32 (parallel [
            (set (mem/v:SI (reg/f:DI 98 [ vectp.2234 ]) [-1  S4 A64])
                (unspec_volatile:SI [
                        (plus:SI (mem/v:SI (reg/f:DI 98 [ vectp.2234 ]) [-1  S4 A64])
                            (const_int 1 [0x1]))
                        (const_int 0 [0])
                    ] UNSPECV_LOCK))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":35:23 5989 {atomic_addsi}
     (nil))
(insn 201 200 202 32 (set (reg:SI 157)
        (const_int 1 [0x1])) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":40:30 75 {*movsi_internal}
     (nil))
(insn 202 201 203 32 (parallel [
            (set (reg:SI 156)
                (neg:SI (reg:SI 157)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":40:30 575 {*negsi_1}
     (nil))
(insn 203 202 205 32 (parallel [
            (set (reg:SI 99 [ _60 ])
                (unspec_volatile:SI [
                        (mem/v:SI (reg/f:DI 98 [ vectp.2234 ]) [-1  S4 A64])
                        (const_int 4 [0x4])
                    ] UNSPECV_XCHG))
            (set (mem/v:SI (reg/f:DI 98 [ vectp.2234 ]) [-1  S4 A64])
                (plus:SI (mem/v:SI (reg/f:DI 98 [ vectp.2234 ]) [-1  S4 A64])
                    (reg:SI 156)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":40:30 5977 {atomic_fetch_addsi}
     (nil))
(insn 205 203 206 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ _60 ])
            (const_int 1 [0x1]))) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":118:9 11 {*cmpsi_1}
     (nil))
(jump_insn 206 205 220 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) "/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp":118:9 806 {*jcc}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 204)
;;  succ:       22 [34.0% (guessed)]  count:136604623 (estimated locally)
;;              29 [66.0% (guessed)]  count:265173676 (estimated locally) (FALLTHRU)

;; basic block 33, loop depth 0, count 429412 (estimated locally)
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       29 [0.0% (guessed)]  count:429412 (estimated locally) (FALLTHRU)
(note 220 206 215 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(call_insn 215 220 217 33 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":60:3 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 34, loop depth 0, count 1073101961 (estimated locally), maybe hot
;;  prev block 33, next block 1, flags: (RTL)
;;  pred:       29 [100.0% (guessed)]  count:1073101961 (estimated locally)
(code_label 217 215 221 34 752 (nil) [1 uses])
(note 221 217 0 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:1073101961 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::shared_ptr_from_python<ChineseCheckers, std::shared_ptr>::construct (_ZN5boost6python9converter22shared_ptr_from_pythonI15ChineseCheckersSt10shared_ptrE9constructEP7_objectPNS1_30rvalue_from_python_stage1_dataE, funcdef_no=12832, decl_uid=296510, cgraph_uid=4751, symbol_order=5676)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 120 [ source ])
        (reg:DI 5 di [ source ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":44:15 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 121 [ data ])
        (reg:DI 4 si [ data ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":44:15 74 {*movdi_internal}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 6 2 (set (reg/f:DI 122)
        (const_int 40 [0x28])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":44:15 74 {*movdi_internal}
     (nil))
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.330252+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 122) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":44:15 1159 {stack_protect_set_1_di}
     (nil))
(insn 9 6 10 2 (parallel [
            (set (reg/v/f:DI 83 [ storage ])
                (plus:DI (reg/v/f:DI 121 [ data ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":46:17 210 {*adddi_1}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 121 [ data ]) [43 data_5(D)->convertible+0 S8 A64])
            (reg/v/f:DI 120 [ source ]))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":48:5 12 {*cmpdi_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":48:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 17)
;;  succ:       3 [30.0% (guessed)]  count:322122544 (estimated locally) (FALLTHRU)
;;              4 [70.0% (guessed)]  count:751619280 (estimated locally)

;; basic block 3, loop depth 0, count 322122544 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [30.0% (guessed)]  count:322122544 (estimated locally) (FALLTHRU)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:V2DI 123)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/shared_ptr_base.h":1093:9 1439 {movv2di_internal}
     (nil))
(insn 14 13 17 3 (set (mem:V2DI (plus:DI (reg/v/f:DI 121 [ data ])
                (const_int 16 [0x10])) [0 MEM <vector(2) long unsigned int> [(void *)data_5(D) + 16B]+0 S16 A64])
        (reg:V2DI 123)) "/usr/include/c++/11/bits/shared_ptr_base.h":1093:9 1439 {movv2di_internal}
     (nil))
;;  succ:       32 [always]  count:322122544 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [70.0% (guessed)]  count:751619280 (estimated locally)
(code_label 17 14 18 4 775 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 120 [ source ])
            (const_int 0 [0]))) "/usr/include/boost/python/errors.hpp":44:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "/usr/include/boost/python/errors.hpp":44:5 806 {*jcc}
     (int_list:REG_BR_PROB 886588628 (nil))
 -> 23)
;;  succ:       5 [17.4% (guessed)]  count:131007241 (estimated locally) (FALLTHRU)
;;              6 [82.6% (guessed)]  count:620612040 (estimated locally)

;; basic block 5, loop depth 0, count 131007241 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [17.4% (guessed)]  count:131007241 (estimated locally) (FALLTHRU)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 22 21 23 5 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>) [0 throw_error_already_set S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/errors.hpp":45:32 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>)
        (nil))
    (nil))
;;  succ:       6 [always]  count:131007241 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [82.6% (guessed)]  count:620612040 (estimated locally)
;;              5 [always]  count:131007241 (estimated locally) (FALLTHRU)
(code_label 23 22 24 6 777 (nil) [1 uses])
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (parallel [
            (set (mem:DI (reg/v/f:DI 120 [ source ]) [7 *source_8(D).ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/v/f:DI 120 [ source ]) [7 *source_8(D).ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 26 25 27 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [31 D.303116.m_p+0 S8 A128])
        (reg/v/f:DI 120 [ source ])) "/usr/include/boost/python/handle.hpp":75:11 74 {*movdi_internal}
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":53:13 210 {*adddi_1}
     (nil))
(insn 28 27 29 6 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":53:13 210 {*adddi_1}
     (nil))
(insn 29 28 30 6 (set (reg:DI 4 si)
        (reg:DI 124)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":53:13 74 {*movdi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:DI 5 di)
        (reg:DI 125)) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":53:13 74 {*movdi_internal}
     (nil))
(call_insn 31 30 32 6 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterC1ENS0_6handleI7_objectEE") [flags 0x41]  <function_decl 0x7f1a3a9fb300 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":53:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterC1ENS0_6handleI7_objectEE") [flags 0x41]  <function_decl 0x7f1a3a9fb300 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       33 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [always]  count:751619281 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [always]  count:751619281 (estimated locally) (FALLTHRU)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg/f:DI 88 [ _44 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [31 MEM[(const struct handle &)&D.303117].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":105:33 74 {*movdi_internal}
     (nil))
(insn 34 33 35 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _44 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":557:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 257)
            (pc))) "/usr/include/python3.10/object.h":557:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 257)
;;  succ:       8 [70.0% (guessed)]  count:526133499 (estimated locally) (FALLTHRU)
;;              37 [30.0% (guessed)]  count:225485782 (estimated locally)

;; basic block 8, loop depth 0, count 526133498 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [70.0% (guessed)]  count:526133499 (estimated locally) (FALLTHRU)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 8 (set (reg:DI 89 [ _45 ])
        (mem:DI (reg/f:DI 88 [ _44 ]) [7 MEM[(struct PyObject *)_44].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 38 37 39 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [31 MEM[(struct handle *)&D.330191].m_p+0 S8 A128])
        (reg/f:DI 88 [ _44 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 39 38 40 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [31 MEM[(struct handle *)&D.330196].m_p+0 S8 A64])
        (reg/f:DI 88 [ _44 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 40 39 41 8 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg:DI 89 [ _45 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 41 40 261 8 (set (mem:DI (reg/f:DI 88 [ _44 ]) [7 MEM[(struct PyObject *)_44].ob_refcnt+0 S8 A64])
        (reg:DI 126)) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
;;  succ:       9 [always]  count:526133498 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       37 [always]  count:225485782 (estimated locally) (FALLTHRU)
;;              8 [always]  count:526133498 (estimated locally) (FALLTHRU)
(code_label 261 41 42 9 798 (nil) [0 uses])
(note 42 261 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [31 MEM[(struct handle *)&D.330201].m_p+0 S8 A128])
        (reg/f:DI 88 [ _44 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 44 43 45 9 (set (reg:DI 5 di)
        (const_int 32 [0x20])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 45 44 272 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 10 [0xa])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       13 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 [always (adjusted)]  count:751619281 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 0, count 751619281 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [always (adjusted)]  count:751619281 (estimated locally) (FALLTHRU)
(note 272 45 46 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 46 272 47 10 (set (reg/f:DI 127)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 127)
        (nil)))
(insn 47 46 49 10 (set (reg/f:DI 96 [ _63 ])
        (reg/f:DI 127)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 49 47 50 10 (set (reg/f:DI 92 [ _55 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [31 MEM[(const struct handle &)&D.330201].m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":105:33 74 {*movdi_internal}
     (nil))
(insn 50 49 51 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ _55 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":557:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 51 50 52 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) "/usr/include/python3.10/object.h":557:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 245)
;;  succ:       11 [70.0% (guessed)]  count:526133499 (estimated locally) (FALLTHRU)
;;              36 [30.0% (guessed)]  count:225485782 (estimated locally)

;; basic block 11, loop depth 0, count 473520148 (estimated locally), maybe hot
;; Invalid sum of incoming counts 526133499 (estimated locally), should be 473520148 (estimated locally)
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [70.0% (guessed)]  count:526133499 (estimated locally) (FALLTHRU)
(note 52 51 53 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 11 (set (reg:DI 93 [ _56 ])
        (mem:DI (reg/f:DI 92 [ _55 ]) [7 MEM[(struct PyObject *)_55].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 54 53 55 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [31 MEM[(struct handle *)&D.330210].m_p+0 S8 A64])
        (reg/f:DI 92 [ _55 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 55 54 56 11 (set (reg:V2SI 128)
        (mem/u/c:V2SI (symbol_ref/u:DI ("*.LC22") [flags 0x2]) [0  S8 A64])) "/usr/include/c++/11/bits/shared_ptr_base.h":127:9 1287 {*movv2si_internal}
     (nil))
(insn 56 55 57 11 (set (mem:V2SI (plus:DI (reg/f:DI 96 [ _63 ])
                (const_int 8 [0x8])) [35 MEM <vector(2) int> [(int *)_63 + 8B]+0 S8 A64])
        (reg:V2SI 128)) "/usr/include/c++/11/bits/shared_ptr_base.h":127:9 1287 {*movv2si_internal}
     (nil))
(insn 57 56 58 11 (set (reg:DI 130)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE")  <var_decl 0x7f1a35649ea0 _ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/bits/shared_ptr_base.h":436:41 74 {*movdi_internal}
     (nil))
(insn 58 57 59 11 (set (reg/f:DI 129)
        (plus:DI (reg:DI 130)
            (const_int 16 [0x10]))) "/usr/include/c++/11/bits/shared_ptr_base.h":436:41 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE")  <var_decl 0x7f1a35649ea0 _ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 59 58 60 11 (set (mem/f:DI (reg/f:DI 96 [ _63 ]) [5 *_63.D.307552._vptr._Sp_counted_base+0 S8 A64])
        (reg/f:DI 129)) "/usr/include/c++/11/bits/shared_ptr_base.h":436:41 74 {*movdi_internal}
     (nil))
(insn 60 59 61 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [31 MEM[(struct handle *)&D.330222].m_p+0 S8 A128])
        (reg/f:DI 92 [ _55 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 61 60 62 11 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg:DI 93 [ _56 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 62 61 254 11 (set (mem:DI (reg/f:DI 92 [ _55 ]) [7 MEM[(struct PyObject *)_55].ob_refcnt+0 S8 A64])
        (reg:DI 131)) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
;;  succ:       12 [always]  count:473520148 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 676457352 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       36 [always]  count:202937204 (estimated locally) (FALLTHRU)
;;              11 [always]  count:473520148 (estimated locally) (FALLTHRU)
(code_label 254 62 63 12 797 (nil) [0 uses])
(note 63 254 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (mem/f:DI (plus:DI (reg/f:DI 96 [ _63 ])
                (const_int 16 [0x10])) [31 MEM[(struct handle *)_63 + 16B].m_p+0 S8 A64])
        (reg/f:DI 92 [ _55 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 65 64 66 12 (set (mem/f:DI (plus:DI (reg/f:DI 96 [ _63 ])
                (const_int 24 [0x18])) [43 MEM[(struct _Impl *)_63 + 16B]._M_ptr+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":418:49 74 {*movdi_internal}
     (nil))
(insn 66 65 67 12 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":436:9 210 {*adddi_1}
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg:DI 132)) "/usr/include/c++/11/bits/shared_ptr_base.h":436:9 74 {*movdi_internal}
     (nil))
(call_insn 68 67 69 12 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":436:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 69 68 70 12 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":631:8 210 {*adddi_1}
     (nil))
(insn 70 69 71 12 (set (reg:DI 5 di)
        (reg:DI 133)) "/usr/include/c++/11/bits/shared_ptr_base.h":631:8 74 {*movdi_internal}
     (nil))
(call_insn 71 70 72 12 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":631:8 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 72 71 73 12 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":618:57 210 {*adddi_1}
     (nil))
(insn 73 72 74 12 (set (reg:DI 5 di)
        (reg:DI 134)) "/usr/include/c++/11/bits/shared_ptr_base.h":618:57 74 {*movdi_internal}
     (nil))
(call_insn 74 73 75 12 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":618:57 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 75 74 76 12 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":1108:17 210 {*adddi_1}
     (nil))
(insn 76 75 77 12 (set (reg:DI 5 di)
        (reg:DI 135)) "/usr/include/c++/11/bits/shared_ptr_base.h":1108:17 74 {*movdi_internal}
     (nil))
(call_insn 77 76 78 12 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":1108:17 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 78 77 79 12 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr.h":178:48 210 {*adddi_1}
     (nil))
(insn 79 78 80 12 (set (reg:DI 5 di)
        (reg:DI 136)) "/usr/include/c++/11/bits/shared_ptr.h":178:48 74 {*movdi_internal}
     (nil))
(call_insn 80 79 81 12 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr.h":178:48 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 81 80 82 12 (parallel [
            (set (reg:DI 137)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 82 81 83 12 (set (reg:DI 5 di)
        (reg:DI 137)) 74 {*movdi_internal}
     (nil))
(call_insn 83 82 84 12 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 12 (set (reg/f:DI 86 [ _22 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [31 D.303116.m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 85 84 86 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 86 [ _22 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 86 85 283 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 231)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 231)
;;  succ:       35 [30.0% (guessed)]  count:202937204 (estimated locally)
;;              18 [70.0% (guessed)]  count:473520148 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 0 (precise), probably never executed
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       9 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 283 86 285 13 802 (nil) [1 uses])
(note 285 283 284 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 284 285 90 13 (set (reg:DI 138)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/shared_ptr_base.h":635:4 74 {*movdi_internal}
     (nil))
;;  succ:       14 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 14, loop depth 0, count 0 (precise), probably never executed
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 90 284 91 14 782 (nil) [0 uses])
(note 91 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 14 (set (reg/f:DI 95 [ _58 ])
        (reg:DI 138)) "/usr/include/c++/11/bits/shared_ptr_base.h":635:4 74 {*movdi_internal}
     (nil))
(insn 93 92 94 14 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _58 ])) "/usr/include/c++/11/bits/shared_ptr_base.h":635:4 74 {*movdi_internal}
     (nil))
(call_insn 94 93 95 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/shared_ptr_base.h":635:4 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 95 94 96 14 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":637:11 210 {*adddi_1}
     (nil))
(insn 96 95 97 14 (set (reg:DI 4 si)
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":637:11 74 {*movdi_internal}
     (nil))
(insn 97 96 98 14 (set (reg:DI 5 di)
        (reg:DI 139)) "/usr/include/c++/11/bits/shared_ptr_base.h":637:11 74 {*movdi_internal}
     (nil))
(call_insn 98 97 99 14 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterclEPKv") [flags 0x41]  <function_decl 0x7f1a3a9fb200 operator()>) [0 operator() S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":637:11 813 {*call}
     (expr_list:REG_EH_REGION (const_int 9 [0x9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterclEPKv") [flags 0x41]  <function_decl 0x7f1a3a9fb200 operator()>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       15 [never]  count:0 (precise) (FALLTHRU)
;;              16 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 15, loop depth 0, count 0 (precise), probably never executed
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [never]  count:0 (precise) (FALLTHRU)
(note 99 98 100 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 100 99 279 15 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":638:8 813 {*call}
     (expr_list:REG_EH_REGION (const_int 9 [0x9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       16 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 16, loop depth 0, count 0 (precise), probably never executed
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       14 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 279 100 282 16 801 (nil) [1 uses])
(note 282 279 280 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 280 282 102 16 (set (reg:DI 141)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/shared_ptr_base.h":635:4 74 {*movdi_internal}
     (nil))
;;  succ:       17 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 17, loop depth 0, count 0 (precise), probably never executed
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 102 280 103 17 783 (nil) [0 uses])
(note 103 102 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn 104 103 105 17 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":635:4 813 {*call}
     (expr_list:REG_EH_REGION (const_int -21 [0xffffffffffffffeb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 105 104 107 17 (set (reg:DI 140)
        (reg:DI 141)) 74 {*movdi_internal}
     (nil))
(insn 107 105 108 17 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":618:57 210 {*adddi_1}
     (nil))
(insn 108 107 109 17 (set (reg:DI 5 di)
        (reg:DI 144)) "/usr/include/c++/11/bits/shared_ptr_base.h":618:57 74 {*movdi_internal}
     (nil))
(call_insn 109 108 110 17 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":618:57 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 110 109 112 17 (set (reg:DI 145)
        (reg:DI 140)) 74 {*movdi_internal}
     (nil))
(insn 112 110 113 17 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":1108:17 210 {*adddi_1}
     (nil))
(insn 113 112 114 17 (set (reg:DI 5 di)
        (reg:DI 147)) "/usr/include/c++/11/bits/shared_ptr_base.h":1108:17 74 {*movdi_internal}
     (nil))
(call_insn 114 113 115 17 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":1108:17 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 115 114 117 17 (set (reg:DI 148)
        (reg:DI 145)) 74 {*movdi_internal}
     (nil))
(insn 117 115 118 17 (parallel [
            (set (reg:DI 150)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr.h":178:48 210 {*adddi_1}
     (nil))
(insn 118 117 119 17 (set (reg:DI 5 di)
        (reg:DI 150)) "/usr/include/c++/11/bits/shared_ptr.h":178:48 74 {*movdi_internal}
     (nil))
(call_insn 119 118 120 17 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr.h":178:48 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 120 119 122 17 (set (reg:DI 151)
        (reg:DI 148)) 74 {*movdi_internal}
     (nil))
(insn 122 120 123 17 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 123 122 124 17 (set (reg:DI 5 di)
        (reg:DI 153)) 74 {*movdi_internal}
     (nil))
(call_insn 124 123 125 17 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter18shared_ptr_deleterD1Ev") [flags 0x41]  <function_decl 0x7f1a3a9fb500 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 125 124 130 17 (set (reg:DI 154)
        (reg:DI 151)) 74 {*movdi_internal}
     (nil))
;;  succ:       34 [always]  count:0 (precise) (FALLTHRU)

;; basic block 18, loop depth 0, count 473520148 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       12 [70.0% (guessed)]  count:473520148 (estimated locally) (FALLTHRU)
(note 130 125 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 134 18 (set (reg:DI 103 [ _74 ])
        (mem:DI (reg/f:DI 86 [ _22 ]) [7 MEM[(const struct PyObject *)_22].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 134 131 135 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 103 [ _74 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 135 134 136 18 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 146)
;;  succ:       20 [100.0% (guessed)]  count:473330740 (estimated locally)
;;              19 [0.0% (guessed)]  count:189408 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 0, count 189408 (estimated locally)
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [0.0% (guessed)]  count:189408 (estimated locally) (FALLTHRU)
(note 136 135 137 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 19 (set (reg:DI 156)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 138 137 139 19 (set (reg:DI 2 cx)
        (reg:DI 156)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)
        (nil)))
(insn 139 138 140 19 (set (reg:SI 1 dx)
        (const_int 37 [0x25])) "/usr/include/boost/python/refcount.hpp":37:5 75 {*movsi_internal}
     (nil))
(insn 140 139 141 19 (set (reg:DI 157)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 141 140 142 19 (set (reg:DI 4 si)
        (reg:DI 157)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)
        (nil)))
(insn 142 141 143 19 (set (reg:DI 158)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 143 142 144 19 (set (reg:DI 5 di)
        (reg:DI 158)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)
        (nil)))
(call_insn 144 143 146 19 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/refcount.hpp":37:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 20, loop depth 0, count 473387563 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       18 [100.0% (guessed)]  count:473330740 (estimated locally)
(code_label 146 144 147 20 785 (nil) [1 uses])
(note 147 146 148 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 20 (parallel [
            (set (reg:DI 104 [ _76 ])
                (plus:DI (reg:DI 103 [ _74 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 149 148 150 20 (set (mem:DI (reg/f:DI 86 [ _22 ]) [7 MEM[(struct PyObject *)_22].ob_refcnt+0 S8 A64])
        (reg:DI 104 [ _76 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 150 149 151 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 104 [ _76 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 151 150 152 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 231)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 231)
;;  succ:       35 [67.0% (guessed)]  count:317169668 (estimated locally)
;;              21 [33.0% (guessed)]  count:156217895 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 0, count 156217895 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [33.0% (guessed)]  count:156217895 (estimated locally) (FALLTHRU)
(note 152 151 153 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 21 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _22 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 154 153 237 21 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -16 [0xfffffffffffffff0])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       35 [always]  count:156217895 (estimated locally) (FALLTHRU)

;; basic block 22, loop depth 0, count 317169669 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       35 [67.0% (guessed)]  count:317169669 (estimated locally)
(code_label 237 154 157 22 795 (nil) [1 uses])
(note 157 237 158 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 161 22 (parallel [
            (set (mem:SI (plus:DI (reg/f:DI 96 [ _63 ])
                        (const_int 8 [0x8])) [35 MEM[(_Atomic_word *)_63 + 8B]+0 S4 A32])
                (plus:SI (mem:SI (plus:DI (reg/f:DI 96 [ _63 ])
                            (const_int 8 [0x8])) [35 MEM[(_Atomic_word *)_63 + 8B]+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/atomicity.h":92:12 209 {*addsi_1}
     (nil))
;;  succ:       24 [always]  count:317169669 (estimated locally) (FALLTHRU)

;; basic block 23, loop depth 0, count 359098277 (estimated locally), maybe hot
;; Invalid sum of incoming counts 156217895 (estimated locally), should be 359098277 (estimated locally)
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       35 [33.0% (guessed)]  count:156217895 (estimated locally) (FALLTHRU)
(note 161 158 162 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 23 (parallel [
            (set (mem/v:SI (reg/f:DI 99 [ _70 ]) [-1  S4 A32])
                (unspec_volatile:SI [
                        (plus:SI (mem/v:SI (reg/f:DI 99 [ _70 ]) [-1  S4 A32])
                            (const_int 1 [0x1]))
                        (const_int 4 [0x4])
                    ] UNSPECV_LOCK))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/atomicity.h":71:23 5989 {atomic_addsi}
     (nil))
(insn 163 162 164 23 (set (reg/f:DI 159)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_single_threaded") [flags 0x40]  <var_decl 0x7f1a3fd8af30 __libc_single_threaded>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/ext/atomicity.h":52:14 74 {*movdi_internal}
     (nil))
(insn 164 163 165 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 159) [0 __libc_single_threaded+0 S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/atomicity.h":98:5 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 165 164 166 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "/usr/include/c++/11/ext/atomicity.h":98:5 806 {*jcc}
     (int_list:REG_BR_PROB 667297188 (nil))
 -> 173)
;;  succ:       24 [37.9% (guessed)]  count:135929857 (estimated locally) (FALLTHRU)
;;              25 [62.1% (guessed)]  count:223168422 (estimated locally)

;; basic block 24, loop depth 0, count 242272315 (estimated locally), maybe hot
;; Invalid sum of incoming counts 453099526 (estimated locally), should be 242272315 (estimated locally)
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 [37.9% (guessed)]  count:135929857 (estimated locally) (FALLTHRU)
;;              22 [always]  count:317169669 (estimated locally) (FALLTHRU)
(code_label 166 165 167 24 787 (nil) [0 uses])
(note 167 166 168 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 24 (set (reg/v:SI 105 [ __result ])
        (mem:SI (plus:DI (reg/f:DI 96 [ _63 ])
                (const_int 8 [0x8])) [35 MEM[(_Atomic_word *)_63 + 8B]+0 S4 A32])) "/usr/include/c++/11/ext/atomicity.h":84:18 75 {*movsi_internal}
     (nil))
(insn 169 168 170 24 (parallel [
            (set (reg:SI 160)
                (plus:SI (reg/v:SI 105 [ __result ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/atomicity.h":85:12 209 {*addsi_1}
     (nil))
(insn 170 169 173 24 (set (mem:SI (plus:DI (reg/f:DI 96 [ _63 ])
                (const_int 8 [0x8])) [35 MEM[(_Atomic_word *)_63 + 8B]+0 S4 A32])
        (reg:SI 160)) "/usr/include/c++/11/ext/atomicity.h":85:12 75 {*movsi_internal}
     (nil))
;;  succ:       26 [always]  count:242272315 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 0, count 119328154 (estimated locally), maybe hot
;; Invalid sum of incoming counts 223168422 (estimated locally), should be 119328154 (estimated locally)
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       23 [62.1% (guessed)]  count:223168422 (estimated locally)
(code_label 173 170 174 25 788 (nil) [1 uses])
(note 174 173 175 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 25 (parallel [
            (set (reg:SI 107 [ _81 ])
                (unspec_volatile:SI [
                        (mem/v:SI (reg/f:DI 99 [ _70 ]) [-1  S4 A32])
                        (const_int 4 [0x4])
                    ] UNSPECV_XCHG))
            (set (mem/v:SI (reg/f:DI 99 [ _70 ]) [-1  S4 A32])
                (plus:SI (mem/v:SI (reg/f:DI 99 [ _70 ]) [-1  S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/atomicity.h":66:30 5977 {atomic_fetch_addsi}
     (nil))
(insn 176 175 177 25 (set (reg/v:SI 105 [ __result ])
        (reg:SI 107 [ _81 ])) "/usr/include/c++/11/ext/atomicity.h":66:61 75 {*movsi_internal}
     (nil))
;;  succ:       26 [always]  count:119328154 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 0, count 361600470 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       24 [always]  count:242272315 (estimated locally) (FALLTHRU)
;;              25 [always]  count:119328154 (estimated locally) (FALLTHRU)
(code_label 177 176 178 26 789 (nil) [0 uses])
(note 178 177 179 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 105 [ __result ])
            (const_int 1 [0x1]))) "/usr/include/c++/11/bits/shared_ptr_base.h":165:2 11 {*cmpsi_1}
     (nil))
(jump_insn 180 179 184 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) "/usr/include/c++/11/bits/shared_ptr_base.h":165:2 806 {*jcc}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 184)
;;  succ:       27 [34.0% (guessed)]  count:122944161 (estimated locally)
;;              32 [66.0% (guessed)]  count:238656309 (estimated locally) (FALLTHRU)

;; basic block 27, loop depth 0, count 122944161 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [34.0% (guessed)]  count:122944161 (estimated locally)
(code_label 184 180 185 27 790 (nil) [1 uses])
(note 185 184 186 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 27 (set (reg/f:DI 161)
        (mem/f:DI (reg/f:DI 96 [ _63 ]) [5 MEM[(struct _Sp_counted_base *)_63]._vptr._Sp_counted_base+0 S8 A64])) "/usr/include/c++/11/bits/shared_ptr_base.h":168:16 74 {*movdi_internal}
     (nil))
(insn 187 186 188 27 (set (reg/f:DI 162)
        (mem/f:DI (plus:DI (reg/f:DI 161)
                (const_int 16 [0x10])) [38 MEM[(int (*) () *)_84 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/shared_ptr_base.h":168:16 74 {*movdi_internal}
     (nil))
(insn 188 187 189 27 (set (reg:DI 5 di)
        (reg/f:DI 96 [ _63 ])) "/usr/include/c++/11/bits/shared_ptr_base.h":168:16 74 {*movdi_internal}
     (nil))
(call_insn 189 188 190 27 (call (mem:QI (reg/f:DI 162) [0 *OBJ_TYPE_REF(_85;_63->2) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":168:16 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 190 189 191 27 (set (reg/f:DI 163)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_single_threaded") [flags 0x40]  <var_decl 0x7f1a3fd8af30 __libc_single_threaded>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/ext/atomicity.h":52:14 74 {*movdi_internal}
     (nil))
(insn 191 190 192 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 163) [0 __libc_single_threaded+0 S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/atomicity.h":98:5 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 192 191 193 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) "/usr/include/c++/11/ext/atomicity.h":98:5 806 {*jcc}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 199)
;;  succ:       28 [67.0% (guessed)]  count:82372588 (estimated locally) (FALLTHRU)
;;              29 [33.0% (guessed)]  count:40571573 (estimated locally)

;; basic block 28, loop depth 0, count 82372588 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 [67.0% (guessed)]  count:82372588 (estimated locally) (FALLTHRU)
(note 193 192 194 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 28 (set (reg/v:SI 112 [ __result ])
        (mem:SI (plus:DI (reg/f:DI 96 [ _63 ])
                (const_int 12 [0xc])) [35 MEM[(_Atomic_word *)_63 + 12B]+0 S4 A32])) "/usr/include/c++/11/ext/atomicity.h":84:18 75 {*movsi_internal}
     (nil))
(insn 195 194 196 28 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg/v:SI 112 [ __result ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/atomicity.h":85:12 209 {*addsi_1}
     (nil))
(insn 196 195 199 28 (set (mem:SI (plus:DI (reg/f:DI 96 [ _63 ])
                (const_int 12 [0xc])) [35 MEM[(_Atomic_word *)_63 + 12B]+0 S4 A32])
        (reg:SI 164)) "/usr/include/c++/11/ext/atomicity.h":85:12 75 {*movsi_internal}
     (nil))
;;  succ:       30 [always]  count:82372588 (estimated locally) (FALLTHRU)

;; basic block 29, loop depth 0, count 40571573 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       27 [33.0% (guessed)]  count:40571573 (estimated locally)
(code_label 199 196 200 29 792 (nil) [1 uses])
(note 200 199 201 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 29 (parallel [
            (set (reg:SI 114 [ _90 ])
                (unspec_volatile:SI [
                        (mem/v:SI (plus:DI (reg/f:DI 96 [ _63 ])
                                (const_int 12 [0xc])) [-1  S4 A32])
                        (const_int 4 [0x4])
                    ] UNSPECV_XCHG))
            (set (mem/v:SI (plus:DI (reg/f:DI 96 [ _63 ])
                        (const_int 12 [0xc])) [-1  S4 A32])
                (plus:SI (mem/v:SI (plus:DI (reg/f:DI 96 [ _63 ])
                            (const_int 12 [0xc])) [-1  S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/atomicity.h":66:30 5977 {atomic_fetch_addsi}
     (nil))
(insn 202 201 203 29 (set (reg/v:SI 112 [ __result ])
        (reg:SI 114 [ _90 ])) "/usr/include/c++/11/ext/atomicity.h":66:61 75 {*movsi_internal}
     (nil))
;;  succ:       30 [always]  count:40571573 (estimated locally) (FALLTHRU)

;; basic block 30, loop depth 0, count 122944161 (estimated locally), maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       28 [always]  count:82372588 (estimated locally) (FALLTHRU)
;;              29 [always]  count:40571573 (estimated locally) (FALLTHRU)
(code_label 203 202 204 30 793 (nil) [0 uses])
(note 204 203 206 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 206 204 207 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 112 [ __result ])
            (const_int 1 [0x1]))) "/usr/include/c++/11/bits/shared_ptr_base.h":180:6 11 {*cmpsi_1}
     (nil))
(jump_insn 207 206 208 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 215)
            (pc))) "/usr/include/c++/11/bits/shared_ptr_base.h":180:6 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 215)
;;  succ:       31 [34.0% (guessed)]  count:41801015 (estimated locally) (FALLTHRU)
;;              32 [66.0% (guessed)]  count:81143146 (estimated locally)

;; basic block 31, loop depth 0, count 41801015 (estimated locally), maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 [34.0% (guessed)]  count:41801015 (estimated locally) (FALLTHRU)
(note 208 207 209 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 31 (set (reg/f:DI 165)
        (mem/f:DI (reg/f:DI 96 [ _63 ]) [5 MEM[(struct _Sp_counted_base *)_63]._vptr._Sp_counted_base+0 S8 A64])) "/usr/include/c++/11/bits/shared_ptr_base.h":184:20 74 {*movdi_internal}
     (nil))
(insn 210 209 211 31 (set (reg/f:DI 166)
        (mem/f:DI (plus:DI (reg/f:DI 165)
                (const_int 24 [0x18])) [38 MEM[(int (*) () *)_93 + 24B]+0 S8 A64])) "/usr/include/c++/11/bits/shared_ptr_base.h":184:20 74 {*movdi_internal}
     (nil))
(insn 211 210 212 31 (set (reg:DI 5 di)
        (reg/f:DI 96 [ _63 ])) "/usr/include/c++/11/bits/shared_ptr_base.h":184:20 74 {*movdi_internal}
     (nil))
(call_insn 212 211 215 31 (call (mem:QI (reg/f:DI 166) [0 *OBJ_TYPE_REF(_94;_63->3) S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/shared_ptr_base.h":184:20 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       32 [always]  count:41801015 (estimated locally) (FALLTHRU)

;; basic block 32, loop depth 0, count 998390490 (estimated locally), maybe hot
;; Invalid sum of incoming counts 683723014 (estimated locally), should be 998390490 (estimated locally)
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       3 [always]  count:322122544 (estimated locally) (FALLTHRU)
;;              31 [always]  count:41801015 (estimated locally) (FALLTHRU)
;;              26 [66.0% (guessed)]  count:238656309 (estimated locally) (FALLTHRU)
;;              30 [66.0% (guessed)]  count:81143146 (estimated locally)
(code_label 215 212 216 32 776 (nil) [1 uses])
(note 216 215 217 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 265 32 (set (mem/f:DI (reg/v/f:DI 121 [ data ]) [43 data_5(D)->convertible+0 S8 A64])
        (reg/v/f:DI 83 [ storage ])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":59:23 74 {*movdi_internal}
     (nil))
(insn 265 217 266 32 (set (reg/f:DI 174)
        (const_int 40 [0x28])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":60:3 74 {*movdi_internal}
     (nil))
(insn 266 265 267 32 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.330252+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 174) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":60:3 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 267 266 275 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":60:3 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 270)
;;  succ:       39 [100.0% (guessed)]  count:997991134 (estimated locally)
;;              38 [0.0% (guessed)]  count:399356 (estimated locally) (FALLTHRU)

;; basic block 33, loop depth 0, count 0 (precise), probably never executed
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       6 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 275 267 278 33 800 (nil) [1 uses])
(note 278 275 276 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 276 278 220 33 (set (reg:DI 154)
        (reg:DI 0 ax)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
;;  succ:       34 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 34, loop depth 0, count 0 (precise), probably never executed
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              17 [always]  count:0 (precise) (FALLTHRU)
(code_label 220 276 221 34 784 (nil) [0 uses])
(note 221 220 222 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 34 (set (reg:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [31 D.303116.m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 223 222 224 34 (set (reg:DI 5 di)
        (reg:DI 167)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 224 223 225 34 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -17 [0xffffffffffffffef])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 225 224 226 34 (set (reg/f:DI 119 [ D.330251 ])
        (reg:DI 154)) 74 {*movdi_internal}
     (nil))
(insn 226 225 227 34 (set (reg:DI 5 di)
        (reg/f:DI 119 [ D.330251 ])) 74 {*movdi_internal}
     (nil))
(call_insn 227 226 231 34 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 35, loop depth 0, count 473387564 (estimated locally), maybe hot
;; Invalid sum of incoming counts 676324767 (estimated locally), should be 473387564 (estimated locally)
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       21 [always]  count:156217895 (estimated locally) (FALLTHRU)
;;              20 [67.0% (guessed)]  count:317169668 (estimated locally)
;;              12 [30.0% (guessed)]  count:202937204 (estimated locally)
(code_label 231 227 232 35 786 (nil) [2 uses])
(note 232 231 233 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 35 (set (reg/f:DI 169)
        (mem/f:DI (reg/v/f:DI 121 [ data ]) [43 data_5(D)->convertible+0 S8 A64])) "/usr/include/c++/11/bits/shared_ptr_base.h":1139:4 74 {*movdi_internal}
     (nil))
(insn 234 233 235 35 (set (reg:V2DI 168)
        (vec_concat:V2DI (reg/f:DI 169)
            (reg/f:DI 96 [ _63 ]))) "/usr/include/c++/11/bits/shared_ptr_base.h":1139:4 4306 {vec_concatv2di}
     (nil))
(insn 235 234 236 35 (set (mem:V2DI (plus:DI (reg/v/f:DI 121 [ data ])
                (const_int 16 [0x10])) [0 MEM <vector(2) long unsigned int> [(void *)data_5(D) + 16B]+0 S16 A64])
        (reg:V2DI 168)) "/usr/include/c++/11/bits/shared_ptr_base.h":1139:4 1439 {movv2di_internal}
     (nil))
(insn 236 235 238 35 (parallel [
            (set (reg/f:DI 99 [ _70 ])
                (plus:DI (reg/f:DI 96 [ _63 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/shared_ptr_base.h":148:41 210 {*adddi_1}
     (nil))
(insn 238 236 239 35 (set (reg/f:DI 170)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_single_threaded") [flags 0x40]  <var_decl 0x7f1a3fd8af30 __libc_single_threaded>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/ext/atomicity.h":52:14 74 {*movdi_internal}
     (nil))
(insn 239 238 240 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 170) [0 __libc_single_threaded+0 S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/atomicity.h":108:5 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 240 239 245 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) "/usr/include/c++/11/ext/atomicity.h":108:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 237)
;;  succ:       22 [67.0% (guessed)]  count:317169669 (estimated locally)
;;              23 [33.0% (guessed)]  count:156217895 (estimated locally) (FALLTHRU)

;; basic block 36, loop depth 0, count 202937204 (estimated locally), maybe hot
;; Invalid sum of incoming counts 225485782 (estimated locally), should be 202937204 (estimated locally)
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       10 [30.0% (guessed)]  count:225485782 (estimated locally)
(code_label 245 240 246 36 779 (nil) [1 uses])
(note 246 245 247 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 36 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [31 MEM[(struct handle *)&D.330210].m_p+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 248 247 249 36 (set (reg:V2SI 171)
        (mem/u/c:V2SI (symbol_ref/u:DI ("*.LC22") [flags 0x2]) [0  S8 A64])) "/usr/include/c++/11/bits/shared_ptr_base.h":127:9 1287 {*movv2si_internal}
     (nil))
(insn 249 248 250 36 (set (mem:V2SI (plus:DI (reg/f:DI 96 [ _63 ])
                (const_int 8 [0x8])) [35 MEM <vector(2) int> [(int *)_63 + 8B]+0 S8 A64])
        (reg:V2SI 171)) "/usr/include/c++/11/bits/shared_ptr_base.h":127:9 1287 {*movv2si_internal}
     (nil))
(insn 250 249 251 36 (set (reg:DI 173)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE")  <var_decl 0x7f1a35649ea0 _ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/bits/shared_ptr_base.h":436:41 74 {*movdi_internal}
     (nil))
(insn 251 250 252 36 (set (reg/f:DI 172)
        (plus:DI (reg:DI 173)
            (const_int 16 [0x10]))) "/usr/include/c++/11/bits/shared_ptr_base.h":436:41 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE")  <var_decl 0x7f1a35649ea0 _ZTVSt19_Sp_counted_deleterIPvN5boost6python9converter18shared_ptr_deleterESaIvELN9__gnu_cxx12_Lock_policyE2EE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 252 251 253 36 (set (mem/f:DI (reg/f:DI 96 [ _63 ]) [5 *_63.D.307552._vptr._Sp_counted_base+0 S8 A64])
        (reg/f:DI 172)) "/usr/include/c++/11/bits/shared_ptr_base.h":436:41 74 {*movdi_internal}
     (nil))
(insn 253 252 257 36 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [31 MEM[(struct handle *)&D.330222].m_p+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
;;  succ:       12 [always]  count:202937204 (estimated locally) (FALLTHRU)

;; basic block 37, loop depth 0, count 225485782 (estimated locally), maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       7 [30.0% (guessed)]  count:225485782 (estimated locally)
(code_label 257 253 258 37 778 (nil) [1 uses])
(note 258 257 259 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 37 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [31 MEM[(struct handle *)&D.330191].m_p+0 S8 A128])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 260 259 273 37 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [31 MEM[(struct handle *)&D.330196].m_p+0 S8 A64])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
;;  succ:       9 [always]  count:225485782 (estimated locally) (FALLTHRU)

;; basic block 38, loop depth 0, count 399356 (estimated locally)
;;  prev block 37, next block 39, flags: (RTL)
;;  pred:       32 [0.0% (guessed)]  count:399356 (estimated locally) (FALLTHRU)
(note 273 260 268 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(call_insn 268 273 270 38 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/converter/shared_ptr_from_python.hpp":60:3 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 39, loop depth 0, count 997991134 (estimated locally), maybe hot
;;  prev block 38, next block 1, flags: (RTL)
;;  pred:       32 [100.0% (guessed)]  count:997991134 (estimated locally)
(code_label 270 268 274 39 799 (nil) [1 uses])
(note 274 270 0 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:997991134 (estimated locally) (FALLTHRU)


;; Function std::vector<int>::_M_realloc_insert<int> (_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, funcdef_no=12499, decl_uid=293064, cgraph_uid=4413, symbol_order=5333)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/f:DI 120 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/c++/11/bits/vector.tcc":426:7 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 121 [ __position ])
        (reg:DI 4 si [ __position ])) "/usr/include/c++/11/bits/vector.tcc":426:7 74 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 122 [ __args#0 ])
        (reg:DI 1 dx [ __args#0 ])) "/usr/include/c++/11/bits/vector.tcc":426:7 74 {*movdi_internal}
     (nil))
(note 5 4 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 5 12 2 (set (reg/f:DI 91 [ __position ])
        (reg/v:DI 121 [ __position ])) 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 99 [ _48 ])
        (mem/f:DI (reg/f:DI 120 [ this ]) [142 MEM[(int * *)this_18(D)]+0 S8 A64])) 74 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 100 [ _49 ])
        (mem/f:DI (plus:DI (reg/f:DI 120 [ this ])
                (const_int 8 [0x8])) [142 MEM[(int * *)this_18(D) + 8B]+0 S8 A64])) 74 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 123)
                (minus:DI (reg/f:DI 100 [ _49 ])
                    (reg/f:DI 99 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 124)
                (ashiftrt:DI (reg:DI 123)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 704 {*ashrdi3_1}
     (expr_list:REG_EQUAL (div:DI (reg:DI 123)
            (const_int 4 [0x4]))
        (nil)))
(insn 16 15 17 2 (set (reg:DI 103 [ _54 ])
        (reg:DI 124)) "/usr/include/c++/11/bits/stl_vector.h":919:74 74 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 125)
        (const_int 2305843009213693951 [0x1fffffffffffffff])) "/usr/include/c++/11/bits/stl_vector.h":1758:2 74 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 103 [ _54 ])
            (reg:DI 125))) "/usr/include/c++/11/bits/stl_vector.h":1758:2 12 {*cmpdi_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1758:2 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 25)
;;  succ:       3 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
;;              4 [100.0% (guessed)]  count:1073312328 (estimated locally)

;; basic block 3, loop depth 0, count 429496 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg:DI 126)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f1a3375b240 *.LC23>)) "/usr/include/c++/11/bits/stl_vector.h":1759:24 74 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 126)) "/usr/include/c++/11/bits/stl_vector.h":1759:24 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f1a3375b240 *.LC23>)
        (nil)))
(call_insn 23 22 25 3 (call (mem:QI (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7f1a40e4a200 __throw_length_error>) [0 __throw_length_error S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1759:24 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7f1a40e4a200 __throw_length_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 4, loop depth 0, count 1073312330 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:1073312328 (estimated locally)
(code_label 25 23 26 4 818 (nil) [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (parallel [
            (set (reg:DI 127)
                (umax:DI (reg:DI 103 [ _54 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 1139 {*umaxdi3_1}
     (nil))
(insn 28 27 29 4 (set (reg:DI 95 [ _13+8 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:CCC 17 flags)
                (compare:CCC (plus:DI (reg:DI 103 [ _54 ])
                        (reg:DI 127))
                    (reg:DI 103 [ _54 ])))
            (set (reg:DI 128)
                (plus:DI (reg:DI 103 [ _54 ])
                    (reg:DI 127)))
        ]) 358 {*adddi3_cc_overflow_1}
     (nil))
(jump_insn 30 29 33 4 (set (pc)
        (if_then_else (ltu (reg:CCC 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 536868 (nil))
 -> 33)
;;  succ:       5 [0.0% (guessed)]  count:536649 (estimated locally)
;;              6 [100.0% (guessed)]  count:1072775681 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 536649 (estimated locally)
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [0.0% (guessed)]  count:536649 (estimated locally)
(code_label 33 30 133 5 820 (nil) [1 uses])
(note 133 33 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 133 35 5 (set (reg:DI 95 [ _13+8 ])
        (const_int 1 [0x1])) 74 {*movdi_internal}
     (nil))
;;  succ:       6 [always]  count:536649 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 1073312330 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [100.0% (guessed)]  count:1072775681 (estimated locally) (FALLTHRU)
;;              5 [always]  count:536649 (estimated locally) (FALLTHRU)
(code_label 35 34 134 6 819 (nil) [0 uses])
(note 134 35 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 134 37 6 (set (reg:DI 94 [ _13 ])
        (reg:DI 128)) 74 {*movdi_internal}
     (nil))
(insn 37 36 38 6 (set (reg/v:DI 107 [ __len ])
        (reg:DI 94 [ _13 ])) "/usr/include/c++/11/bits/stl_vector.h":1761:18 74 {*movdi_internal}
     (nil))
(insn 38 37 39 6 (parallel [
            (set (reg:DI 119 [ _91 ])
                (minus:DI (reg/f:DI 91 [ __position ])
                    (reg/f:DI 99 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_iterator.h":1237:27 283 {*subdi_1}
     (nil))
(insn 39 38 40 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 95 [ _13+8 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":1762:48 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 40 39 41 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 130)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1762:48 806 {*jcc}
     (int_list:REG_BR_PROB 375809644 (nil))
 -> 130)
;;  succ:       18 [35.0% (guessed)]  count:375659317 (estimated locally)
;;              7 [65.0% (guessed)]  count:697653013 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 697653013 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [65.0% (guessed)]  count:697653013 (estimated locally) (FALLTHRU)
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 107 [ __len ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 43 42 131 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 19166284 (nil))
 -> 104)
;;  succ:       17 [1.8% (guessed)]  count:12453099 (estimated locally)
;;              8 [98.2% (guessed)]  count:685199914 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 685199914 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [98.2% (guessed)]  count:685199914 (estimated locally) (FALLTHRU)
(note 131 43 6 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 6 131 7 8 (set (reg/f:DI 116 [ prephitmp_79 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 7 6 115 8 (set (reg/f:DI 97 [ iftmp.9_37 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       9 [always]  count:685199914 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 1014634344 (estimated locally), maybe hot
;; Invalid sum of incoming counts 1213301779 (estimated locally), should be 1014634344 (estimated locally)
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [always]  count:685199914 (estimated locally) (FALLTHRU)
;;              19 [always]  count:528101865 (estimated locally) (FALLTHRU)
(code_label 115 7 44 9 828 (nil) [0 uses])
(note 44 115 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg:DI 82 [ _1 ])
        (reg:DI 119 [ _91 ])) "/usr/include/c++/11/bits/vector.tcc":450:20 74 {*movdi_internal}
     (nil))
(insn 46 45 47 9 (set (reg:SI 129)
        (mem:SI (reg/v/f:DI 122 [ __args#0 ]) [35 *__args#0_24(D)+0 S4 A32])) "/usr/include/c++/11/bits/stl_construct.h":97:14 75 {*movsi_internal}
     (nil))
(insn 47 46 48 9 (set (mem:SI (plus:DI (reg/f:DI 97 [ iftmp.9_37 ])
                (reg:DI 82 [ _1 ])) [35 *_2+0 S4 A32])
        (reg:SI 129)) "/usr/include/c++/11/bits/stl_construct.h":97:14 75 {*movsi_internal}
     (nil))
(insn 48 47 49 9 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg:DI 82 [ _1 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 210 {*adddi_1}
     (nil))
(insn 49 48 50 9 (parallel [
            (set (reg/f:DI 109 [ _61 ])
                (plus:DI (reg/f:DI 97 [ iftmp.9_37 ])
                    (reg:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 210 {*adddi_1}
     (nil))
(insn 50 49 51 9 (parallel [
            (set (reg:DI 105 [ _56 ])
                (minus:DI (reg/f:DI 100 [ _49 ])
                    (reg/f:DI 91 [ __position ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1009:34 283 {*subdi_1}
     (nil))
(insn 51 50 52 9 (set (reg:DI 110 [ _62 ])
        (reg:DI 105 [ _56 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1012:23 74 {*movdi_internal}
     (nil))
(insn 52 51 53 9 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 109 [ _61 ])
                    (reg:DI 110 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1012:25 210 {*adddi_1}
     (nil))
(insn 53 52 54 9 (set (reg:V2DI 131)
        (vec_concat:V2DI (reg/f:DI 97 [ iftmp.9_37 ])
            (reg:DI 132))) 4306 {vec_concatv2di}
     (nil))
(insn 54 53 57 9 (set (reg:V2DI 98 [ _41 ])
        (reg:V2DI 131)) 1439 {movv2di_internal}
     (nil))
(insn 57 54 58 9 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 119 [ _91 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_uninitialized.h":1010:7 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 58 57 59 9 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":1010:7 806 {*jcc}
     (int_list:REG_BR_PROB 628353716 (nil))
 -> 80)
;;  succ:       10 [41.5% (guessed)]  count:420870329 (estimated locally) (FALLTHRU)
;;              12 [58.5% (guessed)]  count:593764015 (estimated locally)

;; basic block 10, loop depth 0, count 420870329 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [41.5% (guessed)]  count:420870329 (estimated locally) (FALLTHRU)
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg:DI 1 dx)
        (reg:DI 82 [ _1 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1011:19 74 {*movdi_internal}
     (nil))
(insn 61 60 62 10 (set (reg:DI 4 si)
        (reg/f:DI 99 [ _48 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1011:19 74 {*movdi_internal}
     (nil))
(insn 62 61 63 10 (set (reg:DI 5 di)
        (reg/f:DI 97 [ iftmp.9_37 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1011:19 74 {*movdi_internal}
     (nil))
(call_insn 63 62 66 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_uninitialized.h":1011:19 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 66 63 67 10 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 105 [ _56 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_uninitialized.h":1010:7 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 67 66 82 10 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":1010:7 806 {*jcc}
     (int_list:REG_BR_PROB 628353716 (nil))
 -> 118)
;;  succ:       11 [41.5% (guessed)]  count:174577014 (estimated locally) (FALLTHRU)
;;              20 [58.5% (guessed)]  count:246293315 (estimated locally)

;; basic block 11, loop depth 0, count 420870329 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [41.5% (guessed)]  count:174577014 (estimated locally) (FALLTHRU)
;;              12 [41.5% (guessed)]  count:246293315 (estimated locally)
(code_label 82 67 68 11 826 (nil) [1 uses])
(note 68 82 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 11 (set (reg:DI 133)
        (reg/f:DI 109 [ _61 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1011:19 74 {*movdi_internal}
     (nil))
(insn 70 69 71 11 (set (reg:DI 134)
        (reg/f:DI 91 [ __position ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1011:19 74 {*movdi_internal}
     (nil))
(insn 71 70 72 11 (set (reg:DI 135)
        (reg:DI 110 [ _62 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1011:19 74 {*movdi_internal}
     (nil))
(insn 72 71 73 11 (set (reg:DI 1 dx)
        (reg:DI 135)) "/usr/include/c++/11/bits/stl_uninitialized.h":1011:19 74 {*movdi_internal}
     (nil))
(insn 73 72 74 11 (set (reg:DI 4 si)
        (reg:DI 134)) "/usr/include/c++/11/bits/stl_uninitialized.h":1011:19 74 {*movdi_internal}
     (nil))
(insn 74 73 75 11 (set (reg:DI 5 di)
        (reg:DI 133)) "/usr/include/c++/11/bits/stl_uninitialized.h":1011:19 74 {*movdi_internal}
     (nil))
(call_insn 75 74 80 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f1a5189dc00 __builtin_memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_uninitialized.h":1011:19 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f1a5189dc00 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       13 [always]  count:420870329 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 593764015 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       9 [58.5% (guessed)]  count:593764015 (estimated locally)
(code_label 80 75 81 12 823 (nil) [1 uses])
(note 81 80 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 81 86 12 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 105 [ _56 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_uninitialized.h":1010:7 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 86 85 87 12 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":1010:7 806 {*jcc}
     (int_list:REG_BR_PROB 445388116 (nil))
 -> 82)
;;  succ:       11 [41.5% (guessed)]  count:246293315 (estimated locally)
;;              13 [58.5% (guessed)]  count:347470700 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 768341029 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [58.5% (guessed)]  count:347470700 (estimated locally) (FALLTHRU)
;;              11 [always]  count:420870329 (estimated locally) (FALLTHRU)
(code_label 87 86 88 13 825 (nil) [0 uses])
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ _48 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 90 89 91 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 659763764 (nil))
 -> 98)
;;  succ:       14 [38.6% (guessed)]  count:296231668 (estimated locally) (FALLTHRU)
;;              16 [61.4% (guessed)]  count:472109361 (estimated locally)

;; basic block 14, loop depth 0, count 296231668 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [38.6% (guessed)]  count:296231668 (estimated locally) (FALLTHRU)
(note 91 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 14 (set (reg/f:DI 138)
        (mem/f:DI (plus:DI (reg/f:DI 120 [ this ])
                (const_int 16 [0x10])) [142 this_18(D)->D.263939._M_impl.D.263289._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/vector.tcc":501:39 74 {*movdi_internal}
     (nil))
(insn 93 92 122 14 (parallel [
            (set (reg:DI 93 [ _12 ])
                (minus:DI (reg/f:DI 138)
                    (reg/f:DI 99 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":501:39 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 120 [ this ])
                    (const_int 16 [0x10])) [142 this_18(D)->D.263939._M_impl.D.263289._M_end_of_storage+0 S8 A64])
            (reg/f:DI 99 [ _48 ]))
        (nil)))
;;  succ:       15 [always]  count:296231668 (estimated locally) (FALLTHRU)

;; basic block 15, loop depth 0, count 542524983 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [always]  count:296231668 (estimated locally) (FALLTHRU)
;;              20 [always]  count:246293315 (estimated locally) (FALLTHRU)
(code_label 122 93 94 15 829 (nil) [0 uses])
(note 94 122 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 15 (set (reg:DI 4 si)
        (reg:DI 93 [ _12 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 96 95 97 15 (set (reg:DI 5 di)
        (reg/f:DI 99 [ _48 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 97 96 98 15 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       16 [always]  count:542524983 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 0, count 1014634344 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       13 [61.4% (guessed)]  count:472109361 (estimated locally)
;;              15 [always]  count:542524983 (estimated locally) (FALLTHRU)
(code_label 98 97 99 16 827 (nil) [1 uses])
(note 99 98 100 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 16 (set (mem:V2DI (reg/f:DI 120 [ this ]) [142 MEM <vector(2) long unsigned int> [(int * *)this_18(D)]+0 S16 A64])
        (reg:V2DI 98 [ _41 ])) "/usr/include/c++/11/bits/vector.tcc":502:30 1439 {movv2di_internal}
     (nil))
(insn 101 100 104 16 (set (mem/f:DI (plus:DI (reg/f:DI 120 [ this ])
                (const_int 16 [0x10])) [142 this_18(D)->D.263939._M_impl.D.263289._M_end_of_storage+0 S8 A64])
        (reg/f:DI 116 [ prephitmp_79 ])) "/usr/include/c++/11/bits/vector.tcc":504:39 74 {*movdi_internal}
     (nil))
;;  succ:       21 [always]  count:1014634344 (estimated locally) (FALLTHRU)

;; basic block 17, loop depth 0, count 12453099 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       7 [1.8% (guessed)]  count:12453099 (estimated locally)
(code_label 104 101 105 17 822 (nil) [1 uses])
(note 105 104 106 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 17 (parallel [
            (set (reg:DI 139)
                (umin:DI (reg/v:DI 107 [ __len ])
                    (const_int 2305843009213693951 [0x1fffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/new_allocator.h":127:41 1140 {*umindi3_1}
     (nil))
(insn 107 106 130 17 (parallel [
            (set (reg:DI 106 [ prephitmp_57 ])
                (ashift:DI (reg:DI 139)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/new_allocator.h":127:41 656 {*ashldi3_1}
     (nil))
;;  succ:       19 [always]  count:12453099 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 0, count 375659317 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       6 [35.0% (guessed)]  count:375659317 (estimated locally)
(code_label 130 107 129 18 830 (nil) [1 uses])
(note 129 130 8 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 8 129 108 18 (set (reg:DI 106 [ prephitmp_57 ])
        (const_int 9223372036854775804 [0x7ffffffffffffffc])) 74 {*movdi_internal}
     (nil))
;;  succ:       19 [always]  count:375659317 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 0, count 528101865 (estimated locally), maybe hot
;; Invalid sum of incoming counts 388112416 (estimated locally), should be 528101865 (estimated locally)
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [always]  count:375659317 (estimated locally) (FALLTHRU)
;;              17 [always]  count:12453099 (estimated locally) (FALLTHRU)
(code_label 108 8 109 19 821 (nil) [0 uses])
(note 109 108 110 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 19 (set (reg:DI 5 di)
        (reg:DI 106 [ prephitmp_57 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 111 110 112 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 19 (set (reg/f:DI 140)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 140)
        (nil)))
(insn 113 112 114 19 (set (reg/f:DI 97 [ iftmp.9_37 ])
        (reg/f:DI 140)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 114 113 118 19 (parallel [
            (set (reg/f:DI 116 [ prephitmp_79 ])
                (plus:DI (reg/f:DI 97 [ iftmp.9_37 ])
                    (reg:DI 106 [ prephitmp_57 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":504:53 210 {*adddi_1}
     (nil))
;;  succ:       9 [always]  count:528101865 (estimated locally) (FALLTHRU)

;; basic block 20, loop depth 0, count 246293315 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       10 [58.5% (guessed)]  count:246293315 (estimated locally)
(code_label 118 114 119 20 824 (nil) [1 uses])
(note 119 118 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 20 (set (reg/f:DI 141)
        (mem/f:DI (plus:DI (reg/f:DI 120 [ this ])
                (const_int 16 [0x10])) [142 this_18(D)->D.263939._M_impl.D.263289._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/vector.tcc":501:39 74 {*movdi_internal}
     (nil))
(insn 121 120 126 20 (parallel [
            (set (reg:DI 93 [ _12 ])
                (minus:DI (reg/f:DI 141)
                    (reg/f:DI 99 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":501:39 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 120 [ this ])
                    (const_int 16 [0x10])) [142 this_18(D)->D.263939._M_impl.D.263289._M_end_of_storage+0 S8 A64])
            (reg/f:DI 99 [ _48 ]))
        (nil)))
;;  succ:       15 [always]  count:246293315 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 0, count 1014634344 (estimated locally), maybe hot
;;  prev block 20, next block 1, flags: (RTL)
;;  pred:       16 [always]  count:1014634344 (estimated locally) (FALLTHRU)
(note 126 121 0 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:1014634344 (estimated locally) (FALLTHRU)


;; Function iterable_converter::construct<std::vector<int> > (_ZN18iterable_converter9constructISt6vectorIiSaIiEEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE, funcdef_no=11874, decl_uid=269462, cgraph_uid=3791, symbol_order=4697)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 154 [ object ])
        (reg:DI 5 di [ object ])) "src/ChineseCheckersWrapper.cpp":59:15 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 155 [ data ])
        (reg:DI 4 si [ data ])) "src/ChineseCheckersWrapper.cpp":59:15 74 {*movdi_internal}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 6 2 (set (reg/f:DI 156)
        (const_int 40 [0x28])) "src/ChineseCheckersWrapper.cpp":59:15 74 {*movdi_internal}
     (nil))
(insn 6 5 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.330364+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 156) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":59:15 1159 {stack_protect_set_1_di}
     (nil))
(insn 11 6 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 154 [ object ])
            (const_int 0 [0]))) "/usr/include/boost/python/errors.hpp":44:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "/usr/include/boost/python/errors.hpp":44:5 806 {*jcc}
     (int_list:REG_BR_PROB 886588628 (nil))
 -> 15)
;;  succ:       3 [17.4% (guessed)]  count:187153200 (estimated locally) (FALLTHRU)
;;              4 [82.6% (guessed)]  count:886588624 (estimated locally)

;; basic block 3, loop depth 0, count 187153201 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [17.4% (guessed)]  count:187153200 (estimated locally) (FALLTHRU)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>) [0 throw_error_already_set S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/errors.hpp":45:32 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>)
        (nil))
    (nil))
;;  succ:       4 [always]  count:187153201 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [82.6% (guessed)]  count:886588624 (estimated locally)
;;              3 [always]  count:187153201 (estimated locally) (FALLTHRU)
(code_label 15 14 16 4 840 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (parallel [
            (set (mem:DI (reg/v/f:DI 154 [ object ]) [7 *object_5(D).ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/v/f:DI 154 [ object ]) [7 *object_5(D).ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 18 17 19 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -128 [0xffffffffffffff80])) [31 handle.m_p+0 S8 A128])
        (reg/v/f:DI 154 [ object ])) "/usr/include/boost/python/handle.hpp":75:11 74 {*movdi_internal}
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg/v/f:DI 82 [ storage ])
                (plus:DI (reg/v/f:DI 155 [ data ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":71:15 210 {*adddi_1}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":81:28 210 {*adddi_1}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":81:28 210 {*adddi_1}
     (nil))
(insn 22 21 23 4 (set (reg:DI 4 si)
        (reg:DI 158)) "src/ChineseCheckersWrapper.cpp":81:28 74 {*movdi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg:DI 159)) "src/ChineseCheckersWrapper.cpp":81:28 74 {*movdi_internal}
     (nil))
(call_insn 24 23 25 4 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python3api6objectC1ERKNS0_6handleI7_objectEE") [flags 0x41]  <function_decl 0x7f1a39cd7500 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":81:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python3api6objectC1ERKNS0_6handleI7_objectEE") [flags 0x41]  <function_decl 0x7f1a39cd7500 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       73 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":34:9 210 {*adddi_1}
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":34:9 210 {*adddi_1}
     (nil))
(insn 28 27 29 5 (set (reg:DI 4 si)
        (reg:DI 160)) "/usr/include/boost/python/stl_iterator.hpp":34:9 74 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:DI 5 di)
        (reg:DI 161)) "/usr/include/boost/python/stl_iterator.hpp":34:9 74 {*movdi_internal}
     (nil))
(call_insn 30 29 31 5 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1ERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3775bb00 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/stl_iterator.hpp":34:9 813 {*call}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1ERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3775bb00 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       6 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              71 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 6, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":28:9 210 {*adddi_1}
     (nil))
(insn 33 32 34 6 (set (reg:DI 5 di)
        (reg:DI 162)) "/usr/include/boost/python/stl_iterator.hpp":28:9 74 {*movdi_internal}
     (nil))
(call_insn 34 33 35 6 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1Ev") [flags 0x41]  <function_decl 0x7f1a3775bd00 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/stl_iterator.hpp":28:9 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1Ev") [flags 0x41]  <function_decl 0x7f1a3775bd00 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              69 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 7, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg:V2DI 163)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 37 36 38 7 (set (mem:V2DI (plus:DI (reg/v/f:DI 155 [ data ])
                (const_int 16 [0x10])) [142 MEM <vector(2) long unsigned int> [(int * *)data_6(D) + 16B]+0 S16 A64])
        (reg:V2DI 163)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 38 37 39 7 (set (mem/f:DI (plus:DI (reg/v/f:DI 155 [ data ])
                (const_int 32 [0x20])) [142 MEM[(struct _Vector_impl_data *)data_6(D) + 16B]._M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 39 38 40 7 (set (reg/f:DI 91 [ _61 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [31 MEM[(const struct object_base &)&D.279540].m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":405:32 74 {*movdi_internal}
     (nil))
(insn 40 39 41 7 (parallel [
            (set (mem:DI (reg/f:DI 91 [ _61 ]) [7 *_61.ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 91 [ _61 ]) [7 *_61.ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 41 40 42 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [31 MEM[(struct object_base *)&D.330312].m_ptr+0 S8 A128])
        (reg/f:DI 91 [ _61 ])) "/usr/include/boost/python/object_core.hpp":405:7 74 {*movdi_internal}
     (nil))
(insn 42 41 43 7 (set (reg/f:DI 94 [ _64 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -88 [0xffffffffffffffa8])) [31 MEM[(const struct handle &)&D.279540 + 8].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":105:33 74 {*movdi_internal}
     (nil))
(insn 43 42 44 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ _64 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":557:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 44 43 45 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "/usr/include/python3.10/object.h":557:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 47)
;;  succ:       8 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
;;              9 [30.0% (guessed)]  count:322122544 (estimated locally)

;; basic block 8, loop depth 0, count 751619277 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (parallel [
            (set (mem:DI (reg/f:DI 94 [ _64 ]) [7 MEM[(struct PyObject *)_64].ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 94 [ _64 ]) [7 MEM[(struct PyObject *)_64].ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
;;  succ:       9 [always]  count:751619277 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7 [30.0% (guessed)]  count:322122544 (estimated locally)
;;              8 [always]  count:751619277 (estimated locally) (FALLTHRU)
(code_label 47 46 48 9 841 (nil) [1 uses])
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [31 MEM[(struct handle *)&D.330312 + 8B].m_p+0 S8 A64])
        (reg/f:DI 94 [ _64 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 50 49 51 9 (set (reg/f:DI 97 [ _67 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [31 MEM[(const struct object_base &)&D.279516].m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":405:32 74 {*movdi_internal}
     (nil))
(insn 51 50 52 9 (parallel [
            (set (mem:DI (reg/f:DI 97 [ _67 ]) [7 *_67.ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 97 [ _67 ]) [7 *_67.ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 52 51 53 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [31 MEM[(struct object_base *)&D.330311].m_ptr+0 S8 A128])
        (reg/f:DI 97 [ _67 ])) "/usr/include/boost/python/object_core.hpp":405:7 74 {*movdi_internal}
     (nil))
(insn 53 52 54 9 (set (reg/f:DI 100 [ _70 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -104 [0xffffffffffffff98])) [31 MEM[(const struct handle &)&D.279516 + 8].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":105:33 74 {*movdi_internal}
     (nil))
(insn 54 53 55 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ _70 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":557:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 55 54 56 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "/usr/include/python3.10/object.h":557:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 58)
;;  succ:       10 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
;;              11 [30.0% (guessed)]  count:322122544 (estimated locally)

;; basic block 10, loop depth 0, count 751619277 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (parallel [
            (set (mem:DI (reg/f:DI 100 [ _70 ]) [7 MEM[(struct PyObject *)_70].ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 100 [ _70 ]) [7 MEM[(struct PyObject *)_70].ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
;;  succ:       11 [always]  count:751619277 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9 [30.0% (guessed)]  count:322122544 (estimated locally)
;;              10 [always]  count:751619277 (estimated locally) (FALLTHRU)
(code_label 58 57 59 11 842 (nil) [1 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 63 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [31 MEM[(struct handle *)&D.330311 + 8B].m_p+0 S8 A64])
        (reg/f:DI 100 [ _70 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
;;  succ:       22 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 1, count 8687547547 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       23 [89.0% (guessed)]  count:8687547538 (estimated locally) (FALLTHRU)
(note 63 60 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":48:51 210 {*adddi_1}
     (nil))
(insn 65 64 66 12 (set (reg:DI 5 di)
        (reg:DI 164)) "/usr/include/boost/python/stl_iterator.hpp":48:51 74 {*movdi_internal}
     (nil))
(call_insn 66 65 464 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl7currentEv") [flags 0x41]  <function_decl 0x7f1a3775ba00 current>) [0 current S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/stl_iterator.hpp":48:51 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl7currentEv") [flags 0x41]  <function_decl 0x7f1a3775ba00 current>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       24 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [always (adjusted)]  count:8687547547 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 1, count 8687547547 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [always (adjusted)]  count:8687547547 (estimated locally) (FALLTHRU)
(note 464 66 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 67 464 69 13 (set (reg/f:DI 114 [ _91 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/stl_iterator.hpp":48:51 74 {*movdi_internal}
     (nil))
(insn 69 67 70 13 (set (reg/f:DI 115 [ _92 ])
        (mem/f:DI (reg/f:DI 114 [ _91 ]) [31 _91->m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":202:12 74 {*movdi_internal}
     (nil))
(insn 70 69 71 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [31 MEM[(struct extract_rvalue *)&D.330328].m_source+0 S8 A128])
        (reg/f:DI 115 [ _92 ])) "/usr/include/boost/python/extract.hpp":162:9 74 {*movdi_internal}
     (nil))
(insn 71 70 72 13 (set (reg/f:DI 165)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKiE10convertersE")  <var_decl 0x7f1a35a59bd0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/extract.hpp":164:38 74 {*movdi_internal}
     (nil))
(insn 72 71 73 13 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 165) [42 converters+0 S8 A64])) "/usr/include/boost/python/extract.hpp":164:38 74 {*movdi_internal}
     (nil))
(insn 73 72 74 13 (set (reg:DI 5 di)
        (reg/f:DI 115 [ _92 ])) "/usr/include/boost/python/extract.hpp":164:38 74 {*movdi_internal}
     (nil))
(call_insn 74 73 465 13 (set (reg:TI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage1EP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235f00 rvalue_from_python_stage1>) [0 rvalue_from_python_stage1 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/extract.hpp":164:38 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage1EP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235f00 rvalue_from_python_stage1>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       24 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 [always (adjusted)]  count:8687547547 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 1, count 8687547547 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [always (adjusted)]  count:8687547547 (estimated locally) (FALLTHRU)
(note 465 74 75 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 75 465 77 14 (set (reg:TI 153 [ D.330327 ])
        (reg:TI 0 ax)) "/usr/include/boost/python/extract.hpp":164:38 73 {*movti_internal}
     (nil))
(insn 77 75 78 14 (set (mem/c:TI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [237 MEM[(struct rvalue_from_python_data *)&D.330328 + 8B].D.297249.stage1+0 S16 A64])
        (reg:TI 153 [ D.330327 ])) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":122:5 73 {*movti_internal}
     (nil))
(insn 78 77 79 14 (clobber (reg:TI 153 [ D.330327 ])) "/usr/include/boost/python/extract.hpp":164:38 -1
     (nil))
(insn 79 78 80 14 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
(insn 80 79 81 14 (parallel [
            (set (reg:DI 167)
                (plus:DI (reg:DI 166)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
(insn 81 80 82 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -40 [0xffffffffffffffd8])) [43 MEM[(const struct extract_rvalue *)&D.330328].m_data.D.297249.stage1.convertible+0 S8 A64])
            (reg:DI 167))) "/usr/include/boost/python/extract.hpp":180:15 12 {*cmpdi_1}
     (nil))
(jump_insn 82 81 83 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 463)
            (pc))) "/usr/include/boost/python/extract.hpp":180:15 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 463)
;;  succ:       17 [46.5% (guessed)]  count:4042315884 (estimated locally)
;;              15 [53.5% (guessed)]  count:4645231663 (estimated locally) (FALLTHRU)

;; basic block 15, loop depth 1, count 4645231662 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [53.5% (guessed)]  count:4645231663 (estimated locally) (FALLTHRU)
(note 83 82 84 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 15 (set (reg/f:DI 168)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKiE10convertersE")  <var_decl 0x7f1a35a59bd0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 85 84 86 15 (parallel [
            (set (reg:DI 169)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":184:43 210 {*adddi_1}
     (nil))
(insn 86 85 87 15 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg:DI 169)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":184:43 210 {*adddi_1}
     (nil))
(insn 87 86 88 15 (set (reg:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [31 MEM[(const struct extract_rvalue *)&D.330328].m_source+0 S8 A128])) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 88 87 89 15 (set (reg:DI 1 dx)
        (mem/f/c:DI (reg/f:DI 168) [42 converters+0 S8 A64])) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 89 88 90 15 (set (reg:DI 4 si)
        (reg:DI 170)) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 90 89 91 15 (set (reg:DI 5 di)
        (reg:DI 171)) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(call_insn 91 90 466 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage2EP7_objectRNS1_30rvalue_from_python_stage1_dataERKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a269000 rvalue_from_python_stage2>) [0 rvalue_from_python_stage2 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/extract.hpp":184:43 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage2EP7_objectRNS1_30rvalue_from_python_stage1_dataERKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a269000 rvalue_from_python_stage2>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       24 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 [always (adjusted)]  count:4645231662 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 1, count 4645231662 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [always (adjusted)]  count:4645231662 (estimated locally) (FALLTHRU)
(note 466 91 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 92 466 463 16 (set (reg/f:DI 120 [ _97 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
;;  succ:       18 [always]  count:4645231662 (estimated locally) (FALLTHRU)

;; basic block 17, loop depth 1, count 4042315884 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       14 [46.5% (guessed)]  count:4042315884 (estimated locally)
(code_label 463 92 462 17 882 (nil) [1 uses])
(note 462 463 7 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 7 462 8 17 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
(insn 8 7 93 17 (parallel [
            (set (reg/f:DI 120 [ _97 ])
                (plus:DI (reg:DI 157)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
;;  succ:       18 [always]  count:4042315884 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 1, count 8687547547 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [always]  count:4042315884 (estimated locally) (FALLTHRU)
;;              16 [always]  count:4645231662 (estimated locally) (FALLTHRU)
(code_label 93 8 94 18 844 (nil) [0 uses])
(note 94 93 95 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 18 (set (reg:SI 121 [ _99 ])
        (mem:SI (reg/f:DI 120 [ _97 ]) [35 *iftmp.21_98+0 S4 A32])) "/usr/include/boost/python/extract.hpp":185:11 75 {*movsi_internal}
     (nil))
(insn 96 95 97 18 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -132 [0xffffffffffffff7c])) [35 D.330321+0 S4 A32])
        (reg:SI 121 [ _99 ])) "/usr/include/c++/11/bits/stl_vector.h":1564:21 75 {*movsi_internal}
     (nil))
(insn 97 96 98 18 (set (reg/f:DI 122 [ _100 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 155 [ data ])
                (const_int 24 [0x18])) [142 MEM[(struct vector *)data_6(D) + 16B].D.263939._M_impl.D.263289._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/vector.tcc":112:20 74 {*movdi_internal}
     (nil))
(insn 98 97 99 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 122 [ _100 ])
            (mem/f:DI (plus:DI (reg/v/f:DI 155 [ data ])
                    (const_int 32 [0x20])) [142 MEM[(struct vector *)data_6(D) + 16B].D.263939._M_impl.D.263289._M_end_of_storage+0 S8 A64]))) "/usr/include/c++/11/bits/vector.tcc":112:2 12 {*cmpdi_1}
     (nil))
(jump_insn 99 98 100 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "/usr/include/c++/11/bits/vector.tcc":112:2 806 {*jcc}
     (int_list:REG_BR_PROB 187153204 (nil))
 -> 106)
;;  succ:       19 [82.6% (guessed)]  count:7173308009 (estimated locally) (FALLTHRU)
;;              20 [17.4% (guessed)]  count:1514239538 (estimated locally)

;; basic block 19, loop depth 1, count 7173308012 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [82.6% (guessed)]  count:7173308009 (estimated locally) (FALLTHRU)
(note 100 99 101 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 19 (set (mem:SI (reg/f:DI 122 [ _100 ]) [35 *_100+0 S4 A32])
        (reg:SI 121 [ _99 ])) "/usr/include/c++/11/bits/stl_construct.h":97:14 75 {*movsi_internal}
     (nil))
(insn 102 101 103 19 (parallel [
            (set (reg:DI 172)
                (plus:DI (reg/f:DI 122 [ _100 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":117:6 210 {*adddi_1}
     (nil))
(insn 103 102 106 19 (set (mem/f:DI (plus:DI (reg/v/f:DI 155 [ data ])
                (const_int 24 [0x18])) [142 MEM[(struct vector *)data_6(D) + 16B].D.263939._M_impl.D.263289._M_finish+0 S8 A64])
        (reg:DI 172)) "/usr/include/c++/11/bits/vector.tcc":117:6 74 {*movdi_internal}
     (nil))
;;  succ:       21 [always]  count:7173308012 (estimated locally) (FALLTHRU)

;; basic block 20, loop depth 1, count 1514239535 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       18 [17.4% (guessed)]  count:1514239538 (estimated locally)
(code_label 106 103 107 20 845 (nil) [1 uses])
(note 107 106 108 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 20 (set (reg:DI 152 [ D.330332 ])
        (reg/f:DI 122 [ _100 ])) 74 {*movdi_internal}
     (nil))
(insn 109 108 110 20 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -132 [0xffffffffffffff7c])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":121:21 210 {*adddi_1}
     (nil))
(insn 110 109 111 20 (set (reg:DI 1 dx)
        (reg:DI 173)) "/usr/include/c++/11/bits/vector.tcc":121:21 74 {*movdi_internal}
     (nil))
(insn 111 110 112 20 (set (reg:DI 4 si)
        (reg:DI 152 [ D.330332 ])) "/usr/include/c++/11/bits/vector.tcc":121:21 74 {*movdi_internal}
     (nil))
(insn 112 111 113 20 (set (reg:DI 5 di)
        (reg/v/f:DI 82 [ storage ])) "/usr/include/c++/11/bits/vector.tcc":121:21 74 {*movdi_internal}
     (nil))
(call_insn 113 112 114 20 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_") [flags 0x1]  <function_decl 0x7f1a35af7c00 _M_realloc_insert>) [0 _M_realloc_insert S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/vector.tcc":121:21 813 {*call}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_") [flags 0x1]  <function_decl 0x7f1a35af7c00 _M_realloc_insert>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       21 [always]  count:1514239535 (estimated locally) (FALLTHRU)
;;              24 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 21, loop depth 1, count 8687547547 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       19 [always]  count:7173308012 (estimated locally) (FALLTHRU)
;;              20 [always]  count:1514239535 (estimated locally) (FALLTHRU)
(code_label 114 113 115 21 846 (nil) [0 uses])
(note 115 114 116 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 21 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":43:30 210 {*adddi_1}
     (nil))
(insn 117 116 118 21 (set (reg:DI 5 di)
        (reg:DI 174)) "/usr/include/boost/python/stl_iterator.hpp":43:30 74 {*movdi_internal}
     (nil))
(call_insn 118 117 119 21 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_impl9incrementEv") [flags 0x41]  <function_decl 0x7f1a3775b800 increment>) [0 increment S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/stl_iterator.hpp":43:30 813 {*call}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_impl9incrementEv") [flags 0x41]  <function_decl 0x7f1a3775b800 increment>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       22 [always]  count:8687547547 (estimated locally) (FALLTHRU,DFS_BACK)
;;              24 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 22, loop depth 1, count 9761289362 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       11 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              21 [always]  count:8687547547 (estimated locally) (FALLTHRU,DFS_BACK)
(code_label 119 118 120 22 843 (nil) [0 uses])
(note 120 119 121 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 22 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":53:33 210 {*adddi_1}
     (nil))
(insn 122 121 123 22 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":53:33 210 {*adddi_1}
     (nil))
(insn 123 122 124 22 (set (reg:DI 4 si)
        (reg:DI 175)) "/usr/include/boost/python/stl_iterator.hpp":53:33 74 {*movdi_internal}
     (nil))
(insn 124 123 125 22 (set (reg:DI 5 di)
        (reg:DI 176)) "/usr/include/boost/python/stl_iterator.hpp":53:33 74 {*movdi_internal}
     (nil))
(call_insn 125 124 467 22 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl5equalERKS2_") [flags 0x41]  <function_decl 0x7f1a3775b900 equal>) [0 equal S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/stl_iterator.hpp":53:33 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl5equalERKS2_") [flags 0x41]  <function_decl 0x7f1a3775b900 equal>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       24 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              23 [always (adjusted)]  count:9761289362 (estimated locally) (FALLTHRU)

;; basic block 23, loop depth 1, count 9761289362 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [always (adjusted)]  count:9761289362 (estimated locally) (FALLTHRU)
(note 467 125 126 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 126 467 128 23 (set (reg:QI 110 [ _86 ])
        (reg:QI 0 ax)) "/usr/include/boost/python/stl_iterator.hpp":53:33 77 {*movqi_internal}
     (nil))
(insn 128 126 129 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ _86 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":1562:21 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 129 128 486 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1562:21 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 177)
;;  succ:       12 [89.0% (guessed)]  count:8687547538 (estimated locally) (FALLTHRU)
;;              30 [11.0% (guessed)]  count:1073741824 (estimated locally)

;; basic block 24, loop depth 0, count 0 (precise), probably never executed
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       12 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 486 129 488 24 886 (nil) [1 uses])
(note 488 486 487 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 487 488 134 24 (set (reg:DI 177)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
;;  succ:       25 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 25, loop depth 0, count 0 (precise), probably never executed
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 134 487 135 25 849 (nil) [0 uses])
(note 135 134 136 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 25 (set (reg/f:DI 111 [ _87 ])
        (reg:DI 177)) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
(insn 137 136 138 25 (set (reg:DI 5 di)
        (reg/f:DI 111 [ _87 ])) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
(call_insn 138 137 139 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":1568:6 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 139 138 140 25 (set (reg/f:DI 112 [ _88 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 155 [ data ])
                (const_int 16 [0x10])) [142 MEM[(struct vector *)data_6(D) + 16B].D.263939._M_impl.D.263289._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":1499:24 74 {*movdi_internal}
     (nil))
(insn 140 139 141 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 112 [ _88 ])
            (mem/f:DI (plus:DI (reg/v/f:DI 155 [ data ])
                    (const_int 24 [0x18])) [142 MEM[(struct vector *)data_6(D) + 16B].D.263939._M_impl.D.263289._M_finish+0 S8 A64]))) "/usr/include/c++/11/bits/stl_vector.h":1794:2 12 {*cmpdi_1}
     (nil))
(jump_insn 141 140 142 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1794:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 144)
;;  succ:       26 [never]  count:0 (precise) (FALLTHRU)
;;              27 [never]  count:0 (precise)

;; basic block 26, loop depth 0, count 0 (precise), probably never executed
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [never]  count:0 (precise) (FALLTHRU)
(note 142 141 143 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 26 (set (mem/f:DI (plus:DI (reg/v/f:DI 155 [ data ])
                (const_int 24 [0x18])) [142 MEM[(struct vector *)data_6(D) + 16B].D.263939._M_impl.D.263289._M_finish+0 S8 A64])
        (reg/f:DI 112 [ _88 ])) "/usr/include/c++/11/bits/stl_vector.h":1798:30 74 {*movdi_internal}
     (nil))
;;  succ:       27 [never]  count:0 (precise) (FALLTHRU)

;; basic block 27, loop depth 0, count 0 (precise), probably never executed
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       25 [never]  count:0 (precise)
;;              26 [never]  count:0 (precise) (FALLTHRU)
(code_label 144 143 145 27 850 (nil) [1 uses])
(note 145 144 146 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(call_insn 146 145 489 27 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1570:6 813 {*call}
     (expr_list:REG_EH_REGION (const_int 16 [0x10])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       28 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 28, loop depth 0, count 0 (precise), probably never executed
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 489 146 492 28 887 (nil) [1 uses])
(note 492 489 490 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 490 492 148 28 (set (reg:DI 179)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
;;  succ:       29 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 29, loop depth 0, count 0 (precise), probably never executed
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 148 490 149 29 851 (nil) [0 uses])
(note 149 148 150 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn 150 149 151 29 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1568:6 813 {*call}
     (expr_list:REG_EH_REGION (const_int -38 [0xffffffffffffffda])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 151 150 153 29 (set (reg:DI 178)
        (reg:DI 179)) 74 {*movdi_internal}
     (nil))
(insn 153 151 154 29 (set (reg:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [31 MEM[(struct handle *)&D.330311 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 154 153 155 29 (set (reg:DI 5 di)
        (reg:DI 182)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 155 154 156 29 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -30 [0xffffffffffffffe2])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 156 155 157 29 (parallel [
            (set (reg:DI 183)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 157 156 158 29 (set (reg:DI 5 di)
        (reg:DI 183)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 158 157 159 29 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 159 158 161 29 (set (reg:DI 184)
        (reg:DI 178)) 74 {*movdi_internal}
     (nil))
(insn 161 159 162 29 (set (reg:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [31 MEM[(struct handle *)&D.330312 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 162 161 163 29 (set (reg:DI 5 di)
        (reg:DI 186)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 163 162 164 29 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -29 [0xffffffffffffffe3])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 164 163 165 29 (parallel [
            (set (reg:DI 187)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 165 164 166 29 (set (reg:DI 5 di)
        (reg:DI 187)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 166 165 167 29 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 167 166 169 29 (set (reg:DI 188)
        (reg:DI 184)) 74 {*movdi_internal}
     (nil))
(insn 169 167 170 29 (set (reg/f:DI 108 [ _78 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 155 [ data ])
                (const_int 16 [0x10])) [142 MEM[(struct _Vector_base *)data_6(D) + 16B]._M_impl.D.263289._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
(insn 170 169 171 29 (set (reg/f:DI 190)
        (mem/f:DI (plus:DI (reg/v/f:DI 155 [ data ])
                (const_int 32 [0x20])) [142 MEM[(struct _Vector_base *)data_6(D) + 16B]._M_impl.D.263289._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 171 170 172 29 (parallel [
            (set (reg:DI 109 [ _79 ])
                (minus:DI (reg/f:DI 190)
                    (reg/f:DI 108 [ _78 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 155 [ data ])
                    (const_int 32 [0x20])) [142 MEM[(struct _Vector_base *)data_6(D) + 16B]._M_impl.D.263289._M_end_of_storage+0 S8 A64])
            (reg/f:DI 108 [ _78 ]))
        (nil)))
(insn 172 171 173 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 108 [ _78 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 173 172 177 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 289)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 289)
;;  succ:       47 [never]  count:0 (precise)
;;              48 [never]  count:0 (precise) (FALLTHRU)

;; basic block 30, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       23 [11.0% (guessed)]  count:1073741824 (estimated locally)
(code_label 177 173 178 30 847 (nil) [1 uses])
(note 178 177 179 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 30 (set (reg/f:DI 103 [ _73 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [31 MEM[(struct handle *)&D.330311 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 180 179 181 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 103 [ _73 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 181 180 185 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 185)
;;  succ:       35 [30.0% (guessed)]  count:322122544 (estimated locally) (FALLTHRU)
;;              31 [70.0% (guessed)]  count:751619280 (estimated locally)

;; basic block 31, loop depth 0, count 751619277 (estimated locally), maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 [70.0% (guessed)]  count:751619280 (estimated locally)
(code_label 185 181 186 31 854 (nil) [1 uses])
(note 186 185 187 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 190 31 (set (reg:DI 133 [ _115 ])
        (mem:DI (reg/f:DI 103 [ _73 ]) [7 MEM[(const struct PyObject *)_73].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 190 187 191 31 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 133 [ _115 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 191 190 250 31 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 202)
;;  succ:       33 [100.0% (guessed)]  count:751318630 (estimated locally)
;;              32 [0.0% (guessed)]  count:300647 (estimated locally) (FALLTHRU)

;; basic block 32, loop depth 0, count 1501071 (estimated locally), maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       31 [0.0% (guessed)]  count:300647 (estimated locally) (FALLTHRU)
;;              40 [0.0% (guessed)]  count:300443 (estimated locally)
;;              49 [0.0% (guessed)]  count:300239 (estimated locally)
;;              56 [0.0% (guessed)]  count:300034 (estimated locally)
;;              66 [0.0% (guessed)]  count:299710 (estimated locally)
(code_label 250 191 192 32 862 (nil) [4 uses])
(note 192 250 193 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 32 (set (reg:DI 191)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 194 193 195 32 (set (reg:DI 2 cx)
        (reg:DI 191)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)
        (nil)))
(insn 195 194 196 32 (set (reg:SI 1 dx)
        (const_int 37 [0x25])) "/usr/include/boost/python/refcount.hpp":37:5 75 {*movsi_internal}
     (nil))
(insn 196 195 197 32 (set (reg:DI 192)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 197 196 198 32 (set (reg:DI 4 si)
        (reg:DI 192)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)
        (nil)))
(insn 198 197 199 32 (set (reg:DI 193)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 199 198 200 32 (set (reg:DI 5 di)
        (reg:DI 193)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)
        (nil)))
(call_insn 200 199 202 32 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/refcount.hpp":37:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 33, loop depth 0, count 751408831 (estimated locally), maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       31 [100.0% (guessed)]  count:751318630 (estimated locally)
(code_label 202 200 203 33 856 (nil) [1 uses])
(note 203 202 204 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 33 (parallel [
            (set (reg:DI 134 [ _117 ])
                (plus:DI (reg:DI 133 [ _115 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 205 204 207 33 (set (mem:DI (reg/f:DI 103 [ _73 ]) [7 MEM[(struct PyObject *)_73].ob_refcnt+0 S8 A64])
        (reg:DI 134 [ _117 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 207 205 208 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 134 [ _117 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 208 207 209 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 212)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 212)
;;  succ:       35 [67.0% (guessed)]  count:503443918 (estimated locally)
;;              34 [33.0% (guessed)]  count:247964913 (estimated locally) (FALLTHRU)

;; basic block 34, loop depth 0, count 247964910 (estimated locally), maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 [33.0% (guessed)]  count:247964913 (estimated locally) (FALLTHRU)
(note 209 208 210 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 34 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _73 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 211 210 212 34 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -31 [0xffffffffffffffe1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       35 [always]  count:247964910 (estimated locally) (FALLTHRU)

;; basic block 35, loop depth 0, count 1073441179 (estimated locally), maybe hot
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       30 [30.0% (guessed)]  count:322122544 (estimated locally) (FALLTHRU)
;;              34 [always]  count:247964910 (estimated locally) (FALLTHRU)
;;              33 [67.0% (guessed)]  count:503443918 (estimated locally)
(code_label 212 211 213 35 855 (nil) [1 uses])
(note 213 212 214 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 35 (set (reg/f:DI 130 [ _112 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [31 D.330311.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 215 214 218 35 (set (reg:DI 131 [ _113 ])
        (mem:DI (reg/f:DI 130 [ _112 ]) [7 MEM[(const struct PyObject *)_112].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 218 215 219 35 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 131 [ _113 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 219 218 268 35 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 230)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 230)
;;  succ:       37 [100.0% (guessed)]  count:1073011803 (estimated locally)
;;              36 [0.0% (guessed)]  count:429376 (estimated locally) (FALLTHRU)

;; basic block 36, loop depth 0, count 2144073 (estimated locally), maybe hot
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       35 [0.0% (guessed)]  count:429376 (estimated locally) (FALLTHRU)
;;              43 [0.0% (guessed)]  count:429084 (estimated locally)
;;              52 [0.0% (guessed)]  count:428792 (estimated locally)
;;              59 [0.0% (guessed)]  count:428501 (estimated locally)
;;              62 [0.0% (guessed)]  count:428329 (estimated locally)
(code_label 268 219 220 36 864 (nil) [4 uses])
(note 220 268 221 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 36 (set (reg:DI 194)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 222 221 223 36 (set (reg:DI 2 cx)
        (reg:DI 194)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)
        (nil)))
(insn 223 222 224 36 (set (reg:SI 1 dx)
        (const_int 422 [0x1a6])) "/usr/include/boost/python/object_core.hpp":422:5 75 {*movsi_internal}
     (nil))
(insn 224 223 225 36 (set (reg:DI 195)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 225 224 226 36 (set (reg:DI 4 si)
        (reg:DI 195)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)
        (nil)))
(insn 226 225 227 36 (set (reg:DI 196)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 227 226 228 36 (set (reg:DI 5 di)
        (reg:DI 196)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)
        (nil)))
(call_insn 228 227 230 36 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":422:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 37, loop depth 0, count 1073011806 (estimated locally), maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       35 [100.0% (guessed)]  count:1073011803 (estimated locally)
(code_label 230 228 231 37 858 (nil) [1 uses])
(note 231 230 232 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 37 (parallel [
            (set (reg:DI 132 [ _114 ])
                (plus:DI (reg:DI 131 [ _113 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 233 232 234 37 (set (mem:DI (reg/f:DI 130 [ _112 ]) [7 _112->ob_refcnt+0 S8 A64])
        (reg:DI 132 [ _114 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 234 233 235 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 132 [ _114 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 235 234 236 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 239)
;;  succ:       39 [67.0% (guessed)]  count:718917912 (estimated locally)
;;              38 [33.0% (guessed)]  count:354093894 (estimated locally) (FALLTHRU)

;; basic block 38, loop depth 0, count 354093893 (estimated locally), maybe hot
;;  prev block 37, next block 39, flags: (RTL)
;;  pred:       37 [33.0% (guessed)]  count:354093894 (estimated locally) (FALLTHRU)
(note 236 235 237 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 38 (set (reg:DI 5 di)
        (reg/f:DI 130 [ _112 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 238 237 239 38 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -40 [0xffffffffffffffd8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       39 [always]  count:354093893 (estimated locally) (FALLTHRU)

;; basic block 39, loop depth 0, count 1073011806 (estimated locally), maybe hot
;;  prev block 38, next block 40, flags: (RTL)
;;  pred:       37 [67.0% (guessed)]  count:718917912 (estimated locally)
;;              38 [always]  count:354093893 (estimated locally) (FALLTHRU)
(code_label 239 238 240 39 859 (nil) [1 uses])
(note 240 239 241 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 39 (set (reg/f:DI 104 [ _74 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [31 MEM[(struct handle *)&D.330312 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 242 241 243 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 104 [ _74 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 243 242 247 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 247)
;;  succ:       43 [30.0% (guessed)]  count:321903539 (estimated locally) (FALLTHRU)
;;              40 [70.0% (guessed)]  count:751108267 (estimated locally)

;; basic block 40, loop depth 0, count 751108268 (estimated locally), maybe hot
;;  prev block 39, next block 41, flags: (RTL)
;;  pred:       39 [70.0% (guessed)]  count:751108267 (estimated locally)
(code_label 247 243 248 40 860 (nil) [1 uses])
(note 248 247 249 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 253 40 (set (reg:DI 128 [ _109 ])
        (mem:DI (reg/f:DI 104 [ _74 ]) [7 MEM[(const struct PyObject *)_74].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 253 249 254 40 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 128 [ _109 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 254 253 255 40 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 250)
;;  succ:       41 [100.0% (guessed)]  count:750807825 (estimated locally) (FALLTHRU)
;;              32 [0.0% (guessed)]  count:300443 (estimated locally)

;; basic block 41, loop depth 0, count 750897959 (estimated locally), maybe hot
;;  prev block 40, next block 42, flags: (RTL)
;;  pred:       40 [100.0% (guessed)]  count:750807825 (estimated locally) (FALLTHRU)
(note 255 254 256 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 41 (parallel [
            (set (reg:DI 129 [ _111 ])
                (plus:DI (reg:DI 128 [ _109 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 257 256 259 41 (set (mem:DI (reg/f:DI 104 [ _74 ]) [7 MEM[(struct PyObject *)_74].ob_refcnt+0 S8 A64])
        (reg:DI 129 [ _111 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 259 257 260 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 129 [ _111 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 260 259 261 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 264)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 264)
;;  succ:       43 [67.0% (guessed)]  count:503101634 (estimated locally)
;;              42 [33.0% (guessed)]  count:247796325 (estimated locally) (FALLTHRU)

;; basic block 42, loop depth 0, count 247796320 (estimated locally), maybe hot
;;  prev block 41, next block 43, flags: (RTL)
;;  pred:       41 [33.0% (guessed)]  count:247796325 (estimated locally) (FALLTHRU)
(note 261 260 262 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 42 (set (reg:DI 5 di)
        (reg/f:DI 104 [ _74 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 263 262 264 42 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -32 [0xffffffffffffffe0])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       43 [always]  count:247796320 (estimated locally) (FALLTHRU)

;; basic block 43, loop depth 0, count 1072711360 (estimated locally), maybe hot
;;  prev block 42, next block 44, flags: (RTL)
;;  pred:       39 [30.0% (guessed)]  count:321903539 (estimated locally) (FALLTHRU)
;;              42 [always]  count:247796320 (estimated locally) (FALLTHRU)
;;              41 [67.0% (guessed)]  count:503101634 (estimated locally)
(code_label 264 263 265 43 861 (nil) [1 uses])
(note 265 264 266 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 43 (set (reg/f:DI 125 [ _106 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [31 D.330312.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 267 266 271 43 (set (reg:DI 126 [ _107 ])
        (mem:DI (reg/f:DI 125 [ _106 ]) [7 MEM[(const struct PyObject *)_106].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 271 267 272 43 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 126 [ _107 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 272 271 273 43 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 268)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 268)
;;  succ:       44 [100.0% (guessed)]  count:1072282276 (estimated locally) (FALLTHRU)
;;              36 [0.0% (guessed)]  count:429084 (estimated locally)

;; basic block 44, loop depth 0, count 1072282279 (estimated locally), maybe hot
;;  prev block 43, next block 45, flags: (RTL)
;;  pred:       43 [100.0% (guessed)]  count:1072282276 (estimated locally) (FALLTHRU)
(note 273 272 274 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 44 (parallel [
            (set (reg:DI 127 [ _108 ])
                (plus:DI (reg:DI 126 [ _107 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 275 274 276 44 (set (mem:DI (reg/f:DI 125 [ _106 ]) [7 _106->ob_refcnt+0 S8 A64])
        (reg:DI 127 [ _108 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 276 275 277 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 127 [ _108 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 277 276 278 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 281)
;;  succ:       46 [67.0% (guessed)]  count:718429129 (estimated locally)
;;              45 [33.0% (guessed)]  count:353853150 (estimated locally) (FALLTHRU)

;; basic block 45, loop depth 0, count 353853147 (estimated locally), maybe hot
;;  prev block 44, next block 46, flags: (RTL)
;;  pred:       44 [33.0% (guessed)]  count:353853150 (estimated locally) (FALLTHRU)
(note 278 277 279 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 45 (set (reg:DI 5 di)
        (reg/f:DI 125 [ _106 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 280 279 281 45 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -39 [0xffffffffffffffd9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       46 [always]  count:353853147 (estimated locally) (FALLTHRU)

;; basic block 46, loop depth 0, count 1072282279 (estimated locally), maybe hot
;;  prev block 45, next block 47, flags: (RTL)
;;  pred:       44 [67.0% (guessed)]  count:718429129 (estimated locally)
;;              45 [always]  count:353853147 (estimated locally) (FALLTHRU)
(code_label 281 280 282 46 865 (nil) [1 uses])
(note 282 281 283 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 46 (set (reg/f:DI 87 [ _24 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -88 [0xffffffffffffffa8])) [31 MEM[(struct handle *)&D.279540 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 284 283 285 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _24 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 285 284 289 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 308)
;;  succ:       52 [30.0% (guessed)]  count:321684681 (estimated locally) (FALLTHRU)
;;              49 [70.0% (guessed)]  count:750597598 (estimated locally)

;; basic block 47, loop depth 0, count 0 (precise), probably never executed
;;  prev block 46, next block 48, flags: (RTL)
;;  pred:       29 [never]  count:0 (precise)
(code_label 289 285 290 47 852 (nil) [1 uses])
(note 290 289 291 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 47 (set (reg:DI 4 si)
        (reg:DI 109 [ _79 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 292 291 293 47 (set (reg:DI 5 di)
        (reg/f:DI 108 [ _78 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 293 292 294 47 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       48 [never]  count:0 (precise) (FALLTHRU)

;; basic block 48, loop depth 0, count 0 (precise), probably never executed
;;  prev block 47, next block 49, flags: (RTL)
;;  pred:       47 [never]  count:0 (precise) (FALLTHRU)
;;              29 [never]  count:0 (precise) (FALLTHRU)
(code_label 294 293 295 48 853 (nil) [0 uses])
(note 295 294 296 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 296 295 298 48 (set (reg:DI 197)
        (reg:DI 188)) 74 {*movdi_internal}
     (nil))
(insn 298 296 299 48 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -88 [0xffffffffffffffa8])) [31 MEM[(struct handle *)&D.279540 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 299 298 300 48 (set (reg:DI 5 di)
        (reg:DI 199)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 300 299 301 48 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -26 [0xffffffffffffffe6])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 301 300 302 48 (parallel [
            (set (reg:DI 200)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 302 301 303 48 (set (reg:DI 5 di)
        (reg:DI 200)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 303 302 304 48 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 304 303 308 48 (set (reg:DI 201)
        (reg:DI 197)) 74 {*movdi_internal}
     (nil))
;;  succ:       70 [always]  count:0 (precise) (FALLTHRU)

;; basic block 49, loop depth 0, count 750597595 (estimated locally), maybe hot
;;  prev block 48, next block 50, flags: (RTL)
;;  pred:       46 [70.0% (guessed)]  count:750597598 (estimated locally)
(code_label 308 304 309 49 866 (nil) [1 uses])
(note 309 308 310 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 313 49 (set (reg:DI 149 [ _134 ])
        (mem:DI (reg/f:DI 87 [ _24 ]) [7 MEM[(const struct PyObject *)_24].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 313 310 314 49 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 149 [ _134 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 314 313 315 49 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 250)
;;  succ:       50 [100.0% (guessed)]  count:750297356 (estimated locally) (FALLTHRU)
;;              32 [0.0% (guessed)]  count:300239 (estimated locally)

;; basic block 50, loop depth 0, count 750387431 (estimated locally), maybe hot
;;  prev block 49, next block 51, flags: (RTL)
;;  pred:       49 [100.0% (guessed)]  count:750297356 (estimated locally) (FALLTHRU)
(note 315 314 316 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 316 315 317 50 (parallel [
            (set (reg:DI 150 [ _136 ])
                (plus:DI (reg:DI 149 [ _134 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 317 316 319 50 (set (mem:DI (reg/f:DI 87 [ _24 ]) [7 MEM[(struct PyObject *)_24].ob_refcnt+0 S8 A64])
        (reg:DI 150 [ _136 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 319 317 320 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 150 [ _136 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 320 319 321 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 324)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 324)
;;  succ:       52 [67.0% (guessed)]  count:502759580 (estimated locally)
;;              51 [33.0% (guessed)]  count:247627851 (estimated locally) (FALLTHRU)

;; basic block 51, loop depth 0, count 247627847 (estimated locally), maybe hot
;;  prev block 50, next block 52, flags: (RTL)
;;  pred:       50 [33.0% (guessed)]  count:247627851 (estimated locally) (FALLTHRU)
(note 321 320 322 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 51 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _24 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 323 322 324 51 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -25 [0xffffffffffffffe7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       52 [always]  count:247627847 (estimated locally) (FALLTHRU)

;; basic block 52, loop depth 0, count 1071982033 (estimated locally), maybe hot
;;  prev block 51, next block 53, flags: (RTL)
;;  pred:       46 [30.0% (guessed)]  count:321684681 (estimated locally) (FALLTHRU)
;;              51 [always]  count:247627847 (estimated locally) (FALLTHRU)
;;              50 [67.0% (guessed)]  count:502759580 (estimated locally)
(code_label 324 323 325 52 867 (nil) [1 uses])
(note 325 324 326 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 52 (set (reg/f:DI 146 [ _131 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [31 D.279540.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 327 326 330 52 (set (reg:DI 147 [ _132 ])
        (mem:DI (reg/f:DI 146 [ _131 ]) [7 MEM[(const struct PyObject *)_131].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 330 327 331 52 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 147 [ _132 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 331 330 332 52 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 268)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 268)
;;  succ:       53 [100.0% (guessed)]  count:1071553241 (estimated locally) (FALLTHRU)
;;              36 [0.0% (guessed)]  count:428792 (estimated locally)

;; basic block 53, loop depth 0, count 1071553242 (estimated locally), maybe hot
;;  prev block 52, next block 54, flags: (RTL)
;;  pred:       52 [100.0% (guessed)]  count:1071553241 (estimated locally) (FALLTHRU)
(note 332 331 333 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 333 332 334 53 (parallel [
            (set (reg:DI 148 [ _133 ])
                (plus:DI (reg:DI 147 [ _132 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 334 333 335 53 (set (mem:DI (reg/f:DI 146 [ _131 ]) [7 _131->ob_refcnt+0 S8 A64])
        (reg:DI 148 [ _133 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 335 334 336 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 148 [ _133 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 336 335 337 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 340)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 340)
;;  succ:       55 [67.0% (guessed)]  count:717940674 (estimated locally)
;;              54 [33.0% (guessed)]  count:353612568 (estimated locally) (FALLTHRU)

;; basic block 54, loop depth 0, count 353612566 (estimated locally), maybe hot
;;  prev block 53, next block 55, flags: (RTL)
;;  pred:       53 [33.0% (guessed)]  count:353612568 (estimated locally) (FALLTHRU)
(note 337 336 338 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 54 (set (reg:DI 5 di)
        (reg/f:DI 146 [ _131 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 339 338 340 54 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -43 [0xffffffffffffffd5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       55 [always]  count:353612566 (estimated locally) (FALLTHRU)

;; basic block 55, loop depth 0, count 1071553242 (estimated locally), maybe hot
;;  prev block 54, next block 56, flags: (RTL)
;;  pred:       53 [67.0% (guessed)]  count:717940674 (estimated locally)
;;              54 [always]  count:353612566 (estimated locally) (FALLTHRU)
(code_label 340 339 341 55 870 (nil) [1 uses])
(note 341 340 342 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 342 341 343 55 (set (reg/f:DI 86 [ _23 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -104 [0xffffffffffffff98])) [31 MEM[(struct handle *)&D.279516 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 343 342 344 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 86 [ _23 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 344 343 348 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 348)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 348)
;;  succ:       59 [30.0% (guessed)]  count:321465969 (estimated locally) (FALLTHRU)
;;              56 [70.0% (guessed)]  count:750087273 (estimated locally)

;; basic block 56, loop depth 0, count 750087277 (estimated locally), maybe hot
;;  prev block 55, next block 57, flags: (RTL)
;;  pred:       55 [70.0% (guessed)]  count:750087273 (estimated locally)
(code_label 348 344 349 56 871 (nil) [1 uses])
(note 349 348 350 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 353 56 (set (reg:DI 144 [ _128 ])
        (mem:DI (reg/f:DI 86 [ _23 ]) [7 MEM[(const struct PyObject *)_23].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 353 350 354 56 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 144 [ _128 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 354 353 355 56 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 250)
;;  succ:       57 [100.0% (guessed)]  count:749787243 (estimated locally) (FALLTHRU)
;;              32 [0.0% (guessed)]  count:300034 (estimated locally)

;; basic block 57, loop depth 0, count 749877250 (estimated locally), maybe hot
;;  prev block 56, next block 58, flags: (RTL)
;;  pred:       56 [100.0% (guessed)]  count:749787243 (estimated locally) (FALLTHRU)
(note 355 354 356 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 57 (parallel [
            (set (reg:DI 145 [ _130 ])
                (plus:DI (reg:DI 144 [ _128 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 357 356 359 57 (set (mem:DI (reg/f:DI 86 [ _23 ]) [7 MEM[(struct PyObject *)_23].ob_refcnt+0 S8 A64])
        (reg:DI 145 [ _130 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 359 357 360 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 145 [ _130 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 360 359 361 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 364)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 364)
;;  succ:       59 [67.0% (guessed)]  count:502417759 (estimated locally)
;;              58 [33.0% (guessed)]  count:247459491 (estimated locally) (FALLTHRU)

;; basic block 58, loop depth 0, count 247459492 (estimated locally), maybe hot
;;  prev block 57, next block 59, flags: (RTL)
;;  pred:       57 [33.0% (guessed)]  count:247459491 (estimated locally) (FALLTHRU)
(note 361 360 362 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 58 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _23 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 363 362 364 58 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -24 [0xffffffffffffffe8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       59 [always]  count:247459492 (estimated locally) (FALLTHRU)

;; basic block 59, loop depth 0, count 1071253215 (estimated locally), maybe hot
;;  prev block 58, next block 60, flags: (RTL)
;;  pred:       55 [30.0% (guessed)]  count:321465969 (estimated locally) (FALLTHRU)
;;              58 [always]  count:247459492 (estimated locally) (FALLTHRU)
;;              57 [67.0% (guessed)]  count:502417759 (estimated locally)
(code_label 364 363 365 59 872 (nil) [1 uses])
(note 365 364 366 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 59 (set (reg/f:DI 141 [ _125 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [31 D.279516.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 367 366 370 59 (set (reg:DI 142 [ _126 ])
        (mem:DI (reg/f:DI 141 [ _125 ]) [7 MEM[(const struct PyObject *)_125].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 370 367 371 59 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 142 [ _126 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 371 370 372 59 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 268)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 268)
;;  succ:       60 [100.0% (guessed)]  count:1070824714 (estimated locally) (FALLTHRU)
;;              36 [0.0% (guessed)]  count:428501 (estimated locally)

;; basic block 60, loop depth 0, count 1070824715 (estimated locally), maybe hot
;;  prev block 59, next block 61, flags: (RTL)
;;  pred:       59 [100.0% (guessed)]  count:1070824714 (estimated locally) (FALLTHRU)
(note 372 371 373 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 373 372 374 60 (parallel [
            (set (reg:DI 143 [ _127 ])
                (plus:DI (reg:DI 142 [ _126 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 374 373 375 60 (set (mem:DI (reg/f:DI 141 [ _125 ]) [7 _125->ob_refcnt+0 S8 A64])
        (reg:DI 143 [ _127 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 375 374 376 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 143 [ _127 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 376 375 377 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 380)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 380)
;;  succ:       62 [67.0% (guessed)]  count:717452561 (estimated locally)
;;              61 [33.0% (guessed)]  count:353372154 (estimated locally) (FALLTHRU)

;; basic block 61, loop depth 0, count 353372156 (estimated locally), maybe hot
;;  prev block 60, next block 62, flags: (RTL)
;;  pred:       60 [33.0% (guessed)]  count:353372154 (estimated locally) (FALLTHRU)
(note 377 376 378 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 378 377 379 61 (set (reg:DI 5 di)
        (reg/f:DI 141 [ _125 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 379 378 380 61 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -42 [0xffffffffffffffd6])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       62 [always]  count:353372156 (estimated locally) (FALLTHRU)

;; basic block 62, loop depth 0, count 1070824715 (estimated locally), maybe hot
;;  prev block 61, next block 63, flags: (RTL)
;;  pred:       60 [67.0% (guessed)]  count:717452561 (estimated locally)
;;              61 [always]  count:353372156 (estimated locally) (FALLTHRU)
(code_label 380 379 381 62 874 (nil) [1 uses])
(note 381 380 382 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 62 (set (reg/f:DI 138 [ _122 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -120 [0xffffffffffffff88])) [31 D.279259.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 383 382 386 62 (set (reg:DI 139 [ _123 ])
        (mem:DI (reg/f:DI 138 [ _122 ]) [7 MEM[(const struct PyObject *)_122].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 386 383 387 62 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 139 [ _123 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 387 386 388 62 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 268)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 268)
;;  succ:       63 [100.0% (guessed)]  count:1070396386 (estimated locally) (FALLTHRU)
;;              36 [0.0% (guessed)]  count:428329 (estimated locally)

;; basic block 63, loop depth 0, count 1070396388 (estimated locally), maybe hot
;;  prev block 62, next block 64, flags: (RTL)
;;  pred:       62 [100.0% (guessed)]  count:1070396386 (estimated locally) (FALLTHRU)
(note 388 387 389 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 63 (parallel [
            (set (reg:DI 140 [ _124 ])
                (plus:DI (reg:DI 139 [ _123 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 390 389 391 63 (set (mem:DI (reg/f:DI 138 [ _122 ]) [7 _122->ob_refcnt+0 S8 A64])
        (reg:DI 140 [ _124 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 391 390 392 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 140 [ _124 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 392 391 393 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 396)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 396)
;;  succ:       65 [67.0% (guessed)]  count:717165582 (estimated locally)
;;              64 [33.0% (guessed)]  count:353230806 (estimated locally) (FALLTHRU)

;; basic block 64, loop depth 0, count 353230802 (estimated locally), maybe hot
;;  prev block 63, next block 65, flags: (RTL)
;;  pred:       63 [33.0% (guessed)]  count:353230806 (estimated locally) (FALLTHRU)
(note 393 392 394 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 64 (set (reg:DI 5 di)
        (reg/f:DI 138 [ _122 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 395 394 396 64 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -41 [0xffffffffffffffd7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       65 [always]  count:353230802 (estimated locally) (FALLTHRU)

;; basic block 65, loop depth 0, count 1070396388 (estimated locally), maybe hot
;;  prev block 64, next block 66, flags: (RTL)
;;  pred:       63 [67.0% (guessed)]  count:717165582 (estimated locally)
;;              64 [always]  count:353230802 (estimated locally) (FALLTHRU)
(code_label 396 395 397 65 875 (nil) [1 uses])
(note 397 396 398 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 398 397 399 65 (set (mem/f:DI (reg/v/f:DI 155 [ data ]) [43 data_6(D)->convertible+0 S8 A64])
        (reg/v/f:DI 82 [ storage ])) "src/ChineseCheckersWrapper.cpp":83:27 74 {*movdi_internal}
     (nil))
(insn 399 398 400 65 (set (reg/f:DI 83 [ _9 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -128 [0xffffffffffffff80])) [31 handle.m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 400 399 401 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ _9 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 401 400 405 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 405)
;;  succ:       75 [30.0% (guessed)]  count:321118913 (estimated locally) (FALLTHRU)
;;              66 [70.0% (guessed)]  count:749277475 (estimated locally)

;; basic block 66, loop depth 0, count 749277477 (estimated locally), maybe hot
;;  prev block 65, next block 67, flags: (RTL)
;;  pred:       65 [70.0% (guessed)]  count:749277475 (estimated locally)
(code_label 405 401 406 66 876 (nil) [1 uses])
(note 406 405 407 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 410 66 (set (reg:DI 136 [ _119 ])
        (mem:DI (reg/f:DI 83 [ _9 ]) [7 MEM[(const struct PyObject *)_9].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 410 407 411 66 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 136 [ _119 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 411 410 412 66 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 250)
;;  succ:       67 [100.0% (guessed)]  count:748977767 (estimated locally) (FALLTHRU)
;;              32 [0.0% (guessed)]  count:299710 (estimated locally)

;; basic block 67, loop depth 0, count 749067677 (estimated locally), maybe hot
;;  prev block 66, next block 68, flags: (RTL)
;;  pred:       66 [100.0% (guessed)]  count:748977767 (estimated locally) (FALLTHRU)
(note 412 411 413 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 67 (parallel [
            (set (reg:DI 137 [ _121 ])
                (plus:DI (reg:DI 136 [ _119 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 414 413 416 67 (set (mem:DI (reg/f:DI 83 [ _9 ]) [7 MEM[(struct PyObject *)_9].ob_refcnt+0 S8 A64])
        (reg:DI 137 [ _121 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 416 414 417 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 137 [ _121 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 417 416 418 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 451)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 451)
;;  succ:       75 [67.0% (guessed)]  count:501875345 (estimated locally)
;;              68 [33.0% (guessed)]  count:247192332 (estimated locally) (FALLTHRU)

;; basic block 68, loop depth 0, count 247192329 (estimated locally), maybe hot
;;  prev block 67, next block 69, flags: (RTL)
;;  pred:       67 [33.0% (guessed)]  count:247192332 (estimated locally) (FALLTHRU)
(note 418 417 419 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 68 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _9 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 420 419 482 68 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -23 [0xffffffffffffffe9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       75 [always]  count:247192329 (estimated locally) (FALLTHRU)

;; basic block 69, loop depth 0, count 0 (precise), probably never executed
;;  prev block 68, next block 70, flags: (RTL)
;;  pred:       6 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 482 420 485 69 885 (nil) [1 uses])
(note 485 482 483 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 483 485 425 69 (set (reg:DI 201)
        (reg:DI 0 ax)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
;;  succ:       70 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 70, loop depth 0, count 0 (precise), probably never executed
;;  prev block 69, next block 71, flags: (RTL)
;;  pred:       69 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              48 [always]  count:0 (precise) (FALLTHRU)
(code_label 425 483 426 70 868 (nil) [0 uses])
(note 426 425 427 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 70 (set (reg:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -104 [0xffffffffffffff98])) [31 MEM[(struct handle *)&D.279516 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 428 427 429 70 (set (reg:DI 5 di)
        (reg:DI 203)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 429 428 430 70 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -27 [0xffffffffffffffe5])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 430 429 431 70 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 431 430 432 70 (set (reg:DI 5 di)
        (reg:DI 204)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 432 431 433 70 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 433 432 476 70 (set (reg:DI 205)
        (reg:DI 201)) 74 {*movdi_internal}
     (nil))
;;  succ:       72 [always]  count:0 (precise) (FALLTHRU)

;; basic block 71, loop depth 0, count 0 (precise), probably never executed
;;  prev block 70, next block 72, flags: (RTL)
;;  pred:       5 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 476 433 481 71 884 (nil) [1 uses])
(note 481 476 477 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 477 481 435 71 (set (reg:DI 205)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       72 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 72, loop depth 0, count 0 (precise), probably never executed
;;  prev block 71, next block 73, flags: (RTL)
;;  pred:       71 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              70 [always]  count:0 (precise) (FALLTHRU)
(code_label 435 477 436 72 879 (nil) [0 uses])
(note 436 435 437 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 437 436 438 72 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 438 437 439 72 (set (reg:DI 5 di)
        (reg:DI 207)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 439 438 440 72 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 440 439 470 72 (set (reg:DI 208)
        (reg:DI 205)) 74 {*movdi_internal}
     (nil))
;;  succ:       74 [always]  count:0 (precise) (FALLTHRU)

;; basic block 73, loop depth 0, count 0 (precise), probably never executed
;;  prev block 72, next block 74, flags: (RTL)
;;  pred:       4 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 470 440 475 73 883 (nil) [1 uses])
(note 475 470 471 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 471 475 442 73 (set (reg:DI 208)
        (reg:DI 0 ax)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
;;  succ:       74 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 74, loop depth 0, count 0 (precise), probably never executed
;;  prev block 73, next block 75, flags: (RTL)
;;  pred:       73 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              72 [always]  count:0 (precise) (FALLTHRU)
(code_label 442 471 443 74 880 (nil) [0 uses])
(note 443 442 444 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 74 (set (reg:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -128 [0xffffffffffffff80])) [31 handle.m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 445 444 446 74 (set (reg:DI 5 di)
        (reg:DI 210)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 446 445 447 74 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -28 [0xffffffffffffffe4])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 447 446 448 74 (set (reg/f:DI 151 [ D.330363 ])
        (reg:DI 208)) 74 {*movdi_internal}
     (nil))
(insn 448 447 449 74 (set (reg:DI 5 di)
        (reg/f:DI 151 [ D.330363 ])) 74 {*movdi_internal}
     (nil))
(call_insn 449 448 451 74 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 75, loop depth 0, count 1070096679 (estimated locally), maybe hot
;;  prev block 74, next block 76, flags: (RTL)
;;  pred:       68 [always]  count:247192329 (estimated locally) (FALLTHRU)
;;              65 [30.0% (guessed)]  count:321118913 (estimated locally) (FALLTHRU)
;;              67 [67.0% (guessed)]  count:501875345 (estimated locally)
(code_label 451 449 458 75 839 (nil) [1 uses])
(note 458 451 452 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 452 458 453 75 (set (reg/f:DI 211)
        (const_int 40 [0x28])) "src/ChineseCheckersWrapper.cpp":84:5 74 {*movdi_internal}
     (nil))
(insn 453 452 454 75 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.330364+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 211) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "src/ChineseCheckersWrapper.cpp":84:5 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 454 453 468 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 457)
            (pc))) "src/ChineseCheckersWrapper.cpp":84:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 457)
;;  succ:       77 [100.0% (guessed)]  count:1069668641 (estimated locally)
;;              76 [0.0% (guessed)]  count:428038 (estimated locally) (FALLTHRU)

;; basic block 76, loop depth 0, count 428038 (estimated locally)
;;  prev block 75, next block 77, flags: (RTL)
;;  pred:       75 [0.0% (guessed)]  count:428038 (estimated locally) (FALLTHRU)
(note 468 454 455 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(call_insn 455 468 457 76 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":84:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 77, loop depth 0, count 1069668641 (estimated locally), maybe hot
;;  prev block 76, next block 1, flags: (RTL)
;;  pred:       75 [100.0% (guessed)]  count:1069668641 (estimated locally)
(code_label 457 455 469 77 881 (nil) [1 uses])
(note 469 457 0 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:1069668641 (estimated locally) (FALLTHRU)


;; Function std::vector<std::vector<int> >::_M_realloc_insert<std::vector<int, std::allocator<int> > > (_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, funcdef_no=12523, decl_uid=293460, cgraph_uid=4438, symbol_order=5358)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:118111600 (estimated locally) (FALLTHRU)
(note 13 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 13 3 2 (set (reg/f:DI 175 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/c++/11/bits/vector.tcc":426:7 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 176 [ __position ])
        (reg:DI 4 si [ __position ])) "/usr/include/c++/11/bits/vector.tcc":426:7 74 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 177 [ __args#0 ])
        (reg:DI 1 dx [ __args#0 ])) "/usr/include/c++/11/bits/vector.tcc":426:7 74 {*movdi_internal}
     (nil))
(note 5 4 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 5 16 2 (set (reg/v/f:DI 135 [ tmp.2273 ])
        (reg/v:DI 176 [ __position ])) 74 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 109 [ _75 ])
        (mem/f:DI (reg/f:DI 175 [ this ]) [124 MEM[(struct vector * *)this_17(D)]+0 S8 A64])) 74 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 110 [ _76 ])
        (mem/f:DI (plus:DI (reg/f:DI 175 [ this ])
                (const_int 8 [0x8])) [124 MEM[(struct vector * *)this_17(D) + 8B]+0 S8 A64])) 74 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 178)
                (minus:DI (reg/f:DI 110 [ _76 ])
                    (reg/f:DI 109 [ _75 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 179)
                (ashiftrt:DI (reg:DI 178)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 704 {*ashrdi3_1}
     (nil))
(insn 20 19 21 2 (set (reg:DI 181)
        (const_int -6148914691236517205 [0xaaaaaaaaaaaaaaab])) "/usr/include/c++/11/bits/stl_vector.h":919:50 74 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 180)
                (mult:DI (reg:DI 179)
                    (reg:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 409 {*muldi3_1}
     (expr_list:REG_EQUAL (div:DI (reg:DI 178)
            (const_int 24 [0x18]))
        (nil)))
(insn 22 21 23 2 (set (reg:DI 114 [ _81 ])
        (reg:DI 180)) "/usr/include/c++/11/bits/stl_vector.h":919:74 74 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 182)
        (const_int 384307168202282325 [0x555555555555555])) "/usr/include/c++/11/bits/stl_vector.h":1758:2 74 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 114 [ _81 ])
            (reg:DI 182))) "/usr/include/c++/11/bits/stl_vector.h":1758:2 12 {*cmpdi_1}
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1758:2 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 31)
;;  succ:       3 [0.0% (guessed)]  count:47245 (estimated locally) (FALLTHRU)
;;              4 [100.0% (guessed)]  count:118064355 (estimated locally)

;; basic block 3, loop depth 0, count 47245 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:47245 (estimated locally) (FALLTHRU)
(note 26 25 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (reg:DI 183)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f1a3375b240 *.LC23>)) "/usr/include/c++/11/bits/stl_vector.h":1759:24 74 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg:DI 183)) "/usr/include/c++/11/bits/stl_vector.h":1759:24 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f1a3375b240 *.LC23>)
        (nil)))
(call_insn 29 28 31 3 (call (mem:QI (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7f1a40e4a200 __throw_length_error>) [0 __throw_length_error S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1759:24 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7f1a40e4a200 __throw_length_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 4, loop depth 0, count 118064356 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:118064355 (estimated locally)
(code_label 31 29 32 4 912 (nil) [1 uses])
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (parallel [
            (set (reg:DI 184)
                (umax:DI (reg:DI 114 [ _81 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 1139 {*umaxdi3_1}
     (nil))
(insn 34 33 35 4 (set (reg:DI 131 [ _124+8 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg:CCC 17 flags)
                (compare:CCC (plus:DI (reg:DI 114 [ _81 ])
                        (reg:DI 184))
                    (reg:DI 114 [ _81 ])))
            (set (reg:DI 185)
                (plus:DI (reg:DI 114 [ _81 ])
                    (reg:DI 184)))
        ]) 358 {*adddi3_cc_overflow_1}
     (nil))
(jump_insn 36 35 39 4 (set (pc)
        (if_then_else (ltu (reg:CCC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 536868 (nil))
 -> 39)
;;  succ:       5 [0.0% (guessed)]  count:59031 (estimated locally)
;;              6 [100.0% (guessed)]  count:118005325 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 59031 (estimated locally)
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [0.0% (guessed)]  count:59031 (estimated locally)
(code_label 39 36 273 5 914 (nil) [1 uses])
(note 273 39 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 273 41 5 (set (reg:DI 131 [ _124+8 ])
        (const_int 1 [0x1])) 74 {*movdi_internal}
     (nil))
;;  succ:       6 [always]  count:59031 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 118064356 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [100.0% (guessed)]  count:118005325 (estimated locally) (FALLTHRU)
;;              5 [always]  count:59031 (estimated locally) (FALLTHRU)
(code_label 41 40 274 6 913 (nil) [0 uses])
(note 274 41 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 274 43 6 (set (reg:DI 130 [ _124 ])
        (reg:DI 185)) 74 {*movdi_internal}
     (nil))
(insn 43 42 44 6 (set (reg/v:DI 117 [ __len ])
        (reg:DI 130 [ _124 ])) "/usr/include/c++/11/bits/stl_vector.h":1761:18 74 {*movdi_internal}
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:DI 108 [ _64 ])
                (minus:DI (reg/v/f:DI 135 [ tmp.2273 ])
                    (reg/f:DI 109 [ _75 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_iterator.h":1237:27 283 {*subdi_1}
     (nil))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 131 [ _124+8 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":1762:48 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 263)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1762:48 806 {*jcc}
     (int_list:REG_BR_PROB 375809644 (nil))
 -> 263)
;;  succ:       31 [35.0% (guessed)]  count:41322525 (estimated locally)
;;              7 [65.0% (guessed)]  count:76741831 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 76741831 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [65.0% (guessed)]  count:76741831 (estimated locally) (FALLTHRU)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 117 [ __len ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 49 48 264 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 238)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 19166284 (nil))
 -> 238)
;;  succ:       30 [1.8% (guessed)]  count:1369841 (estimated locally)
;;              8 [98.2% (guessed)]  count:75371990 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 75371990 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [98.2% (guessed)]  count:75371990 (estimated locally) (FALLTHRU)
(note 264 49 6 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 6 264 7 8 (set (reg/v/f:DI 106 [ prephitmp_53 ])
        (const_int 24 [0x18])) 74 {*movdi_internal}
     (nil))
(insn 7 6 8 8 (set (reg/f:DI 119 [ prephitmp_88 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 8 7 255 8 (set (reg/f:DI 104 [ iftmp.37_48 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       9 [always]  count:75371990 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 111609777 (estimated locally), maybe hot
;; Invalid sum of incoming counts 133463195 (estimated locally), should be 111609777 (estimated locally)
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [always]  count:75371990 (estimated locally) (FALLTHRU)
;;              32 [always]  count:58091205 (estimated locally) (FALLTHRU)
(code_label 255 8 50 9 927 (nil) [0 uses])
(note 50 255 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (parallel [
            (set (reg/f:DI 83 [ _2 ])
                (plus:DI (reg/f:DI 104 [ iftmp.37_48 ])
                    (reg:DI 108 [ _64 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":449:28 210 {*adddi_1}
     (nil))
(insn 52 51 53 9 (set (reg:V2DI 186 [ vect__43.2297 ])
        (mem:V2DI (reg/v/f:DI 177 [ __args#0 ]) [142 MEM <vector(2) long unsigned int> [(int * *)__args#0_23(D)]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 53 52 54 9 (set (mem:V2DI (reg/f:DI 83 [ _2 ]) [142 MEM <vector(2) long unsigned int> [(int * *)_2]+0 S16 A64])
        (reg:V2DI 186 [ vect__43.2297 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 54 53 55 9 (set (reg/f:DI 187)
        (mem/f:DI (plus:DI (reg/v/f:DI 177 [ __args#0 ])
                (const_int 16 [0x10])) [142 MEM[(struct _Vector_impl_data &)__args#0_23(D)]._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 55 54 56 9 (set (mem/f:DI (plus:DI (reg/f:DI 83 [ _2 ])
                (const_int 16 [0x10])) [142 MEM[(struct _Vector_impl_data *)_2]._M_end_of_storage+0 S8 A64])
        (reg/f:DI 187)) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 56 55 57 9 (set (mem/f:DI (plus:DI (reg/v/f:DI 177 [ __args#0 ])
                (const_int 16 [0x10])) [142 MEM[(struct _Vector_impl_data &)__args#0_23(D)]._M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":105:57 74 {*movdi_internal}
     (nil))
(insn 57 56 58 9 (set (reg:V2DI 188)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":105:17 1439 {movv2di_internal}
     (nil))
(insn 58 57 59 9 (set (mem:V2DI (reg/v/f:DI 177 [ __args#0 ]) [142 MEM <vector(2) long unsigned int> [(int * *)__args#0_23(D)]+0 S16 A64])
        (reg:V2DI 188)) "/usr/include/c++/11/bits/stl_vector.h":105:17 1439 {movv2di_internal}
     (nil))
(insn 59 58 60 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 135 [ tmp.2273 ])
            (reg/f:DI 109 [ _75 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 12 {*cmpdi_1}
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 152)
;;  succ:       10 [89.0% (guessed)]  count:99332702 (estimated locally) (FALLTHRU)
;;              19 [11.0% (guessed)]  count:12277075 (estimated locally)

;; basic block 10, loop depth 0, count 99332702 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [89.0% (guessed)]  count:99332702 (estimated locally) (FALLTHRU)
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (set (reg:DI 98 [ ivtmp.2336 ])
        (reg/f:DI 109 [ _75 ])) 74 {*movdi_internal}
     (nil))
(insn 63 62 64 10 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/v/f:DI 135 [ tmp.2273 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 64 63 65 10 (parallel [
            (set (reg:DI 190)
                (minus:DI (reg:DI 189)
                    (reg:DI 98 [ ivtmp.2336 ])))
            (clobber (reg:CC 17 flags))
        ]) 283 {*subdi_1}
     (nil))
(insn 65 64 66 10 (parallel [
            (set (reg:DI 191)
                (lshiftrt:DI (reg:DI 190)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 703 {*lshrdi3_1}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 190)
            (const_int 8 [0x8]))
        (nil)))
(insn 66 65 67 10 (set (reg:DI 193)
        (const_int 768614336404564651 [0xaaaaaaaaaaaaaab])) 74 {*movdi_internal}
     (nil))
(insn 67 66 68 10 (parallel [
            (set (reg:DI 192)
                (mult:DI (reg:DI 191)
                    (reg:DI 193)))
            (clobber (reg:CC 17 flags))
        ]) 409 {*muldi3_1}
     (nil))
(insn 68 67 69 10 (set (reg:DI 194)
        (const_int 2305843009213693951 [0x1fffffffffffffff])) 74 {*movdi_internal}
     (nil))
(insn 69 68 70 10 (parallel [
            (set (reg:DI 150 [ _167 ])
                (and:DI (reg:DI 192)
                    (reg:DI 194)))
            (clobber (reg:CC 17 flags))
        ]) 486 {*anddi_1}
     (nil))
(insn 70 69 71 10 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 109 [ _75 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 71 70 72 10 (parallel [
            (set (reg:DI 196)
                (minus:DI (reg/f:DI 104 [ iftmp.37_48 ])
                    (reg:DI 195)))
            (clobber (reg:CC 17 flags))
        ]) 283 {*subdi_1}
     (nil))
(insn 72 71 75 10 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg:DI 196)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 75 72 76 10 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 197)
            (const_int 32 [0x20]))) 12 {*cmpdi_1}
     (nil))
(insn 76 75 77 10 (set (reg:QI 199)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) 802 {*setcc_qi}
     (nil))
(insn 77 76 78 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 199)
            (const_int 0 [0]))) 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 78 77 275 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 266)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 107374188 (nil))
 -> 266)
;;  succ:       16 [10.0% (guessed)]  count:9933270 (estimated locally)
;;              11 [90.0% (guessed)]  count:89399432 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 0, count 89399432 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [90.0% (guessed)]  count:89399432 (estimated locally) (FALLTHRU)
(note 275 78 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 275 80 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 150 [ _167 ])
            (const_int 0 [0]))) 8 {*cmpdi_ccno_1}
     (nil))
(insn 80 79 81 11 (set (reg:QI 201)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) 802 {*setcc_qi}
     (nil))
(insn 81 80 82 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 201)
            (const_int 0 [0]))) 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 82 81 83 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 266)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 119304644 (nil))
 -> 266)
;;  succ:       16 [11.1% (guessed)]  count:9933270 (estimated locally)
;;              12 [88.9% (guessed)]  count:79466162 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 79466162 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [88.9% (guessed)]  count:79466162 (estimated locally) (FALLTHRU)
(note 83 82 84 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 12 (parallel [
            (set (reg:DI 161 [ niters.2282 ])
                (plus:DI (reg:DI 150 [ _167 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 85 84 86 12 (set (reg:DI 125 [ ivtmp.2339 ])
        (reg/f:DI 104 [ iftmp.37_48 ])) 74 {*movdi_internal}
     (nil))
(insn 86 85 87 12 (parallel [
            (set (reg:DI 202 [ bnd.2283 ])
                (lshiftrt:DI (reg:DI 161 [ niters.2282 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 703 {*lshrdi3_1}
     (nil))
(insn 87 86 88 12 (set (reg:DI 203)
        (reg:DI 202 [ bnd.2283 ])) 74 {*movdi_internal}
     (nil))
(insn 88 87 89 12 (parallel [
            (set (reg:DI 204)
                (ashift:DI (reg:DI 203)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 89 88 90 12 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg:DI 204)
                    (reg:DI 202 [ bnd.2283 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 202 [ bnd.2283 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 90 89 91 12 (parallel [
            (set (reg:DI 206)
                (ashift:DI (reg:DI 205)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 91 90 92 12 (set (reg:DI 205)
        (reg:DI 206)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 202 [ bnd.2283 ])
            (const_int 48 [0x30]))
        (nil)))
(insn 92 91 106 12 (parallel [
            (set (reg:DI 94 [ _13 ])
                (plus:DI (reg:DI 205)
                    (reg:DI 98 [ ivtmp.2336 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
;;  succ:       13 [always]  count:79466162 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 1, count 476796972 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       13 [83.3% (adjusted)]  count:397330811 (estimated locally) (DFS_BACK)
;;              12 [always]  count:79466162 (estimated locally) (FALLTHRU)
(code_label 106 92 93 13 919 (nil) [1 uses])
(note 93 106 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 13 (set (reg/f:DI 96 [ _20 ])
        (reg:DI 98 [ ivtmp.2336 ])) 74 {*movdi_internal}
     (nil))
(insn 95 94 96 13 (set (reg:V2DI 207)
        (mem:V2DI (plus:DI (reg/f:DI 96 [ _20 ])
                (const_int 16 [0x10])) [142 MEM <vector(2) long unsigned int> [(int * *)_20 + 16B]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 96 95 97 13 (set (reg:V2DI 172 [ vect__36.2290 ])
        (reg:V2DI 207)) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 97 96 98 13 (set (reg:V2DI 208)
        (mem:V2DI (plus:DI (reg/f:DI 96 [ _20 ])
                (const_int 32 [0x20])) [142 MEM <vector(2) long unsigned int> [(int * *)_20 + 32B]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 98 97 99 13 (set (reg:V2DI 173 [ vect__36.2291 ])
        (reg:V2DI 208)) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 99 98 100 13 (set (reg/f:DI 99 [ _37 ])
        (reg:DI 125 [ ivtmp.2339 ])) 74 {*movdi_internal}
     (nil))
(insn 100 99 101 13 (set (reg:V2DI 209 [ vect__36.2289 ])
        (mem:V2DI (reg/f:DI 96 [ _20 ]) [142 MEM <vector(2) long unsigned int> [(int * *)_20]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 101 100 102 13 (set (mem:V2DI (reg/f:DI 99 [ _37 ]) [142 MEM <vector(2) long unsigned int> [(int * *)_37]+0 S16 A64])
        (reg:V2DI 209 [ vect__36.2289 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 102 101 103 13 (set (mem:V2DI (plus:DI (reg/f:DI 99 [ _37 ])
                (const_int 16 [0x10])) [142 MEM <vector(2) long unsigned int> [(int * *)_37 + 16B]+0 S16 A64])
        (reg:V2DI 172 [ vect__36.2290 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 103 102 104 13 (set (mem:V2DI (plus:DI (reg/f:DI 99 [ _37 ])
                (const_int 32 [0x20])) [142 MEM <vector(2) long unsigned int> [(int * *)_37 + 32B]+0 S16 A64])
        (reg:V2DI 173 [ vect__36.2291 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 104 103 105 13 (parallel [
            (set (reg:DI 98 [ ivtmp.2336 ])
                (plus:DI (reg:DI 98 [ ivtmp.2336 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 105 104 107 13 (parallel [
            (set (reg:DI 125 [ ivtmp.2339 ])
                (plus:DI (reg:DI 125 [ ivtmp.2339 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 107 105 108 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 94 [ _13 ])
            (reg:DI 98 [ ivtmp.2336 ]))) 12 {*cmpdi_1}
     (nil))
(jump_insn 108 107 109 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 894784862 (nil))
 -> 106)
;;  succ:       13 [83.3% (adjusted)]  count:397330811 (estimated locally) (DFS_BACK)
;;              14 [16.7% (adjusted)]  count:79466161 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 79466162 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [16.7% (adjusted)]  count:79466161 (estimated locally) (FALLTHRU)
(note 109 108 110 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 14 (parallel [
            (set (reg:DI 167 [ niters_vector_mult_vf.2284 ])
                (and:DI (reg:DI 161 [ niters.2282 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 486 {*anddi_1}
     (nil))
(insn 111 110 112 14 (set (reg:DI 210)
        (reg:DI 167 [ niters_vector_mult_vf.2284 ])) 74 {*movdi_internal}
     (nil))
(insn 112 111 113 14 (parallel [
            (set (reg:DI 211)
                (ashift:DI (reg:DI 210)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 113 112 114 14 (parallel [
            (set (reg:DI 212)
                (plus:DI (reg:DI 211)
                    (reg:DI 167 [ niters_vector_mult_vf.2284 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 167 [ niters_vector_mult_vf.2284 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 114 113 115 14 (parallel [
            (set (reg:DI 213)
                (ashift:DI (reg:DI 212)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 115 114 116 14 (set (reg:DI 212)
        (reg:DI 213)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 167 [ niters_vector_mult_vf.2284 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 116 115 117 14 (set (reg:DI 169 [ _215 ])
        (reg:DI 212)) 74 {*movdi_internal}
     (nil))
(insn 117 116 118 14 (parallel [
            (set (reg/f:DI 168 [ tmp.2285 ])
                (plus:DI (reg/f:DI 104 [ iftmp.37_48 ])
                    (reg:DI 169 [ _215 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 118 117 119 14 (parallel [
            (set (reg/f:DI 170 [ tmp.2286 ])
                (plus:DI (reg/f:DI 109 [ _75 ])
                    (reg:DI 169 [ _215 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 119 118 120 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 161 [ niters.2282 ])
            (reg:DI 167 [ niters_vector_mult_vf.2284 ]))) 12 {*cmpdi_1}
     (nil))
(jump_insn 120 119 121 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 143)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 357913948 (nil))
 -> 143)
;;  succ:       15 [66.7% (guessed)]  count:52977441 (estimated locally) (FALLTHRU)
;;              18 [33.3% (guessed)]  count:26488721 (estimated locally)

;; basic block 15, loop depth 0, count 481613104 (estimated locally), maybe hot
;; Invalid sum of incoming counts 52977441 (estimated locally), should be 481613104 (estimated locally)
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [66.7% (guessed)]  count:52977441 (estimated locally) (FALLTHRU)
(note 121 120 122 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 15 (set (reg:V2DI 214 [ vect__202.2304 ])
        (mem:V2DI (reg/f:DI 170 [ tmp.2286 ]) [142 MEM <vector(2) long unsigned int> [(int * *)tmp.2286_216]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 123 122 124 15 (set (mem:V2DI (reg/f:DI 168 [ tmp.2285 ]) [142 MEM <vector(2) long unsigned int> [(int * *)tmp.2285_214]+0 S16 A64])
        (reg:V2DI 214 [ vect__202.2304 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 124 123 125 15 (set (reg/f:DI 215)
        (mem/f:DI (plus:DI (reg/f:DI 170 [ tmp.2286 ])
                (const_int 16 [0x10])) [142 MEM[(struct _Vector_impl_data &)tmp.2286_216]._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 125 124 266 15 (set (mem/f:DI (plus:DI (reg/f:DI 168 [ tmp.2285 ])
                (const_int 16 [0x10])) [142 MEM[(struct _Vector_impl_data *)tmp.2285_214]._M_end_of_storage+0 S8 A64])
        (reg/f:DI 215)) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
;;  succ:       18 [always]  count:481613104 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 0, count 19866540 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       11 [11.1% (guessed)]  count:9933270 (estimated locally)
;;              10 [10.0% (guessed)]  count:9933270 (estimated locally)
(code_label 266 125 265 16 929 (nil) [2 uses])
(note 265 266 9 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 9 265 10 16 (set (reg/v/f:DI 159 [ __first ])
        (reg/f:DI 109 [ _75 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 74 {*movdi_internal}
     (nil))
(insn 10 9 128 16 (set (reg/v/f:DI 158 [ __cur ])
        (reg/f:DI 104 [ iftmp.37_48 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1030:24 74 {*movdi_internal}
     (nil))
;;  succ:       17 [always]  count:19866540 (estimated locally) (FALLTHRU)

;; basic block 17, loop depth 1, count 180604910 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [always]  count:19866540 (estimated locally) (FALLTHRU)
;;              17 [89.0% (guessed)]  count:160738370 (estimated locally) (DFS_BACK)
(code_label 128 10 129 17 918 (nil) [1 uses])
(note 129 128 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 17 (set (reg:V2DI 216 [ vect__179.2309 ])
        (mem:V2DI (reg/v/f:DI 159 [ __first ]) [142 MEM <vector(2) long unsigned int> [(int * *)__first_176]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 131 130 132 17 (set (mem:V2DI (reg/v/f:DI 158 [ __cur ]) [142 MEM <vector(2) long unsigned int> [(int * *)__cur_175]+0 S16 A64])
        (reg:V2DI 216 [ vect__179.2309 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 132 131 133 17 (set (reg/f:DI 217)
        (mem/f:DI (plus:DI (reg/v/f:DI 159 [ __first ])
                (const_int 16 [0x10])) [142 MEM[(int * *)__first_176 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 133 132 134 17 (set (mem/f:DI (plus:DI (reg/v/f:DI 158 [ __cur ])
                (const_int 16 [0x10])) [142 MEM[(int * *)__cur_175 + 16B]+0 S8 A64])
        (reg/f:DI 217)) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 134 133 135 17 (parallel [
            (set (reg/v/f:DI 159 [ __first ])
                (plus:DI (reg/v/f:DI 159 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:7 210 {*adddi_1}
     (nil))
(insn 135 134 136 17 (parallel [
            (set (reg/v/f:DI 158 [ __cur ])
                (plus:DI (reg/v/f:DI 158 [ __cur ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 210 {*adddi_1}
     (nil))
(insn 136 135 137 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 135 [ tmp.2273 ])
            (reg/v/f:DI 159 [ __first ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 12 {*cmpdi_1}
     (nil))
(jump_insn 137 136 143 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 128)
;;  succ:       17 [89.0% (guessed)]  count:160738370 (estimated locally) (DFS_BACK)
;;              18 [11.0% (guessed)]  count:19866540 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 0, count 99332702 (estimated locally), maybe hot
;; Invalid sum of incoming counts 527968365 (estimated locally), should be 99332702 (estimated locally)
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       15 [always]  count:481613104 (estimated locally) (FALLTHRU)
;;              17 [11.0% (guessed)]  count:19866540 (estimated locally) (FALLTHRU)
;;              14 [33.3% (guessed)]  count:26488721 (estimated locally)
(code_label 143 137 144 18 921 (nil) [1 uses])
(note 144 143 145 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 18 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg:DI 150 [ _167 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 210 {*adddi_1}
     (nil))
(insn 146 145 147 18 (set (reg:DI 219)
        (reg:DI 218)) "/usr/include/c++/11/bits/vector.tcc":464:8 74 {*movdi_internal}
     (nil))
(insn 147 146 148 18 (parallel [
            (set (reg:DI 220)
                (ashift:DI (reg:DI 219)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 656 {*ashldi3_1}
     (nil))
(insn 148 147 149 18 (parallel [
            (set (reg:DI 221)
                (plus:DI (reg:DI 220)
                    (reg:DI 218)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 218)
            (const_int 3 [0x3]))
        (nil)))
(insn 149 148 150 18 (parallel [
            (set (reg:DI 222)
                (ashift:DI (reg:DI 221)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 656 {*ashldi3_1}
     (nil))
(insn 150 149 151 18 (set (reg:DI 221)
        (reg:DI 222)) "/usr/include/c++/11/bits/vector.tcc":464:8 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 218)
            (const_int 24 [0x18]))
        (nil)))
(insn 151 150 152 18 (parallel [
            (set (reg/v/f:DI 106 [ prephitmp_53 ])
                (plus:DI (reg/f:DI 104 [ iftmp.37_48 ])
                    (reg:DI 221)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 210 {*adddi_1}
     (nil))
;;  succ:       19 [always]  count:99332702 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 0, count 111609777 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [always]  count:99332702 (estimated locally) (FALLTHRU)
;;              9 [11.0% (guessed)]  count:12277075 (estimated locally)
(code_label 152 151 153 19 917 (nil) [1 uses])
(note 153 152 154 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 135 [ tmp.2273 ])
            (reg/f:DI 110 [ _76 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 12 {*cmpdi_1}
     (nil))
(jump_insn 155 154 156 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 220)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 220)
;;  succ:       20 [89.0% (guessed)]  count:99332702 (estimated locally) (FALLTHRU)
;;              27 [11.0% (guessed)]  count:12277075 (estimated locally)

;; basic block 20, loop depth 0, count 99332702 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [89.0% (guessed)]  count:99332702 (estimated locally) (FALLTHRU)
(note 156 155 157 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 20 (set (reg:DI 97 [ ivtmp.2321 ])
        (reg/v/f:DI 135 [ tmp.2273 ])) 74 {*movdi_internal}
     (nil))
(insn 158 157 159 20 (set (reg:DI 224)
        (const_int -24 [0xffffffffffffffe8])) 74 {*movdi_internal}
     (nil))
(insn 159 158 160 20 (parallel [
            (set (reg:DI 223)
                (minus:DI (reg:DI 224)
                    (reg:DI 97 [ ivtmp.2321 ])))
            (clobber (reg:CC 17 flags))
        ]) 283 {*subdi_1}
     (nil))
(insn 160 159 161 20 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 110 [ _76 ])
                    (reg:DI 223)))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 161 160 162 20 (parallel [
            (set (reg:DI 226)
                (lshiftrt:DI (reg:DI 225)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 703 {*lshrdi3_1}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 225)
            (const_int 8 [0x8]))
        (nil)))
(insn 162 161 163 20 (set (reg:DI 228)
        (const_int 768614336404564651 [0xaaaaaaaaaaaaaab])) 74 {*movdi_internal}
     (nil))
(insn 163 162 164 20 (parallel [
            (set (reg:DI 227)
                (mult:DI (reg:DI 226)
                    (reg:DI 228)))
            (clobber (reg:CC 17 flags))
        ]) 409 {*muldi3_1}
     (nil))
(insn 164 163 165 20 (set (reg:DI 229)
        (const_int 2305843009213693951 [0x1fffffffffffffff])) 74 {*movdi_internal}
     (nil))
(insn 165 164 166 20 (parallel [
            (set (reg:DI 127 [ _116 ])
                (and:DI (reg:DI 227)
                    (reg:DI 229)))
            (clobber (reg:CC 17 flags))
        ]) 486 {*anddi_1}
     (nil))
(insn 166 165 167 20 (parallel [
            (set (reg:DI 102 [ niters.2270 ])
                (plus:DI (reg:DI 127 [ _116 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 167 166 168 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 127 [ _116 ])
            (const_int 0 [0]))) 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 168 167 169 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 271)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 107374188 (nil))
 -> 271)
;;  succ:       21 [90.0% (guessed)]  count:89399432 (estimated locally) (FALLTHRU)
;;              24 [10.0% (guessed)]  count:9933270 (estimated locally)

;; basic block 21, loop depth 0, count 89399432 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [90.0% (guessed)]  count:89399432 (estimated locally) (FALLTHRU)
(note 169 168 170 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 21 (set (reg:DI 115 [ ivtmp.2324 ])
        (reg/v/f:DI 106 [ prephitmp_53 ])) 74 {*movdi_internal}
     (nil))
(insn 171 170 172 21 (parallel [
            (set (reg:DI 230 [ bnd.2271 ])
                (lshiftrt:DI (reg:DI 102 [ niters.2270 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 703 {*lshrdi3_1}
     (nil))
(insn 172 171 173 21 (set (reg:DI 231)
        (reg:DI 230 [ bnd.2271 ])) 74 {*movdi_internal}
     (nil))
(insn 173 172 174 21 (parallel [
            (set (reg:DI 232)
                (ashift:DI (reg:DI 231)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 174 173 175 21 (parallel [
            (set (reg:DI 233)
                (plus:DI (reg:DI 232)
                    (reg:DI 230 [ bnd.2271 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 230 [ bnd.2271 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 175 174 176 21 (parallel [
            (set (reg:DI 234)
                (ashift:DI (reg:DI 233)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 176 175 177 21 (set (reg:DI 233)
        (reg:DI 234)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 230 [ bnd.2271 ])
            (const_int 48 [0x30]))
        (nil)))
(insn 177 176 191 21 (parallel [
            (set (reg:DI 105 [ _52 ])
                (plus:DI (reg:DI 233)
                    (reg:DI 97 [ ivtmp.2321 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
;;  succ:       22 [always]  count:89399432 (estimated locally) (FALLTHRU)

;; basic block 22, loop depth 1, count 536396590 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       22 [83.3% (adjusted)]  count:446997160 (estimated locally) (DFS_BACK)
;;              21 [always]  count:89399432 (estimated locally) (FALLTHRU)
(code_label 191 177 178 22 924 (nil) [1 uses])
(note 178 191 179 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 22 (set (reg/f:DI 164 [ _205 ])
        (reg:DI 97 [ ivtmp.2321 ])) 74 {*movdi_internal}
     (nil))
(insn 180 179 181 22 (set (reg:V2DI 235)
        (mem:V2DI (plus:DI (reg/f:DI 164 [ _205 ])
                (const_int 16 [0x10])) [142 MEM <vector(2) long unsigned int> [(int * *)_205 + 16B]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 181 180 182 22 (set (reg:V2DI 143 [ vect__25.2278 ])
        (reg:V2DI 235)) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 182 181 183 22 (set (reg:V2DI 236)
        (mem:V2DI (plus:DI (reg/f:DI 164 [ _205 ])
                (const_int 32 [0x20])) [142 MEM <vector(2) long unsigned int> [(int * *)_205 + 32B]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 183 182 184 22 (set (reg:V2DI 145 [ vect__25.2279 ])
        (reg:V2DI 236)) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 184 183 185 22 (set (reg/f:DI 107 [ _62 ])
        (reg:DI 115 [ ivtmp.2324 ])) 74 {*movdi_internal}
     (nil))
(insn 185 184 186 22 (set (reg:V2DI 237 [ vect__25.2277 ])
        (mem:V2DI (reg/f:DI 164 [ _205 ]) [142 MEM <vector(2) long unsigned int> [(int * *)_205]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 186 185 187 22 (set (mem:V2DI (reg/f:DI 107 [ _62 ]) [142 MEM <vector(2) long unsigned int> [(int * *)_62]+0 S16 A64])
        (reg:V2DI 237 [ vect__25.2277 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 187 186 188 22 (set (mem:V2DI (plus:DI (reg/f:DI 107 [ _62 ])
                (const_int 16 [0x10])) [142 MEM <vector(2) long unsigned int> [(int * *)_62 + 16B]+0 S16 A64])
        (reg:V2DI 143 [ vect__25.2278 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 188 187 189 22 (set (mem:V2DI (plus:DI (reg/f:DI 107 [ _62 ])
                (const_int 32 [0x20])) [142 MEM <vector(2) long unsigned int> [(int * *)_62 + 32B]+0 S16 A64])
        (reg:V2DI 145 [ vect__25.2279 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 189 188 190 22 (parallel [
            (set (reg:DI 97 [ ivtmp.2321 ])
                (plus:DI (reg:DI 97 [ ivtmp.2321 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 190 189 192 22 (parallel [
            (set (reg:DI 115 [ ivtmp.2324 ])
                (plus:DI (reg:DI 115 [ ivtmp.2324 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 192 190 193 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 97 [ ivtmp.2321 ])
            (reg:DI 105 [ _52 ]))) 12 {*cmpdi_1}
     (nil))
(jump_insn 193 192 194 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 894784862 (nil))
 -> 191)
;;  succ:       22 [83.3% (adjusted)]  count:446997160 (estimated locally) (DFS_BACK)
;;              23 [16.7% (adjusted)]  count:89399430 (estimated locally) (FALLTHRU)

;; basic block 23, loop depth 0, count 89399432 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [16.7% (adjusted)]  count:89399430 (estimated locally) (FALLTHRU)
(note 194 193 195 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 23 (parallel [
            (set (reg:DI 138 [ niters_vector_mult_vf.2272 ])
                (and:DI (reg:DI 102 [ niters.2270 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 486 {*anddi_1}
     (nil))
(insn 196 195 197 23 (set (reg:DI 238)
        (reg:DI 138 [ niters_vector_mult_vf.2272 ])) 74 {*movdi_internal}
     (nil))
(insn 197 196 198 23 (parallel [
            (set (reg:DI 239)
                (ashift:DI (reg:DI 238)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 198 197 199 23 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg:DI 239)
                    (reg:DI 138 [ niters_vector_mult_vf.2272 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 138 [ niters_vector_mult_vf.2272 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 199 198 200 23 (parallel [
            (set (reg:DI 241)
                (ashift:DI (reg:DI 240)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 200 199 201 23 (set (reg:DI 240)
        (reg:DI 241)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 138 [ niters_vector_mult_vf.2272 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 201 200 202 23 (set (reg:DI 139 [ _141 ])
        (reg:DI 240)) 74 {*movdi_internal}
     (nil))
(insn 202 201 203 23 (parallel [
            (set (reg/v/f:DI 135 [ tmp.2273 ])
                (plus:DI (reg/v/f:DI 135 [ tmp.2273 ])
                    (reg:DI 139 [ _141 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 203 202 204 23 (parallel [
            (set (reg/v/f:DI 136 [ tmp.2274 ])
                (plus:DI (reg/v/f:DI 106 [ prephitmp_53 ])
                    (reg:DI 139 [ _141 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 204 203 205 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 102 [ niters.2270 ])
            (reg:DI 138 [ niters_vector_mult_vf.2272 ]))) 12 {*cmpdi_1}
     (nil))
(jump_insn 205 204 271 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 357913948 (nil))
 -> 212)
;;  succ:       25 [66.7% (guessed)]  count:59599621 (estimated locally) (FALLTHRU)
;;              26 [33.3% (guessed)]  count:29799811 (estimated locally)

;; basic block 24, loop depth 0, count 9933270 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       20 [10.0% (guessed)]  count:9933270 (estimated locally)
(code_label 271 205 270 24 930 (nil) [1 uses])
(note 270 271 11 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 11 270 206 24 (set (reg/v/f:DI 136 [ tmp.2274 ])
        (reg/v/f:DI 106 [ prephitmp_53 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1030:24 74 {*movdi_internal}
     (nil))
;;  succ:       25 [always]  count:9933270 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 0, count 632117194 (estimated locally), maybe hot
;; Invalid sum of incoming counts 69532891 (estimated locally), should be 632117194 (estimated locally)
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [always]  count:9933270 (estimated locally) (FALLTHRU)
;;              23 [66.7% (guessed)]  count:59599621 (estimated locally) (FALLTHRU)
(code_label 206 11 207 25 923 (nil) [0 uses])
(note 207 206 208 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 25 (set (reg:V2DI 242 [ vect__101.2314 ])
        (mem:V2DI (reg/v/f:DI 135 [ tmp.2273 ]) [142 MEM <vector(2) long unsigned int> [(int * *)__first_135]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 209 208 210 25 (set (mem:V2DI (reg/v/f:DI 136 [ tmp.2274 ]) [142 MEM <vector(2) long unsigned int> [(int * *)__cur_136]+0 S16 A64])
        (reg:V2DI 242 [ vect__101.2314 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 210 209 211 25 (set (reg/f:DI 243)
        (mem/f:DI (plus:DI (reg/v/f:DI 135 [ tmp.2273 ])
                (const_int 16 [0x10])) [142 MEM[(struct _Vector_impl_data &)__first_135]._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 211 210 212 25 (set (mem/f:DI (plus:DI (reg/v/f:DI 136 [ tmp.2274 ])
                (const_int 16 [0x10])) [142 MEM[(struct _Vector_impl_data *)__cur_136]._M_end_of_storage+0 S8 A64])
        (reg/f:DI 243)) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
;;  succ:       26 [always (guessed)]  count:632117194 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 0, count 99332702 (estimated locally), maybe hot
;; Invalid sum of incoming counts 661917005 (estimated locally), should be 99332702 (estimated locally)
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [always (guessed)]  count:632117194 (estimated locally) (FALLTHRU)
;;              23 [33.3% (guessed)]  count:29799811 (estimated locally)
(code_label 212 211 213 26 925 (nil) [1 uses])
(note 213 212 214 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 26 (set (reg:DI 244)
        (reg:DI 102 [ niters.2270 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 74 {*movdi_internal}
     (nil))
(insn 215 214 216 26 (parallel [
            (set (reg:DI 245)
                (ashift:DI (reg:DI 244)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 656 {*ashldi3_1}
     (nil))
(insn 216 215 217 26 (parallel [
            (set (reg:DI 246)
                (plus:DI (reg:DI 245)
                    (reg:DI 102 [ niters.2270 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 102 [ niters.2270 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 217 216 218 26 (parallel [
            (set (reg:DI 247)
                (ashift:DI (reg:DI 246)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 656 {*ashldi3_1}
     (nil))
(insn 218 217 219 26 (set (reg:DI 246)
        (reg:DI 247)) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 102 [ niters.2270 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 219 218 220 26 (parallel [
            (set (reg/v/f:DI 106 [ prephitmp_53 ])
                (plus:DI (reg/v/f:DI 106 [ prephitmp_53 ])
                    (reg:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 210 {*adddi_1}
     (nil))
;;  succ:       27 [always]  count:99332702 (estimated locally) (FALLTHRU)

;; basic block 27, loop depth 0, count 111609777 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [always]  count:99332702 (estimated locally) (FALLTHRU)
;;              19 [11.0% (guessed)]  count:12277075 (estimated locally)
(code_label 220 219 221 27 922 (nil) [1 uses])
(note 221 220 222 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 27 (set (reg:V2DI 248)
        (vec_concat:V2DI (reg/f:DI 104 [ iftmp.37_48 ])
            (reg/v/f:DI 106 [ prephitmp_53 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 223 222 224 27 (set (reg:V2DI 140 [ _143 ])
        (reg:V2DI 248)) 1439 {movv2di_internal}
     (nil))
(insn 224 223 225 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 109 [ _75 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 225 224 226 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 232)
;;  succ:       28 [53.5% (guessed)]  count:59677748 (estimated locally) (FALLTHRU)
;;              29 [46.5% (guessed)]  count:51932029 (estimated locally)

;; basic block 28, loop depth 0, count 59677747 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 [53.5% (guessed)]  count:59677748 (estimated locally) (FALLTHRU)
(note 226 225 227 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 28 (set (reg/f:DI 250)
        (mem/f:DI (plus:DI (reg/f:DI 175 [ this ])
                (const_int 16 [0x10])) [124 this_17(D)->D.262944._M_impl.D.262289._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/vector.tcc":501:39 74 {*movdi_internal}
     (nil))
(insn 228 227 229 28 (parallel [
            (set (reg:DI 249)
                (minus:DI (reg/f:DI 250)
                    (reg/f:DI 109 [ _75 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":501:39 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 175 [ this ])
                    (const_int 16 [0x10])) [124 this_17(D)->D.262944._M_impl.D.262289._M_end_of_storage+0 S8 A64])
            (reg/f:DI 109 [ _75 ]))
        (nil)))
(insn 229 228 230 28 (set (reg:DI 4 si)
        (reg:DI 249)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 230 229 231 28 (set (reg:DI 5 di)
        (reg/f:DI 109 [ _75 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 231 230 232 28 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       29 [always]  count:59677747 (estimated locally) (FALLTHRU)

;; basic block 29, loop depth 0, count 111609777 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       27 [46.5% (guessed)]  count:51932029 (estimated locally)
;;              28 [always]  count:59677747 (estimated locally) (FALLTHRU)
(code_label 232 231 233 29 926 (nil) [1 uses])
(note 233 232 234 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 29 (set (mem:V2DI (reg/f:DI 175 [ this ]) [124 MEM <vector(2) long unsigned int> [(struct vector * *)this_17(D)]+0 S16 A64])
        (reg:V2DI 140 [ _143 ])) "/usr/include/c++/11/bits/vector.tcc":502:30 1439 {movv2di_internal}
     (nil))
(insn 235 234 238 29 (set (mem/f:DI (plus:DI (reg/f:DI 175 [ this ])
                (const_int 16 [0x10])) [124 this_17(D)->D.262944._M_impl.D.262289._M_end_of_storage+0 S8 A64])
        (reg/f:DI 119 [ prephitmp_88 ])) "/usr/include/c++/11/bits/vector.tcc":504:39 74 {*movdi_internal}
     (nil))
;;  succ:       33 [always]  count:111609777 (estimated locally) (FALLTHRU)

;; basic block 30, loop depth 0, count 1369841 (estimated locally), maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       7 [1.8% (guessed)]  count:1369841 (estimated locally)
(code_label 238 235 239 30 916 (nil) [1 uses])
(note 239 238 240 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 30 (parallel [
            (set (reg:DI 251)
                (umin:DI (reg/v:DI 117 [ __len ])
                    (const_int 384307168202282325 [0x555555555555555])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/new_allocator.h":127:41 1140 {*umindi3_1}
     (nil))
(insn 241 240 242 30 (set (reg:DI 252)
        (reg:DI 251)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 242 241 243 30 (parallel [
            (set (reg:DI 253)
                (ashift:DI (reg:DI 252)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/new_allocator.h":127:41 656 {*ashldi3_1}
     (nil))
(insn 243 242 244 30 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg:DI 253)
                    (reg:DI 251)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/new_allocator.h":127:41 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 251)
            (const_int 3 [0x3]))
        (nil)))
(insn 244 243 245 30 (parallel [
            (set (reg:DI 255)
                (ashift:DI (reg:DI 254)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/new_allocator.h":127:41 656 {*ashldi3_1}
     (nil))
(insn 245 244 246 30 (set (reg:DI 254)
        (reg:DI 255)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 251)
            (const_int 24 [0x18]))
        (nil)))
(insn 246 245 263 30 (set (reg:DI 111 [ _77 ])
        (reg:DI 254)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
;;  succ:       32 [always]  count:1369841 (estimated locally) (FALLTHRU)

;; basic block 31, loop depth 0, count 41322525 (estimated locally), maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       6 [35.0% (guessed)]  count:41322525 (estimated locally)
(code_label 263 246 262 31 928 (nil) [1 uses])
(note 262 263 12 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 12 262 247 31 (set (reg:DI 111 [ _77 ])
        (const_int 9223372036854775800 [0x7ffffffffffffff8])) 74 {*movdi_internal}
     (nil))
;;  succ:       32 [always]  count:41322525 (estimated locally) (FALLTHRU)

;; basic block 32, loop depth 0, count 58091205 (estimated locally), maybe hot
;; Invalid sum of incoming counts 42692366 (estimated locally), should be 58091205 (estimated locally)
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       31 [always]  count:41322525 (estimated locally) (FALLTHRU)
;;              30 [always]  count:1369841 (estimated locally) (FALLTHRU)
(code_label 247 12 248 32 915 (nil) [0 uses])
(note 248 247 249 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 32 (set (reg:DI 5 di)
        (reg:DI 111 [ _77 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 250 249 251 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 251 250 252 32 (set (reg/f:DI 256)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 256)
        (nil)))
(insn 252 251 253 32 (set (reg/f:DI 104 [ iftmp.37_48 ])
        (reg/f:DI 256)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 253 252 254 32 (parallel [
            (set (reg/f:DI 119 [ prephitmp_88 ])
                (plus:DI (reg/f:DI 104 [ iftmp.37_48 ])
                    (reg:DI 111 [ _77 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":504:53 210 {*adddi_1}
     (nil))
(insn 254 253 259 32 (parallel [
            (set (reg/v/f:DI 106 [ prephitmp_53 ])
                (plus:DI (reg/f:DI 104 [ iftmp.37_48 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 210 {*adddi_1}
     (nil))
;;  succ:       9 [always]  count:58091205 (estimated locally) (FALLTHRU)

;; basic block 33, loop depth 0, count 111609777 (estimated locally), maybe hot
;;  prev block 32, next block 1, flags: (RTL)
;;  pred:       29 [always]  count:111609777 (estimated locally) (FALLTHRU)
(note 259 254 0 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:111609777 (estimated locally) (FALLTHRU)


;; Function std::vector<std::vector<Color> >::_M_realloc_insert<std::vector<Color, std::allocator<Color> > > (_ZNSt6vectorIS_I5ColorSaIS0_EESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_, funcdef_no=12556, decl_uid=293929, cgraph_uid=4471, symbol_order=5391)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:118111600 (estimated locally) (FALLTHRU)
(note 13 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 13 3 2 (set (reg/f:DI 175 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/c++/11/bits/vector.tcc":426:7 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 176 [ __position ])
        (reg:DI 4 si [ __position ])) "/usr/include/c++/11/bits/vector.tcc":426:7 74 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 177 [ __args#0 ])
        (reg:DI 1 dx [ __args#0 ])) "/usr/include/c++/11/bits/vector.tcc":426:7 74 {*movdi_internal}
     (nil))
(note 5 4 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 5 16 2 (set (reg/v/f:DI 135 [ tmp.2352 ])
        (reg/v:DI 176 [ __position ])) 74 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 109 [ _75 ])
        (mem/f:DI (reg/f:DI 175 [ this ]) [115 MEM[(struct vector * *)this_17(D)]+0 S8 A64])) 74 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 110 [ _76 ])
        (mem/f:DI (plus:DI (reg/f:DI 175 [ this ])
                (const_int 8 [0x8])) [115 MEM[(struct vector * *)this_17(D) + 8B]+0 S8 A64])) 74 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 178)
                (minus:DI (reg/f:DI 110 [ _76 ])
                    (reg/f:DI 109 [ _75 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 179)
                (ashiftrt:DI (reg:DI 178)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 704 {*ashrdi3_1}
     (nil))
(insn 20 19 21 2 (set (reg:DI 181)
        (const_int -6148914691236517205 [0xaaaaaaaaaaaaaaab])) "/usr/include/c++/11/bits/stl_vector.h":919:50 74 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 180)
                (mult:DI (reg:DI 179)
                    (reg:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 409 {*muldi3_1}
     (expr_list:REG_EQUAL (div:DI (reg:DI 178)
            (const_int 24 [0x18]))
        (nil)))
(insn 22 21 23 2 (set (reg:DI 114 [ _81 ])
        (reg:DI 180)) "/usr/include/c++/11/bits/stl_vector.h":919:74 74 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 182)
        (const_int 384307168202282325 [0x555555555555555])) "/usr/include/c++/11/bits/stl_vector.h":1758:2 74 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 114 [ _81 ])
            (reg:DI 182))) "/usr/include/c++/11/bits/stl_vector.h":1758:2 12 {*cmpdi_1}
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1758:2 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 31)
;;  succ:       3 [0.0% (guessed)]  count:47245 (estimated locally) (FALLTHRU)
;;              4 [100.0% (guessed)]  count:118064355 (estimated locally)

;; basic block 3, loop depth 0, count 47245 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:47245 (estimated locally) (FALLTHRU)
(note 26 25 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (reg:DI 183)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f1a3375b240 *.LC23>)) "/usr/include/c++/11/bits/stl_vector.h":1759:24 74 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg:DI 183)) "/usr/include/c++/11/bits/stl_vector.h":1759:24 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f1a3375b240 *.LC23>)
        (nil)))
(call_insn 29 28 31 3 (call (mem:QI (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7f1a40e4a200 __throw_length_error>) [0 __throw_length_error S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1759:24 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7f1a40e4a200 __throw_length_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 4, loop depth 0, count 118064356 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:118064355 (estimated locally)
(code_label 31 29 32 4 947 (nil) [1 uses])
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (parallel [
            (set (reg:DI 184)
                (umax:DI (reg:DI 114 [ _81 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 1139 {*umaxdi3_1}
     (nil))
(insn 34 33 35 4 (set (reg:DI 131 [ _124+8 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg:CCC 17 flags)
                (compare:CCC (plus:DI (reg:DI 114 [ _81 ])
                        (reg:DI 184))
                    (reg:DI 114 [ _81 ])))
            (set (reg:DI 185)
                (plus:DI (reg:DI 114 [ _81 ])
                    (reg:DI 184)))
        ]) 358 {*adddi3_cc_overflow_1}
     (nil))
(jump_insn 36 35 39 4 (set (pc)
        (if_then_else (ltu (reg:CCC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 536868 (nil))
 -> 39)
;;  succ:       5 [0.0% (guessed)]  count:59031 (estimated locally)
;;              6 [100.0% (guessed)]  count:118005325 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 59031 (estimated locally)
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [0.0% (guessed)]  count:59031 (estimated locally)
(code_label 39 36 273 5 949 (nil) [1 uses])
(note 273 39 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 273 41 5 (set (reg:DI 131 [ _124+8 ])
        (const_int 1 [0x1])) 74 {*movdi_internal}
     (nil))
;;  succ:       6 [always]  count:59031 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 118064356 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [100.0% (guessed)]  count:118005325 (estimated locally) (FALLTHRU)
;;              5 [always]  count:59031 (estimated locally) (FALLTHRU)
(code_label 41 40 274 6 948 (nil) [0 uses])
(note 274 41 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 274 43 6 (set (reg:DI 130 [ _124 ])
        (reg:DI 185)) 74 {*movdi_internal}
     (nil))
(insn 43 42 44 6 (set (reg/v:DI 117 [ __len ])
        (reg:DI 130 [ _124 ])) "/usr/include/c++/11/bits/stl_vector.h":1761:18 74 {*movdi_internal}
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:DI 108 [ _64 ])
                (minus:DI (reg/v/f:DI 135 [ tmp.2352 ])
                    (reg/f:DI 109 [ _75 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_iterator.h":1237:27 283 {*subdi_1}
     (nil))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 131 [ _124+8 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":1762:48 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 263)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1762:48 806 {*jcc}
     (int_list:REG_BR_PROB 375809644 (nil))
 -> 263)
;;  succ:       31 [35.0% (guessed)]  count:41322525 (estimated locally)
;;              7 [65.0% (guessed)]  count:76741831 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 76741831 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [65.0% (guessed)]  count:76741831 (estimated locally) (FALLTHRU)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 117 [ __len ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 49 48 264 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 238)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 19166284 (nil))
 -> 238)
;;  succ:       30 [1.8% (guessed)]  count:1369841 (estimated locally)
;;              8 [98.2% (guessed)]  count:75371990 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 75371990 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [98.2% (guessed)]  count:75371990 (estimated locally) (FALLTHRU)
(note 264 49 6 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 6 264 7 8 (set (reg/v/f:DI 106 [ prephitmp_53 ])
        (const_int 24 [0x18])) 74 {*movdi_internal}
     (nil))
(insn 7 6 8 8 (set (reg/f:DI 119 [ prephitmp_88 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 8 7 255 8 (set (reg/f:DI 104 [ iftmp.58_48 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       9 [always]  count:75371990 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 111609777 (estimated locally), maybe hot
;; Invalid sum of incoming counts 133463195 (estimated locally), should be 111609777 (estimated locally)
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [always]  count:75371990 (estimated locally) (FALLTHRU)
;;              32 [always]  count:58091205 (estimated locally) (FALLTHRU)
(code_label 255 8 50 9 962 (nil) [0 uses])
(note 50 255 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (parallel [
            (set (reg/f:DI 83 [ _2 ])
                (plus:DI (reg/f:DI 104 [ iftmp.58_48 ])
                    (reg:DI 108 [ _64 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":449:28 210 {*adddi_1}
     (nil))
(insn 52 51 53 9 (set (reg:V2DI 186 [ vect__43.2376 ])
        (mem:V2DI (reg/v/f:DI 177 [ __args#0 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__args#0_23(D)]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 53 52 54 9 (set (mem:V2DI (reg/f:DI 83 [ _2 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)_2]+0 S16 A64])
        (reg:V2DI 186 [ vect__43.2376 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 54 53 55 9 (set (reg/f:DI 187)
        (mem/f:DI (plus:DI (reg/v/f:DI 177 [ __args#0 ])
                (const_int 16 [0x10])) [118 MEM[(struct _Vector_impl_data &)__args#0_23(D)]._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 55 54 56 9 (set (mem/f:DI (plus:DI (reg/f:DI 83 [ _2 ])
                (const_int 16 [0x10])) [118 MEM[(struct _Vector_impl_data *)_2]._M_end_of_storage+0 S8 A64])
        (reg/f:DI 187)) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 56 55 57 9 (set (mem/f:DI (plus:DI (reg/v/f:DI 177 [ __args#0 ])
                (const_int 16 [0x10])) [118 MEM[(struct _Vector_impl_data &)__args#0_23(D)]._M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":105:57 74 {*movdi_internal}
     (nil))
(insn 57 56 58 9 (set (reg:V2DI 188)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":105:17 1439 {movv2di_internal}
     (nil))
(insn 58 57 59 9 (set (mem:V2DI (reg/v/f:DI 177 [ __args#0 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__args#0_23(D)]+0 S16 A64])
        (reg:V2DI 188)) "/usr/include/c++/11/bits/stl_vector.h":105:17 1439 {movv2di_internal}
     (nil))
(insn 59 58 60 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 135 [ tmp.2352 ])
            (reg/f:DI 109 [ _75 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 12 {*cmpdi_1}
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 152)
;;  succ:       10 [89.0% (guessed)]  count:99332702 (estimated locally) (FALLTHRU)
;;              19 [11.0% (guessed)]  count:12277075 (estimated locally)

;; basic block 10, loop depth 0, count 99332702 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [89.0% (guessed)]  count:99332702 (estimated locally) (FALLTHRU)
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (set (reg:DI 98 [ ivtmp.2415 ])
        (reg/f:DI 109 [ _75 ])) 74 {*movdi_internal}
     (nil))
(insn 63 62 64 10 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/v/f:DI 135 [ tmp.2352 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 64 63 65 10 (parallel [
            (set (reg:DI 190)
                (minus:DI (reg:DI 189)
                    (reg:DI 98 [ ivtmp.2415 ])))
            (clobber (reg:CC 17 flags))
        ]) 283 {*subdi_1}
     (nil))
(insn 65 64 66 10 (parallel [
            (set (reg:DI 191)
                (lshiftrt:DI (reg:DI 190)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 703 {*lshrdi3_1}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 190)
            (const_int 8 [0x8]))
        (nil)))
(insn 66 65 67 10 (set (reg:DI 193)
        (const_int 768614336404564651 [0xaaaaaaaaaaaaaab])) 74 {*movdi_internal}
     (nil))
(insn 67 66 68 10 (parallel [
            (set (reg:DI 192)
                (mult:DI (reg:DI 191)
                    (reg:DI 193)))
            (clobber (reg:CC 17 flags))
        ]) 409 {*muldi3_1}
     (nil))
(insn 68 67 69 10 (set (reg:DI 194)
        (const_int 2305843009213693951 [0x1fffffffffffffff])) 74 {*movdi_internal}
     (nil))
(insn 69 68 70 10 (parallel [
            (set (reg:DI 150 [ _167 ])
                (and:DI (reg:DI 192)
                    (reg:DI 194)))
            (clobber (reg:CC 17 flags))
        ]) 486 {*anddi_1}
     (nil))
(insn 70 69 71 10 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 109 [ _75 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 71 70 72 10 (parallel [
            (set (reg:DI 196)
                (minus:DI (reg/f:DI 104 [ iftmp.58_48 ])
                    (reg:DI 195)))
            (clobber (reg:CC 17 flags))
        ]) 283 {*subdi_1}
     (nil))
(insn 72 71 75 10 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg:DI 196)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 75 72 76 10 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 197)
            (const_int 32 [0x20]))) 12 {*cmpdi_1}
     (nil))
(insn 76 75 77 10 (set (reg:QI 199)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) 802 {*setcc_qi}
     (nil))
(insn 77 76 78 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 199)
            (const_int 0 [0]))) 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 78 77 275 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 266)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 107374188 (nil))
 -> 266)
;;  succ:       16 [10.0% (guessed)]  count:9933270 (estimated locally)
;;              11 [90.0% (guessed)]  count:89399432 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 0, count 89399432 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [90.0% (guessed)]  count:89399432 (estimated locally) (FALLTHRU)
(note 275 78 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 275 80 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 150 [ _167 ])
            (const_int 0 [0]))) 8 {*cmpdi_ccno_1}
     (nil))
(insn 80 79 81 11 (set (reg:QI 201)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) 802 {*setcc_qi}
     (nil))
(insn 81 80 82 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 201)
            (const_int 0 [0]))) 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 82 81 83 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 266)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 119304644 (nil))
 -> 266)
;;  succ:       16 [11.1% (guessed)]  count:9933270 (estimated locally)
;;              12 [88.9% (guessed)]  count:79466162 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 79466162 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [88.9% (guessed)]  count:79466162 (estimated locally) (FALLTHRU)
(note 83 82 84 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 12 (parallel [
            (set (reg:DI 161 [ niters.2361 ])
                (plus:DI (reg:DI 150 [ _167 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 85 84 86 12 (set (reg:DI 125 [ ivtmp.2418 ])
        (reg/f:DI 104 [ iftmp.58_48 ])) 74 {*movdi_internal}
     (nil))
(insn 86 85 87 12 (parallel [
            (set (reg:DI 202 [ bnd.2362 ])
                (lshiftrt:DI (reg:DI 161 [ niters.2361 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 703 {*lshrdi3_1}
     (nil))
(insn 87 86 88 12 (set (reg:DI 203)
        (reg:DI 202 [ bnd.2362 ])) 74 {*movdi_internal}
     (nil))
(insn 88 87 89 12 (parallel [
            (set (reg:DI 204)
                (ashift:DI (reg:DI 203)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 89 88 90 12 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg:DI 204)
                    (reg:DI 202 [ bnd.2362 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 202 [ bnd.2362 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 90 89 91 12 (parallel [
            (set (reg:DI 206)
                (ashift:DI (reg:DI 205)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 91 90 92 12 (set (reg:DI 205)
        (reg:DI 206)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 202 [ bnd.2362 ])
            (const_int 48 [0x30]))
        (nil)))
(insn 92 91 106 12 (parallel [
            (set (reg:DI 94 [ _13 ])
                (plus:DI (reg:DI 205)
                    (reg:DI 98 [ ivtmp.2415 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
;;  succ:       13 [always]  count:79466162 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 1, count 476796972 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       13 [83.3% (adjusted)]  count:397330811 (estimated locally) (DFS_BACK)
;;              12 [always]  count:79466162 (estimated locally) (FALLTHRU)
(code_label 106 92 93 13 954 (nil) [1 uses])
(note 93 106 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 13 (set (reg/f:DI 96 [ _20 ])
        (reg:DI 98 [ ivtmp.2415 ])) 74 {*movdi_internal}
     (nil))
(insn 95 94 96 13 (set (reg:V2DI 207)
        (mem:V2DI (plus:DI (reg/f:DI 96 [ _20 ])
                (const_int 16 [0x10])) [118 MEM <vector(2) long unsigned int> [(Color * *)_20 + 16B]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 96 95 97 13 (set (reg:V2DI 172 [ vect__36.2369 ])
        (reg:V2DI 207)) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 97 96 98 13 (set (reg:V2DI 208)
        (mem:V2DI (plus:DI (reg/f:DI 96 [ _20 ])
                (const_int 32 [0x20])) [118 MEM <vector(2) long unsigned int> [(Color * *)_20 + 32B]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 98 97 99 13 (set (reg:V2DI 173 [ vect__36.2370 ])
        (reg:V2DI 208)) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 99 98 100 13 (set (reg/f:DI 99 [ _37 ])
        (reg:DI 125 [ ivtmp.2418 ])) 74 {*movdi_internal}
     (nil))
(insn 100 99 101 13 (set (reg:V2DI 209 [ vect__36.2368 ])
        (mem:V2DI (reg/f:DI 96 [ _20 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)_20]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 101 100 102 13 (set (mem:V2DI (reg/f:DI 99 [ _37 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)_37]+0 S16 A64])
        (reg:V2DI 209 [ vect__36.2368 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 102 101 103 13 (set (mem:V2DI (plus:DI (reg/f:DI 99 [ _37 ])
                (const_int 16 [0x10])) [118 MEM <vector(2) long unsigned int> [(Color * *)_37 + 16B]+0 S16 A64])
        (reg:V2DI 172 [ vect__36.2369 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 103 102 104 13 (set (mem:V2DI (plus:DI (reg/f:DI 99 [ _37 ])
                (const_int 32 [0x20])) [118 MEM <vector(2) long unsigned int> [(Color * *)_37 + 32B]+0 S16 A64])
        (reg:V2DI 173 [ vect__36.2370 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 104 103 105 13 (parallel [
            (set (reg:DI 98 [ ivtmp.2415 ])
                (plus:DI (reg:DI 98 [ ivtmp.2415 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 105 104 107 13 (parallel [
            (set (reg:DI 125 [ ivtmp.2418 ])
                (plus:DI (reg:DI 125 [ ivtmp.2418 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 107 105 108 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 94 [ _13 ])
            (reg:DI 98 [ ivtmp.2415 ]))) 12 {*cmpdi_1}
     (nil))
(jump_insn 108 107 109 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 894784862 (nil))
 -> 106)
;;  succ:       13 [83.3% (adjusted)]  count:397330811 (estimated locally) (DFS_BACK)
;;              14 [16.7% (adjusted)]  count:79466161 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 79466162 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [16.7% (adjusted)]  count:79466161 (estimated locally) (FALLTHRU)
(note 109 108 110 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 14 (parallel [
            (set (reg:DI 167 [ niters_vector_mult_vf.2363 ])
                (and:DI (reg:DI 161 [ niters.2361 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 486 {*anddi_1}
     (nil))
(insn 111 110 112 14 (set (reg:DI 210)
        (reg:DI 167 [ niters_vector_mult_vf.2363 ])) 74 {*movdi_internal}
     (nil))
(insn 112 111 113 14 (parallel [
            (set (reg:DI 211)
                (ashift:DI (reg:DI 210)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 113 112 114 14 (parallel [
            (set (reg:DI 212)
                (plus:DI (reg:DI 211)
                    (reg:DI 167 [ niters_vector_mult_vf.2363 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 167 [ niters_vector_mult_vf.2363 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 114 113 115 14 (parallel [
            (set (reg:DI 213)
                (ashift:DI (reg:DI 212)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 115 114 116 14 (set (reg:DI 212)
        (reg:DI 213)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 167 [ niters_vector_mult_vf.2363 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 116 115 117 14 (set (reg:DI 169 [ _215 ])
        (reg:DI 212)) 74 {*movdi_internal}
     (nil))
(insn 117 116 118 14 (parallel [
            (set (reg/f:DI 168 [ tmp.2364 ])
                (plus:DI (reg/f:DI 104 [ iftmp.58_48 ])
                    (reg:DI 169 [ _215 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 118 117 119 14 (parallel [
            (set (reg/f:DI 170 [ tmp.2365 ])
                (plus:DI (reg/f:DI 109 [ _75 ])
                    (reg:DI 169 [ _215 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 119 118 120 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 161 [ niters.2361 ])
            (reg:DI 167 [ niters_vector_mult_vf.2363 ]))) 12 {*cmpdi_1}
     (nil))
(jump_insn 120 119 121 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 143)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 357913948 (nil))
 -> 143)
;;  succ:       15 [66.7% (guessed)]  count:52977441 (estimated locally) (FALLTHRU)
;;              18 [33.3% (guessed)]  count:26488721 (estimated locally)

;; basic block 15, loop depth 0, count 481613104 (estimated locally), maybe hot
;; Invalid sum of incoming counts 52977441 (estimated locally), should be 481613104 (estimated locally)
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [66.7% (guessed)]  count:52977441 (estimated locally) (FALLTHRU)
(note 121 120 122 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 15 (set (reg:V2DI 214 [ vect__202.2383 ])
        (mem:V2DI (reg/f:DI 170 [ tmp.2365 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)tmp.2365_216]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 123 122 124 15 (set (mem:V2DI (reg/f:DI 168 [ tmp.2364 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)tmp.2364_214]+0 S16 A64])
        (reg:V2DI 214 [ vect__202.2383 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 124 123 125 15 (set (reg/f:DI 215)
        (mem/f:DI (plus:DI (reg/f:DI 170 [ tmp.2365 ])
                (const_int 16 [0x10])) [118 MEM[(struct _Vector_impl_data &)tmp.2365_216]._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 125 124 266 15 (set (mem/f:DI (plus:DI (reg/f:DI 168 [ tmp.2364 ])
                (const_int 16 [0x10])) [118 MEM[(struct _Vector_impl_data *)tmp.2364_214]._M_end_of_storage+0 S8 A64])
        (reg/f:DI 215)) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
;;  succ:       18 [always]  count:481613104 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 0, count 19866540 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       11 [11.1% (guessed)]  count:9933270 (estimated locally)
;;              10 [10.0% (guessed)]  count:9933270 (estimated locally)
(code_label 266 125 265 16 964 (nil) [2 uses])
(note 265 266 9 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 9 265 10 16 (set (reg/v/f:DI 159 [ __first ])
        (reg/f:DI 109 [ _75 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 74 {*movdi_internal}
     (nil))
(insn 10 9 128 16 (set (reg/v/f:DI 158 [ __cur ])
        (reg/f:DI 104 [ iftmp.58_48 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1030:24 74 {*movdi_internal}
     (nil))
;;  succ:       17 [always]  count:19866540 (estimated locally) (FALLTHRU)

;; basic block 17, loop depth 1, count 180604910 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [always]  count:19866540 (estimated locally) (FALLTHRU)
;;              17 [89.0% (guessed)]  count:160738370 (estimated locally) (DFS_BACK)
(code_label 128 10 129 17 953 (nil) [1 uses])
(note 129 128 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 17 (set (reg:V2DI 216 [ vect__179.2388 ])
        (mem:V2DI (reg/v/f:DI 159 [ __first ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__first_176]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 131 130 132 17 (set (mem:V2DI (reg/v/f:DI 158 [ __cur ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__cur_175]+0 S16 A64])
        (reg:V2DI 216 [ vect__179.2388 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 132 131 133 17 (set (reg/f:DI 217)
        (mem/f:DI (plus:DI (reg/v/f:DI 159 [ __first ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__first_176 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 133 132 134 17 (set (mem/f:DI (plus:DI (reg/v/f:DI 158 [ __cur ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__cur_175 + 16B]+0 S8 A64])
        (reg/f:DI 217)) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 134 133 135 17 (parallel [
            (set (reg/v/f:DI 159 [ __first ])
                (plus:DI (reg/v/f:DI 159 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:7 210 {*adddi_1}
     (nil))
(insn 135 134 136 17 (parallel [
            (set (reg/v/f:DI 158 [ __cur ])
                (plus:DI (reg/v/f:DI 158 [ __cur ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 210 {*adddi_1}
     (nil))
(insn 136 135 137 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 135 [ tmp.2352 ])
            (reg/v/f:DI 159 [ __first ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 12 {*cmpdi_1}
     (nil))
(jump_insn 137 136 143 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 128)
;;  succ:       17 [89.0% (guessed)]  count:160738370 (estimated locally) (DFS_BACK)
;;              18 [11.0% (guessed)]  count:19866540 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 0, count 99332702 (estimated locally), maybe hot
;; Invalid sum of incoming counts 527968365 (estimated locally), should be 99332702 (estimated locally)
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       15 [always]  count:481613104 (estimated locally) (FALLTHRU)
;;              17 [11.0% (guessed)]  count:19866540 (estimated locally) (FALLTHRU)
;;              14 [33.3% (guessed)]  count:26488721 (estimated locally)
(code_label 143 137 144 18 956 (nil) [1 uses])
(note 144 143 145 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 18 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg:DI 150 [ _167 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 210 {*adddi_1}
     (nil))
(insn 146 145 147 18 (set (reg:DI 219)
        (reg:DI 218)) "/usr/include/c++/11/bits/vector.tcc":464:8 74 {*movdi_internal}
     (nil))
(insn 147 146 148 18 (parallel [
            (set (reg:DI 220)
                (ashift:DI (reg:DI 219)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 656 {*ashldi3_1}
     (nil))
(insn 148 147 149 18 (parallel [
            (set (reg:DI 221)
                (plus:DI (reg:DI 220)
                    (reg:DI 218)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 218)
            (const_int 3 [0x3]))
        (nil)))
(insn 149 148 150 18 (parallel [
            (set (reg:DI 222)
                (ashift:DI (reg:DI 221)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 656 {*ashldi3_1}
     (nil))
(insn 150 149 151 18 (set (reg:DI 221)
        (reg:DI 222)) "/usr/include/c++/11/bits/vector.tcc":464:8 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 218)
            (const_int 24 [0x18]))
        (nil)))
(insn 151 150 152 18 (parallel [
            (set (reg/v/f:DI 106 [ prephitmp_53 ])
                (plus:DI (reg/f:DI 104 [ iftmp.58_48 ])
                    (reg:DI 221)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 210 {*adddi_1}
     (nil))
;;  succ:       19 [always]  count:99332702 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 0, count 111609777 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [always]  count:99332702 (estimated locally) (FALLTHRU)
;;              9 [11.0% (guessed)]  count:12277075 (estimated locally)
(code_label 152 151 153 19 952 (nil) [1 uses])
(note 153 152 154 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 135 [ tmp.2352 ])
            (reg/f:DI 110 [ _76 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 12 {*cmpdi_1}
     (nil))
(jump_insn 155 154 156 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 220)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:22 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 220)
;;  succ:       20 [89.0% (guessed)]  count:99332702 (estimated locally) (FALLTHRU)
;;              27 [11.0% (guessed)]  count:12277075 (estimated locally)

;; basic block 20, loop depth 0, count 99332702 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [89.0% (guessed)]  count:99332702 (estimated locally) (FALLTHRU)
(note 156 155 157 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 20 (set (reg:DI 97 [ ivtmp.2400 ])
        (reg/v/f:DI 135 [ tmp.2352 ])) 74 {*movdi_internal}
     (nil))
(insn 158 157 159 20 (set (reg:DI 224)
        (const_int -24 [0xffffffffffffffe8])) 74 {*movdi_internal}
     (nil))
(insn 159 158 160 20 (parallel [
            (set (reg:DI 223)
                (minus:DI (reg:DI 224)
                    (reg:DI 97 [ ivtmp.2400 ])))
            (clobber (reg:CC 17 flags))
        ]) 283 {*subdi_1}
     (nil))
(insn 160 159 161 20 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 110 [ _76 ])
                    (reg:DI 223)))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 161 160 162 20 (parallel [
            (set (reg:DI 226)
                (lshiftrt:DI (reg:DI 225)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 703 {*lshrdi3_1}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 225)
            (const_int 8 [0x8]))
        (nil)))
(insn 162 161 163 20 (set (reg:DI 228)
        (const_int 768614336404564651 [0xaaaaaaaaaaaaaab])) 74 {*movdi_internal}
     (nil))
(insn 163 162 164 20 (parallel [
            (set (reg:DI 227)
                (mult:DI (reg:DI 226)
                    (reg:DI 228)))
            (clobber (reg:CC 17 flags))
        ]) 409 {*muldi3_1}
     (nil))
(insn 164 163 165 20 (set (reg:DI 229)
        (const_int 2305843009213693951 [0x1fffffffffffffff])) 74 {*movdi_internal}
     (nil))
(insn 165 164 166 20 (parallel [
            (set (reg:DI 127 [ _116 ])
                (and:DI (reg:DI 227)
                    (reg:DI 229)))
            (clobber (reg:CC 17 flags))
        ]) 486 {*anddi_1}
     (nil))
(insn 166 165 167 20 (parallel [
            (set (reg:DI 102 [ niters.2349 ])
                (plus:DI (reg:DI 127 [ _116 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 167 166 168 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 127 [ _116 ])
            (const_int 0 [0]))) 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 168 167 169 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 271)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 107374188 (nil))
 -> 271)
;;  succ:       21 [90.0% (guessed)]  count:89399432 (estimated locally) (FALLTHRU)
;;              24 [10.0% (guessed)]  count:9933270 (estimated locally)

;; basic block 21, loop depth 0, count 89399432 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [90.0% (guessed)]  count:89399432 (estimated locally) (FALLTHRU)
(note 169 168 170 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 21 (set (reg:DI 115 [ ivtmp.2403 ])
        (reg/v/f:DI 106 [ prephitmp_53 ])) 74 {*movdi_internal}
     (nil))
(insn 171 170 172 21 (parallel [
            (set (reg:DI 230 [ bnd.2350 ])
                (lshiftrt:DI (reg:DI 102 [ niters.2349 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 703 {*lshrdi3_1}
     (nil))
(insn 172 171 173 21 (set (reg:DI 231)
        (reg:DI 230 [ bnd.2350 ])) 74 {*movdi_internal}
     (nil))
(insn 173 172 174 21 (parallel [
            (set (reg:DI 232)
                (ashift:DI (reg:DI 231)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 174 173 175 21 (parallel [
            (set (reg:DI 233)
                (plus:DI (reg:DI 232)
                    (reg:DI 230 [ bnd.2350 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 230 [ bnd.2350 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 175 174 176 21 (parallel [
            (set (reg:DI 234)
                (ashift:DI (reg:DI 233)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 176 175 177 21 (set (reg:DI 233)
        (reg:DI 234)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 230 [ bnd.2350 ])
            (const_int 48 [0x30]))
        (nil)))
(insn 177 176 191 21 (parallel [
            (set (reg:DI 105 [ _52 ])
                (plus:DI (reg:DI 233)
                    (reg:DI 97 [ ivtmp.2400 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
;;  succ:       22 [always]  count:89399432 (estimated locally) (FALLTHRU)

;; basic block 22, loop depth 1, count 536396590 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       22 [83.3% (adjusted)]  count:446997160 (estimated locally) (DFS_BACK)
;;              21 [always]  count:89399432 (estimated locally) (FALLTHRU)
(code_label 191 177 178 22 959 (nil) [1 uses])
(note 178 191 179 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 22 (set (reg/f:DI 164 [ _205 ])
        (reg:DI 97 [ ivtmp.2400 ])) 74 {*movdi_internal}
     (nil))
(insn 180 179 181 22 (set (reg:V2DI 235)
        (mem:V2DI (plus:DI (reg/f:DI 164 [ _205 ])
                (const_int 16 [0x10])) [118 MEM <vector(2) long unsigned int> [(Color * *)_205 + 16B]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 181 180 182 22 (set (reg:V2DI 143 [ vect__25.2357 ])
        (reg:V2DI 235)) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 182 181 183 22 (set (reg:V2DI 236)
        (mem:V2DI (plus:DI (reg/f:DI 164 [ _205 ])
                (const_int 32 [0x20])) [118 MEM <vector(2) long unsigned int> [(Color * *)_205 + 32B]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 183 182 184 22 (set (reg:V2DI 145 [ vect__25.2358 ])
        (reg:V2DI 236)) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 184 183 185 22 (set (reg/f:DI 107 [ _62 ])
        (reg:DI 115 [ ivtmp.2403 ])) 74 {*movdi_internal}
     (nil))
(insn 185 184 186 22 (set (reg:V2DI 237 [ vect__25.2356 ])
        (mem:V2DI (reg/f:DI 164 [ _205 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)_205]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 186 185 187 22 (set (mem:V2DI (reg/f:DI 107 [ _62 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)_62]+0 S16 A64])
        (reg:V2DI 237 [ vect__25.2356 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 187 186 188 22 (set (mem:V2DI (plus:DI (reg/f:DI 107 [ _62 ])
                (const_int 16 [0x10])) [118 MEM <vector(2) long unsigned int> [(Color * *)_62 + 16B]+0 S16 A64])
        (reg:V2DI 143 [ vect__25.2357 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 188 187 189 22 (set (mem:V2DI (plus:DI (reg/f:DI 107 [ _62 ])
                (const_int 32 [0x20])) [118 MEM <vector(2) long unsigned int> [(Color * *)_62 + 32B]+0 S16 A64])
        (reg:V2DI 145 [ vect__25.2358 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 189 188 190 22 (parallel [
            (set (reg:DI 97 [ ivtmp.2400 ])
                (plus:DI (reg:DI 97 [ ivtmp.2400 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 190 189 192 22 (parallel [
            (set (reg:DI 115 [ ivtmp.2403 ])
                (plus:DI (reg:DI 115 [ ivtmp.2403 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 192 190 193 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 97 [ ivtmp.2400 ])
            (reg:DI 105 [ _52 ]))) 12 {*cmpdi_1}
     (nil))
(jump_insn 193 192 194 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 894784862 (nil))
 -> 191)
;;  succ:       22 [83.3% (adjusted)]  count:446997160 (estimated locally) (DFS_BACK)
;;              23 [16.7% (adjusted)]  count:89399430 (estimated locally) (FALLTHRU)

;; basic block 23, loop depth 0, count 89399432 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [16.7% (adjusted)]  count:89399430 (estimated locally) (FALLTHRU)
(note 194 193 195 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 23 (parallel [
            (set (reg:DI 138 [ niters_vector_mult_vf.2351 ])
                (and:DI (reg:DI 102 [ niters.2349 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 486 {*anddi_1}
     (nil))
(insn 196 195 197 23 (set (reg:DI 238)
        (reg:DI 138 [ niters_vector_mult_vf.2351 ])) 74 {*movdi_internal}
     (nil))
(insn 197 196 198 23 (parallel [
            (set (reg:DI 239)
                (ashift:DI (reg:DI 238)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 198 197 199 23 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg:DI 239)
                    (reg:DI 138 [ niters_vector_mult_vf.2351 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 138 [ niters_vector_mult_vf.2351 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 199 198 200 23 (parallel [
            (set (reg:DI 241)
                (ashift:DI (reg:DI 240)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 656 {*ashldi3_1}
     (nil))
(insn 200 199 201 23 (set (reg:DI 240)
        (reg:DI 241)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 138 [ niters_vector_mult_vf.2351 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 201 200 202 23 (set (reg:DI 139 [ _141 ])
        (reg:DI 240)) 74 {*movdi_internal}
     (nil))
(insn 202 201 203 23 (parallel [
            (set (reg/v/f:DI 135 [ tmp.2352 ])
                (plus:DI (reg/v/f:DI 135 [ tmp.2352 ])
                    (reg:DI 139 [ _141 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 203 202 204 23 (parallel [
            (set (reg/v/f:DI 136 [ tmp.2353 ])
                (plus:DI (reg/v/f:DI 106 [ prephitmp_53 ])
                    (reg:DI 139 [ _141 ])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 204 203 205 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 102 [ niters.2349 ])
            (reg:DI 138 [ niters_vector_mult_vf.2351 ]))) 12 {*cmpdi_1}
     (nil))
(jump_insn 205 204 271 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) 806 {*jcc}
     (int_list:REG_BR_PROB 357913948 (nil))
 -> 212)
;;  succ:       25 [66.7% (guessed)]  count:59599621 (estimated locally) (FALLTHRU)
;;              26 [33.3% (guessed)]  count:29799811 (estimated locally)

;; basic block 24, loop depth 0, count 9933270 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       20 [10.0% (guessed)]  count:9933270 (estimated locally)
(code_label 271 205 270 24 965 (nil) [1 uses])
(note 270 271 11 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 11 270 206 24 (set (reg/v/f:DI 136 [ tmp.2353 ])
        (reg/v/f:DI 106 [ prephitmp_53 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1030:24 74 {*movdi_internal}
     (nil))
;;  succ:       25 [always]  count:9933270 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 0, count 632117194 (estimated locally), maybe hot
;; Invalid sum of incoming counts 69532891 (estimated locally), should be 632117194 (estimated locally)
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [always]  count:9933270 (estimated locally) (FALLTHRU)
;;              23 [66.7% (guessed)]  count:59599621 (estimated locally) (FALLTHRU)
(code_label 206 11 207 25 958 (nil) [0 uses])
(note 207 206 208 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 25 (set (reg:V2DI 242 [ vect__101.2393 ])
        (mem:V2DI (reg/v/f:DI 135 [ tmp.2352 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__first_135]+0 S16 A64])) "/usr/include/c++/11/bits/stl_vector.h":103:17 1439 {movv2di_internal}
     (nil))
(insn 209 208 210 25 (set (mem:V2DI (reg/v/f:DI 136 [ tmp.2353 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__cur_136]+0 S16 A64])
        (reg:V2DI 242 [ vect__101.2393 ])) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 210 209 211 25 (set (reg/f:DI 243)
        (mem/f:DI (plus:DI (reg/v/f:DI 135 [ tmp.2352 ])
                (const_int 16 [0x10])) [118 MEM[(struct _Vector_impl_data &)__first_135]._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 211 210 212 25 (set (mem/f:DI (plus:DI (reg/v/f:DI 136 [ tmp.2353 ])
                (const_int 16 [0x10])) [118 MEM[(struct _Vector_impl_data *)__cur_136]._M_end_of_storage+0 S8 A64])
        (reg/f:DI 243)) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
;;  succ:       26 [always (guessed)]  count:632117194 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 0, count 99332702 (estimated locally), maybe hot
;; Invalid sum of incoming counts 661917005 (estimated locally), should be 99332702 (estimated locally)
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [always (guessed)]  count:632117194 (estimated locally) (FALLTHRU)
;;              23 [33.3% (guessed)]  count:29799811 (estimated locally)
(code_label 212 211 213 26 960 (nil) [1 uses])
(note 213 212 214 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 26 (set (reg:DI 244)
        (reg:DI 102 [ niters.2349 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 74 {*movdi_internal}
     (nil))
(insn 215 214 216 26 (parallel [
            (set (reg:DI 245)
                (ashift:DI (reg:DI 244)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 656 {*ashldi3_1}
     (nil))
(insn 216 215 217 26 (parallel [
            (set (reg:DI 246)
                (plus:DI (reg:DI 245)
                    (reg:DI 102 [ niters.2349 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 102 [ niters.2349 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 217 216 218 26 (parallel [
            (set (reg:DI 247)
                (ashift:DI (reg:DI 246)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 656 {*ashldi3_1}
     (nil))
(insn 218 217 219 26 (set (reg:DI 246)
        (reg:DI 247)) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 102 [ niters.2349 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 219 218 220 26 (parallel [
            (set (reg/v/f:DI 106 [ prephitmp_53 ])
                (plus:DI (reg/v/f:DI 106 [ prephitmp_53 ])
                    (reg:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":1031:44 210 {*adddi_1}
     (nil))
;;  succ:       27 [always]  count:99332702 (estimated locally) (FALLTHRU)

;; basic block 27, loop depth 0, count 111609777 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [always]  count:99332702 (estimated locally) (FALLTHRU)
;;              19 [11.0% (guessed)]  count:12277075 (estimated locally)
(code_label 220 219 221 27 957 (nil) [1 uses])
(note 221 220 222 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 27 (set (reg:V2DI 248)
        (vec_concat:V2DI (reg/f:DI 104 [ iftmp.58_48 ])
            (reg/v/f:DI 106 [ prephitmp_53 ]))) 4306 {vec_concatv2di}
     (nil))
(insn 223 222 224 27 (set (reg:V2DI 140 [ _143 ])
        (reg:V2DI 248)) 1439 {movv2di_internal}
     (nil))
(insn 224 223 225 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 109 [ _75 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 225 224 226 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 232)
;;  succ:       28 [53.5% (guessed)]  count:59677748 (estimated locally) (FALLTHRU)
;;              29 [46.5% (guessed)]  count:51932029 (estimated locally)

;; basic block 28, loop depth 0, count 59677747 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 [53.5% (guessed)]  count:59677748 (estimated locally) (FALLTHRU)
(note 226 225 227 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 28 (set (reg/f:DI 250)
        (mem/f:DI (plus:DI (reg/f:DI 175 [ this ])
                (const_int 16 [0x10])) [115 this_17(D)->D.254077._M_impl.D.253422._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/vector.tcc":501:39 74 {*movdi_internal}
     (nil))
(insn 228 227 229 28 (parallel [
            (set (reg:DI 249)
                (minus:DI (reg/f:DI 250)
                    (reg/f:DI 109 [ _75 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":501:39 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 175 [ this ])
                    (const_int 16 [0x10])) [115 this_17(D)->D.254077._M_impl.D.253422._M_end_of_storage+0 S8 A64])
            (reg/f:DI 109 [ _75 ]))
        (nil)))
(insn 229 228 230 28 (set (reg:DI 4 si)
        (reg:DI 249)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 230 229 231 28 (set (reg:DI 5 di)
        (reg/f:DI 109 [ _75 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 231 230 232 28 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       29 [always]  count:59677747 (estimated locally) (FALLTHRU)

;; basic block 29, loop depth 0, count 111609777 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       27 [46.5% (guessed)]  count:51932029 (estimated locally)
;;              28 [always]  count:59677747 (estimated locally) (FALLTHRU)
(code_label 232 231 233 29 961 (nil) [1 uses])
(note 233 232 234 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 29 (set (mem:V2DI (reg/f:DI 175 [ this ]) [115 MEM <vector(2) long unsigned int> [(struct vector * *)this_17(D)]+0 S16 A64])
        (reg:V2DI 140 [ _143 ])) "/usr/include/c++/11/bits/vector.tcc":502:30 1439 {movv2di_internal}
     (nil))
(insn 235 234 238 29 (set (mem/f:DI (plus:DI (reg/f:DI 175 [ this ])
                (const_int 16 [0x10])) [115 this_17(D)->D.254077._M_impl.D.253422._M_end_of_storage+0 S8 A64])
        (reg/f:DI 119 [ prephitmp_88 ])) "/usr/include/c++/11/bits/vector.tcc":504:39 74 {*movdi_internal}
     (nil))
;;  succ:       33 [always]  count:111609777 (estimated locally) (FALLTHRU)

;; basic block 30, loop depth 0, count 1369841 (estimated locally), maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       7 [1.8% (guessed)]  count:1369841 (estimated locally)
(code_label 238 235 239 30 951 (nil) [1 uses])
(note 239 238 240 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 30 (parallel [
            (set (reg:DI 251)
                (umin:DI (reg/v:DI 117 [ __len ])
                    (const_int 384307168202282325 [0x555555555555555])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/new_allocator.h":127:41 1140 {*umindi3_1}
     (nil))
(insn 241 240 242 30 (set (reg:DI 252)
        (reg:DI 251)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 242 241 243 30 (parallel [
            (set (reg:DI 253)
                (ashift:DI (reg:DI 252)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/new_allocator.h":127:41 656 {*ashldi3_1}
     (nil))
(insn 243 242 244 30 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg:DI 253)
                    (reg:DI 251)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/new_allocator.h":127:41 210 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 251)
            (const_int 3 [0x3]))
        (nil)))
(insn 244 243 245 30 (parallel [
            (set (reg:DI 255)
                (ashift:DI (reg:DI 254)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/ext/new_allocator.h":127:41 656 {*ashldi3_1}
     (nil))
(insn 245 244 246 30 (set (reg:DI 254)
        (reg:DI 255)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 251)
            (const_int 24 [0x18]))
        (nil)))
(insn 246 245 263 30 (set (reg:DI 111 [ _77 ])
        (reg:DI 254)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
;;  succ:       32 [always]  count:1369841 (estimated locally) (FALLTHRU)

;; basic block 31, loop depth 0, count 41322525 (estimated locally), maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       6 [35.0% (guessed)]  count:41322525 (estimated locally)
(code_label 263 246 262 31 963 (nil) [1 uses])
(note 262 263 12 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 12 262 247 31 (set (reg:DI 111 [ _77 ])
        (const_int 9223372036854775800 [0x7ffffffffffffff8])) 74 {*movdi_internal}
     (nil))
;;  succ:       32 [always]  count:41322525 (estimated locally) (FALLTHRU)

;; basic block 32, loop depth 0, count 58091205 (estimated locally), maybe hot
;; Invalid sum of incoming counts 42692366 (estimated locally), should be 58091205 (estimated locally)
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       31 [always]  count:41322525 (estimated locally) (FALLTHRU)
;;              30 [always]  count:1369841 (estimated locally) (FALLTHRU)
(code_label 247 12 248 32 950 (nil) [0 uses])
(note 248 247 249 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 32 (set (reg:DI 5 di)
        (reg:DI 111 [ _77 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 250 249 251 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 251 250 252 32 (set (reg/f:DI 256)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 256)
        (nil)))
(insn 252 251 253 32 (set (reg/f:DI 104 [ iftmp.58_48 ])
        (reg/f:DI 256)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 253 252 254 32 (parallel [
            (set (reg/f:DI 119 [ prephitmp_88 ])
                (plus:DI (reg/f:DI 104 [ iftmp.58_48 ])
                    (reg:DI 111 [ _77 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":504:53 210 {*adddi_1}
     (nil))
(insn 254 253 259 32 (parallel [
            (set (reg/v/f:DI 106 [ prephitmp_53 ])
                (plus:DI (reg/f:DI 104 [ iftmp.58_48 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":464:8 210 {*adddi_1}
     (nil))
;;  succ:       9 [always]  count:58091205 (estimated locally) (FALLTHRU)

;; basic block 33, loop depth 0, count 111609777 (estimated locally), maybe hot
;;  prev block 32, next block 1, flags: (RTL)
;;  pred:       29 [always]  count:111609777 (estimated locally) (FALLTHRU)
(note 259 254 0 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:111609777 (estimated locally) (FALLTHRU)


;; Function std::_Destroy_aux<false>::__destroy<std::vector<int>*> (_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_, funcdef_no=12906, decl_uid=299282, cgraph_uid=4818, symbol_order=5743)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:118111600 (estimated locally) (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 86 [ __first ])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/11/bits/stl_construct.h":160:2 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 87 [ __last ])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/11/bits/stl_construct.h":160:2 74 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 86 [ __first ])
            (reg/v/f:DI 87 [ __last ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 8 7 32 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 37)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 37)
;;  succ:       3 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
;;              7 [11.0% (guessed)]  count:12992276 (estimated locally)

;; basic block 3, loop depth 1, count 955630225 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       6 [always]  count:850510901 (estimated locally) (FALLTHRU)
;;              2 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
(code_label 32 8 9 3 985 (nil) [0 uses])
(note 9 32 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 82 [ _8 ])
        (mem/f:DI (reg/v/f:DI 86 [ __first ]) [142 MEM[(int * *)__first_12]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _8 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 25)
;;  succ:       4 [53.5% (guessed)]  count:510975480 (estimated locally) (FALLTHRU)
;;              5 [46.5% (guessed)]  count:444654745 (estimated locally)

;; basic block 4, loop depth 1, count 510975480 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [53.5% (guessed)]  count:510975480 (estimated locally) (FALLTHRU)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 89)
        (mem/f:DI (plus:DI (reg/v/f:DI 86 [ __first ])
                (const_int 16 [0x10])) [142 MEM[(int * *)__first_12 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg:DI 88)
                (minus:DI (reg/f:DI 89)
                    (reg/f:DI 82 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 86 [ __first ])
                    (const_int 16 [0x10])) [142 MEM[(int * *)__first_12 + 16B]+0 S8 A64])
            (reg/f:DI 82 [ _8 ]))
        (nil)))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (reg:DI 88)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _8 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 4 (parallel [
            (set (reg/v/f:DI 86 [ __first ])
                (plus:DI (reg/v/f:DI 86 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ __last ])
            (reg/v/f:DI 86 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 21 20 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 30)
;;  succ:       6 [89.0% (guessed)]  count:454768178 (estimated locally)
;;              7 [11.0% (guessed)]  count:56207302 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 1, count 444654745 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3 [46.5% (guessed)]  count:444654745 (estimated locally)
(code_label 25 21 26 5 983 (nil) [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (reg/v/f:DI 86 [ __first ])
                (plus:DI (reg/v/f:DI 86 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ __last ])
            (reg/v/f:DI 86 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 37)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 37)
;;  succ:       6 [89.0% (guessed)]  count:395742723 (estimated locally) (FALLTHRU)
;;              7 [11.0% (guessed)]  count:48912022 (estimated locally)

;; basic block 6, loop depth 1, count 850510901 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [89.0% (guessed)]  count:395742723 (estimated locally) (FALLTHRU)
;;              4 [89.0% (guessed)]  count:454768178 (estimated locally)
(code_label 30 29 31 6 984 (nil) [1 uses])
(note 31 30 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       3 [always]  count:850510901 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       5 [11.0% (guessed)]  count:48912022 (estimated locally)
;;              2 [11.0% (guessed)]  count:12992276 (estimated locally)
;;              4 [11.0% (guessed)]  count:56207302 (estimated locally) (FALLTHRU)
(code_label 37 31 38 7 981 (nil) [2 uses])
(note 38 37 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:118111600 (estimated locally) (FALLTHRU)


;; Function iterable_converter::construct<std::vector<std::vector<int> > > (_ZN18iterable_converter9constructISt6vectorIS1_IiSaIiEESaIS3_EEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE, funcdef_no=11882, decl_uid=269468, cgraph_uid=3796, symbol_order=4702)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 11 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 183 [ object ])
        (reg:DI 5 di [ object ])) "src/ChineseCheckersWrapper.cpp":59:15 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 184 [ data ])
        (reg:DI 4 si [ data ])) "src/ChineseCheckersWrapper.cpp":59:15 74 {*movdi_internal}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 6 2 (set (reg/f:DI 185)
        (const_int 40 [0x28])) "src/ChineseCheckersWrapper.cpp":59:15 74 {*movdi_internal}
     (nil))
(insn 6 5 13 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.330725+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 185) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":59:15 1159 {stack_protect_set_1_di}
     (nil))
(insn 13 6 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 183 [ object ])
            (const_int 0 [0]))) "/usr/include/boost/python/errors.hpp":44:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "/usr/include/boost/python/errors.hpp":44:5 806 {*jcc}
     (int_list:REG_BR_PROB 886588628 (nil))
 -> 17)
;;  succ:       3 [17.4% (guessed)]  count:187153200 (estimated locally) (FALLTHRU)
;;              4 [82.6% (guessed)]  count:886588624 (estimated locally)

;; basic block 3, loop depth 0, count 187153199 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [17.4% (guessed)]  count:187153200 (estimated locally) (FALLTHRU)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 16 15 17 3 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>) [0 throw_error_already_set S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/errors.hpp":45:32 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>)
        (nil))
    (nil))
;;  succ:       4 [always]  count:187153199 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [82.6% (guessed)]  count:886588624 (estimated locally)
;;              3 [always]  count:187153199 (estimated locally) (FALLTHRU)
(code_label 17 16 18 4 988 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (parallel [
            (set (mem:DI (reg/v/f:DI 183 [ object ]) [7 *object_5(D).ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/v/f:DI 183 [ object ]) [7 *object_5(D).ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 20 19 21 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -192 [0xffffffffffffff40])) [31 handle.m_p+0 S8 A128])
        (reg/v/f:DI 183 [ object ])) "/usr/include/boost/python/handle.hpp":75:11 74 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/v/f:DI 82 [ storage ])
                (plus:DI (reg/v/f:DI 184 [ data ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":71:15 210 {*adddi_1}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:DI 187)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":81:28 210 {*adddi_1}
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":81:28 210 {*adddi_1}
     (nil))
(insn 24 23 25 4 (set (reg:DI 4 si)
        (reg:DI 187)) "src/ChineseCheckersWrapper.cpp":81:28 74 {*movdi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg:DI 188)) "src/ChineseCheckersWrapper.cpp":81:28 74 {*movdi_internal}
     (nil))
(call_insn 26 25 27 4 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python3api6objectC1ERKNS0_6handleI7_objectEE") [flags 0x41]  <function_decl 0x7f1a39cd7500 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":81:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python3api6objectC1ERKNS0_6handleI7_objectEE") [flags 0x41]  <function_decl 0x7f1a39cd7500 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       97 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":34:9 210 {*adddi_1}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":34:9 210 {*adddi_1}
     (nil))
(insn 30 29 31 5 (set (reg:DI 4 si)
        (reg:DI 189)) "/usr/include/boost/python/stl_iterator.hpp":34:9 74 {*movdi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:DI 5 di)
        (reg:DI 190)) "/usr/include/boost/python/stl_iterator.hpp":34:9 74 {*movdi_internal}
     (nil))
(call_insn 32 31 33 5 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1ERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3775bb00 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/stl_iterator.hpp":34:9 813 {*call}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1ERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3775bb00 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       6 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              95 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 6, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":28:9 210 {*adddi_1}
     (nil))
(insn 35 34 36 6 (set (reg:DI 5 di)
        (reg:DI 191)) "/usr/include/boost/python/stl_iterator.hpp":28:9 74 {*movdi_internal}
     (nil))
(call_insn 36 35 37 6 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1Ev") [flags 0x41]  <function_decl 0x7f1a3775bd00 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/stl_iterator.hpp":28:9 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1Ev") [flags 0x41]  <function_decl 0x7f1a3775bd00 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              93 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 7, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg:V2DI 192)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 39 38 40 7 (set (mem:V2DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 16 [0x10])) [124 MEM <vector(2) long unsigned int> [(struct vector * *)data_6(D) + 16B]+0 S16 A64])
        (reg:V2DI 192)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 40 39 41 7 (set (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 32 [0x20])) [124 MEM[(struct _Vector_impl_data *)data_6(D) + 16B]._M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 41 40 42 7 (set (reg/f:DI 91 [ _61 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -160 [0xffffffffffffff60])) [31 MEM[(const struct object_base &)&D.279955].m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":405:32 74 {*movdi_internal}
     (nil))
(insn 42 41 43 7 (parallel [
            (set (mem:DI (reg/f:DI 91 [ _61 ]) [7 *_61.ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 91 [ _61 ]) [7 *_61.ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 43 42 44 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -128 [0xffffffffffffff80])) [31 MEM[(struct object_base *)&D.330630].m_ptr+0 S8 A128])
        (reg/f:DI 91 [ _61 ])) "/usr/include/boost/python/object_core.hpp":405:7 74 {*movdi_internal}
     (nil))
(insn 44 43 45 7 (set (reg/f:DI 94 [ _64 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -152 [0xffffffffffffff68])) [31 MEM[(const struct handle &)&D.279955 + 8].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":105:33 74 {*movdi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ _64 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":557:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "/usr/include/python3.10/object.h":557:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 49)
;;  succ:       8 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
;;              9 [30.0% (guessed)]  count:322122544 (estimated locally)

;; basic block 8, loop depth 0, count 751619278 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (parallel [
            (set (mem:DI (reg/f:DI 94 [ _64 ]) [7 MEM[(struct PyObject *)_64].ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 94 [ _64 ]) [7 MEM[(struct PyObject *)_64].ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
;;  succ:       9 [always]  count:751619278 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7 [30.0% (guessed)]  count:322122544 (estimated locally)
;;              8 [always]  count:751619278 (estimated locally) (FALLTHRU)
(code_label 49 48 50 9 989 (nil) [1 uses])
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -120 [0xffffffffffffff88])) [31 MEM[(struct handle *)&D.330630 + 8B].m_p+0 S8 A64])
        (reg/f:DI 94 [ _64 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 52 51 53 9 (set (reg/f:DI 97 [ _67 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [31 MEM[(const struct object_base &)&D.279938].m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":405:32 74 {*movdi_internal}
     (nil))
(insn 53 52 54 9 (parallel [
            (set (mem:DI (reg/f:DI 97 [ _67 ]) [7 *_67.ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 97 [ _67 ]) [7 *_67.ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 54 53 55 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -144 [0xffffffffffffff70])) [31 MEM[(struct object_base *)&D.330629].m_ptr+0 S8 A128])
        (reg/f:DI 97 [ _67 ])) "/usr/include/boost/python/object_core.hpp":405:7 74 {*movdi_internal}
     (nil))
(insn 55 54 56 9 (set (reg/f:DI 100 [ _70 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -168 [0xffffffffffffff58])) [31 MEM[(const struct handle &)&D.279938 + 8].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":105:33 74 {*movdi_internal}
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ _70 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":557:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "/usr/include/python3.10/object.h":557:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 60)
;;  succ:       10 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
;;              11 [30.0% (guessed)]  count:322122544 (estimated locally)

;; basic block 10, loop depth 0, count 751619278 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (parallel [
            (set (mem:DI (reg/f:DI 100 [ _70 ]) [7 MEM[(struct PyObject *)_70].ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 100 [ _70 ]) [7 MEM[(struct PyObject *)_70].ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
;;  succ:       11 [always]  count:751619278 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9 [30.0% (guessed)]  count:322122544 (estimated locally)
;;              10 [always]  count:751619278 (estimated locally) (FALLTHRU)
(code_label 60 59 61 11 990 (nil) [1 uses])
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 65 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -136 [0xffffffffffffff78])) [31 MEM[(struct handle *)&D.330629 + 8B].m_p+0 S8 A64])
        (reg/f:DI 100 [ _70 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
;;  succ:       42 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 1, count 6023273140 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       43 [89.0% (guessed)]  count:6023273134 (estimated locally) (FALLTHRU)
(note 65 62 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":48:51 210 {*adddi_1}
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg:DI 193)) "/usr/include/boost/python/stl_iterator.hpp":48:51 74 {*movdi_internal}
     (nil))
(call_insn 68 67 594 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl7currentEv") [flags 0x41]  <function_decl 0x7f1a3775ba00 current>) [0 current S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/stl_iterator.hpp":48:51 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl7currentEv") [flags 0x41]  <function_decl 0x7f1a3775ba00 current>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       48 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [always (adjusted)]  count:6023273140 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 1, count 6023273140 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [always (adjusted)]  count:6023273140 (estimated locally) (FALLTHRU)
(note 594 68 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 594 71 13 (set (reg/f:DI 120 [ _101 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/stl_iterator.hpp":48:51 74 {*movdi_internal}
     (nil))
(insn 71 69 72 13 (set (reg/f:DI 121 [ _102 ])
        (mem/f:DI (reg/f:DI 120 [ _101 ]) [31 _101->m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":202:12 74 {*movdi_internal}
     (nil))
(insn 72 71 73 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [31 MEM[(struct extract_rvalue *)&D.330650].m_source+0 S8 A128])
        (reg/f:DI 121 [ _102 ])) "/usr/include/boost/python/extract.hpp":162:9 74 {*movdi_internal}
     (nil))
(insn 73 72 74 13 (set (reg/f:DI 194)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorIiSaIiEEE10convertersE")  <var_decl 0x7f1a35a59d80 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/extract.hpp":164:38 74 {*movdi_internal}
     (nil))
(insn 74 73 75 13 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 194) [42 converters+0 S8 A64])) "/usr/include/boost/python/extract.hpp":164:38 74 {*movdi_internal}
     (nil))
(insn 75 74 76 13 (set (reg:DI 5 di)
        (reg/f:DI 121 [ _102 ])) "/usr/include/boost/python/extract.hpp":164:38 74 {*movdi_internal}
     (nil))
(call_insn 76 75 595 13 (set (reg:TI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage1EP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235f00 rvalue_from_python_stage1>) [0 rvalue_from_python_stage1 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/extract.hpp":164:38 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage1EP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235f00 rvalue_from_python_stage1>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       48 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 [always (adjusted)]  count:6023273140 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 1, count 6023273140 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [always (adjusted)]  count:6023273140 (estimated locally) (FALLTHRU)
(note 595 76 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 595 79 14 (set (reg:TI 182 [ D.330649 ])
        (reg:TI 0 ax)) "/usr/include/boost/python/extract.hpp":164:38 73 {*movti_internal}
     (nil))
(insn 79 77 80 14 (set (mem/c:TI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [237 MEM[(struct rvalue_from_python_data *)&D.330650 + 16B].D.297727.stage1+0 S16 A128])
        (reg:TI 182 [ D.330649 ])) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":122:5 73 {*movti_internal}
     (nil))
(insn 80 79 81 14 (clobber (reg:TI 182 [ D.330649 ])) "/usr/include/boost/python/extract.hpp":164:38 -1
     (nil))
(insn 81 80 82 14 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
(insn 82 81 83 14 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg:DI 195)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
(insn 83 82 84 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -64 [0xffffffffffffffc0])) [43 MEM[(const struct extract_rvalue *)&D.330650].m_data.D.297727.stage1.convertible+0 S8 A128])
            (reg:DI 196))) "/usr/include/boost/python/extract.hpp":180:15 12 {*cmpdi_1}
     (nil))
(jump_insn 84 83 85 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 589)
            (pc))) "/usr/include/boost/python/extract.hpp":180:15 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 589)
;;  succ:       17 [46.5% (guessed)]  count:2802628999 (estimated locally)
;;              15 [53.5% (guessed)]  count:3220644141 (estimated locally) (FALLTHRU)

;; basic block 15, loop depth 1, count 3220644140 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [53.5% (guessed)]  count:3220644141 (estimated locally) (FALLTHRU)
(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 15 (set (reg/f:DI 197)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorIiSaIiEEE10convertersE")  <var_decl 0x7f1a35a59d80 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 87 86 88 15 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":184:43 210 {*adddi_1}
     (nil))
(insn 88 87 89 15 (parallel [
            (set (reg:DI 199)
                (plus:DI (reg:DI 198)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":184:43 210 {*adddi_1}
     (nil))
(insn 89 88 90 15 (set (reg:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [31 MEM[(const struct extract_rvalue *)&D.330650].m_source+0 S8 A128])) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 90 89 91 15 (set (reg:DI 1 dx)
        (mem/f/c:DI (reg/f:DI 197) [42 converters+0 S8 A64])) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 91 90 92 15 (set (reg:DI 4 si)
        (reg:DI 199)) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 92 91 93 15 (set (reg:DI 5 di)
        (reg:DI 200)) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(call_insn 93 92 596 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage2EP7_objectRNS1_30rvalue_from_python_stage1_dataERKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a269000 rvalue_from_python_stage2>) [0 rvalue_from_python_stage2 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/extract.hpp":184:43 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 18 [0x12])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage2EP7_objectRNS1_30rvalue_from_python_stage1_dataERKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a269000 rvalue_from_python_stage2>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 [always (adjusted)]  count:3220644140 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 1, count 3220644140 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [always (adjusted)]  count:3220644140 (estimated locally) (FALLTHRU)
(note 596 93 94 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 94 596 589 16 (set (reg/f:DI 126 [ _107 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
;;  succ:       18 [always]  count:3220644140 (estimated locally) (FALLTHRU)

;; basic block 17, loop depth 1, count 2802628999 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       14 [46.5% (guessed)]  count:2802628999 (estimated locally)
(code_label 589 94 588 17 1040 (nil) [1 uses])
(note 588 589 7 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 7 588 8 17 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
(insn 8 7 95 17 (parallel [
            (set (reg/f:DI 126 [ _107 ])
                (plus:DI (reg:DI 186)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
;;  succ:       18 [always]  count:2802628999 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 1, count 6023273140 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [always]  count:2802628999 (estimated locally) (FALLTHRU)
;;              16 [always]  count:3220644140 (estimated locally) (FALLTHRU)
(code_label 95 8 96 18 992 (nil) [0 uses])
(note 96 95 97 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 18 (set (reg/f:DI 127 [ _110 ])
        (mem/f:DI (plus:DI (reg/f:DI 126 [ _107 ])
                (const_int 8 [0x8])) [142 *iftmp.32_108.D.263939._M_impl.D.263289._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:40 74 {*movdi_internal}
     (nil))
(insn 98 97 99 18 (set (reg/f:DI 128 [ _111 ])
        (mem/f:DI (reg/f:DI 126 [ _107 ]) [142 *iftmp.32_108.D.263939._M_impl.D.263289._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:66 74 {*movdi_internal}
     (nil))
(insn 99 98 100 18 (parallel [
            (set (reg:DI 129 [ _112 ])
                (minus:DI (reg/f:DI 127 [ _110 ])
                    (reg/f:DI 128 [ _111 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (nil))
(insn 100 99 101 18 (set (reg:V2DI 201)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 101 100 102 18 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [142 MEM <vector(2) long unsigned int> [(int * *)&D.330642]+0 S16 A128])
        (reg:V2DI 201)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 102 101 103 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [142 MEM[(struct _Vector_impl_data *)&D.330642]._M_end_of_storage+0 S8 A128])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 103 102 104 18 (set (reg:DI 176 [ _350 ])
        (reg:DI 129 [ _112 ])) 74 {*movdi_internal}
     (nil))
(insn 104 103 105 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 129 [ _112 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 105 104 106 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 593)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 593)
;;  succ:       19 [54.7% (guessed)]  count:3292923430 (estimated locally) (FALLTHRU)
;;              25 [45.3% (guessed)]  count:2730349710 (estimated locally)

;; basic block 19, loop depth 1, count 3292923432 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [54.7% (guessed)]  count:3292923430 (estimated locally) (FALLTHRU)
(note 106 105 109 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 109 106 110 19 (set (reg:DI 202)
        (const_int 9223372036854775804 [0x7ffffffffffffffc])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 110 109 111 19 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 176 [ _350 ])
            (reg:DI 202))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 111 110 112 19 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 124)
;;  succ:       20 [10.0% (guessed)]  count:329292348 (estimated locally) (FALLTHRU)
;;              23 [90.0% (guessed)]  count:2963631084 (estimated locally)

;; basic block 20, loop depth 0, count 329292346 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [10.0% (guessed)]  count:329292348 (estimated locally) (FALLTHRU)
(note 112 111 115 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 115 112 116 20 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 129 [ _112 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 116 115 117 20 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 120)
;;  succ:       21 [50.0% (guessed)]  count:164646173 (estimated locally) (FALLTHRU)
;;              22 [50.0% (guessed)]  count:164646173 (estimated locally)

;; basic block 21, loop depth 0, count 164646176 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [50.0% (guessed)]  count:164646173 (estimated locally) (FALLTHRU)
(note 117 116 118 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(call_insn 118 117 120 21 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 18 [0x12])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 22, loop depth 0, count 164646176 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       20 [50.0% (guessed)]  count:164646173 (estimated locally)
(code_label 120 118 121 22 995 (nil) [1 uses])
(note 121 120 122 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(call_insn 122 121 124 22 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 18 [0x12])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 23, loop depth 1, count 2963631079 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       19 [90.0% (guessed)]  count:2963631084 (estimated locally)
(code_label 124 122 125 23 994 (nil) [1 uses])
(note 125 124 126 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 23 (set (reg:DI 5 di)
        (reg:DI 176 [ _350 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 127 126 597 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 18 [0x12])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              24 [always (adjusted)]  count:2963631079 (estimated locally) (FALLTHRU)

;; basic block 24, loop depth 1, count 2963631079 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 [always (adjusted)]  count:2963631079 (estimated locally) (FALLTHRU)
(note 597 127 128 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 128 597 129 24 (set (reg/f:DI 203)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 203)
        (nil)))
(insn 129 128 131 24 (set (reg/f:DI 131 [ iftmp.9_124 ])
        (reg/f:DI 203)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 131 129 132 24 (set (reg/f:DI 127 [ _110 ])
        (mem/f:DI (plus:DI (reg/f:DI 126 [ _107 ])
                (const_int 8 [0x8])) [142 MEM[(const int * const &)iftmp.32_108 + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 132 131 133 24 (set (reg/f:DI 128 [ _111 ])
        (mem/f:DI (reg/f:DI 126 [ _107 ]) [142 MEM[(const int * const &)iftmp.32_108]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 133 132 593 24 (parallel [
            (set (reg:DI 175 [ prephitmp_346 ])
                (minus:DI (reg/f:DI 127 [ _110 ])
                    (reg/f:DI 128 [ _111 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":429:34 283 {*subdi_1}
     (nil))
;;  succ:       26 [always]  count:2963631079 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 1, count 2730349710 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       18 [45.3% (guessed)]  count:2730349710 (estimated locally)
(code_label 593 133 592 25 1041 (nil) [1 uses])
(note 592 593 9 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 9 592 10 25 (set (reg:DI 175 [ prephitmp_346 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 10 9 134 25 (set (reg/f:DI 131 [ iftmp.9_124 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       26 [always]  count:2730349710 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 1, count 5693980800 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [always]  count:2730349710 (estimated locally) (FALLTHRU)
;;              24 [always]  count:2963631079 (estimated locally) (FALLTHRU)
(code_label 134 10 135 26 993 (nil) [0 uses])
(note 135 134 136 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [142 MEM[(struct _Vector_base *)&D.330642]._M_impl.D.263289._M_start+0 S8 A128])
        (reg/f:DI 131 [ iftmp.9_124 ])) "/usr/include/c++/11/bits/stl_vector.h":361:25 74 {*movdi_internal}
     (nil))
(insn 137 136 138 26 (parallel [
            (set (reg/f:DI 132 [ _126 ])
                (plus:DI (reg/f:DI 131 [ iftmp.9_124 ])
                    (reg:DI 176 [ _350 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 138 137 139 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [142 MEM[(struct _Vector_base *)&D.330642]._M_impl.D.263289._M_end_of_storage+0 S8 A128])
        (reg/f:DI 132 [ _126 ])) "/usr/include/c++/11/bits/stl_vector.h":363:34 74 {*movdi_internal}
     (nil))
(insn 139 138 140 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 128 [ _111 ])
            (reg/f:DI 127 [ _110 ]))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 12 {*cmpdi_1}
     (nil))
(jump_insn 140 139 141 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 146)
;;  succ:       27 [53.5% (guessed)]  count:3044571527 (estimated locally) (FALLTHRU)
;;              28 [46.5% (guessed)]  count:2649409273 (estimated locally)

;; basic block 27, loop depth 1, count 3044571528 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [53.5% (guessed)]  count:3044571527 (estimated locally) (FALLTHRU)
(note 141 140 142 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 27 (set (reg:DI 1 dx)
        (reg:DI 175 [ prephitmp_346 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 143 142 144 27 (set (reg:DI 4 si)
        (reg/f:DI 128 [ _111 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 144 143 145 27 (set (reg:DI 5 di)
        (reg/f:DI 131 [ iftmp.9_124 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(call_insn 145 144 146 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_algobase.h":431:23 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       28 [always]  count:3044571528 (estimated locally) (FALLTHRU)

;; basic block 28, loop depth 1, count 5693980800 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       26 [46.5% (guessed)]  count:2649409273 (estimated locally)
;;              27 [always]  count:3044571528 (estimated locally) (FALLTHRU)
(code_label 146 145 147 28 996 (nil) [1 uses])
(note 147 146 148 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 28 (parallel [
            (set (reg/f:DI 130 [ _121 ])
                (plus:DI (reg/f:DI 131 [ iftmp.9_124 ])
                    (reg:DI 175 [ prephitmp_346 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":432:22 210 {*adddi_1}
     (nil))
(insn 149 148 150 28 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -104 [0xffffffffffffff98])) [142 MEM[(struct vector *)&D.330642].D.263939._M_impl.D.263289._M_finish+0 S8 A64])
        (reg/f:DI 130 [ _121 ])) "/usr/include/c++/11/bits/stl_vector.h":557:26 74 {*movdi_internal}
     (nil))
(insn 150 149 151 28 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 151 150 152 28 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg:DI 204)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 152 151 153 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -64 [0xffffffffffffffc0])) [43 MEM[(struct rvalue_from_python_data *)&D.330650 + 16B].D.297727.stage1.convertible+0 S8 A128])
            (reg:DI 205))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 12 {*cmpdi_1}
     (nil))
(jump_insn 153 152 154 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 164)
;;  succ:       29 [30.0% (guessed)]  count:1708194223 (estimated locally) (FALLTHRU)
;;              31 [70.0% (guessed)]  count:3985786577 (estimated locally)

;; basic block 29, loop depth 1, count 1708194219 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 [30.0% (guessed)]  count:1708194223 (estimated locally) (FALLTHRU)
(note 154 153 155 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 29 (set (reg/f:DI 134 [ _135 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [142 MEM[(struct vector *)&D.330650 + 32B].D.263939._M_impl.D.263289._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 156 155 157 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 134 [ _135 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 157 156 158 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 164)
;;  succ:       30 [53.5% (guessed)]  count:913371447 (estimated locally) (FALLTHRU)
;;              31 [46.5% (guessed)]  count:794822772 (estimated locally)

;; basic block 30, loop depth 1, count 913371450 (estimated locally), maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 [53.5% (guessed)]  count:913371447 (estimated locally) (FALLTHRU)
(note 158 157 159 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 30 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [142 MEM[(struct _Vector_base *)&D.330650 + 32B]._M_impl.D.263289._M_end_of_storage+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 160 159 161 30 (parallel [
            (set (reg:DI 206)
                (minus:DI (reg/f:DI 207)
                    (reg/f:DI 134 [ _135 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])) [142 MEM[(struct _Vector_base *)&D.330650 + 32B]._M_impl.D.263289._M_end_of_storage+0 S8 A128])
            (reg/f:DI 134 [ _135 ]))
        (nil)))
(insn 161 160 162 30 (set (reg:DI 4 si)
        (reg:DI 206)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 162 161 163 30 (set (reg:DI 5 di)
        (reg/f:DI 134 [ _135 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 163 162 164 30 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       31 [always]  count:913371450 (estimated locally) (FALLTHRU)

;; basic block 31, loop depth 1, count 5693980800 (estimated locally), maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       29 [46.5% (guessed)]  count:794822772 (estimated locally)
;;              30 [always]  count:913371450 (estimated locally) (FALLTHRU)
;;              28 [70.0% (guessed)]  count:3985786577 (estimated locally)
(code_label 164 163 165 31 997 (nil) [2 uses])
(note 165 164 166 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 31 (set (reg/f:DI 143 [ _150 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 24 [0x18])) [124 MEM[(struct vector *)data_6(D) + 16B].D.262944._M_impl.D.262289._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/vector.tcc":112:20 74 {*movdi_internal}
     (nil))
(insn 167 166 168 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 143 [ _150 ])
            (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                    (const_int 32 [0x20])) [124 MEM[(struct vector *)data_6(D) + 16B].D.262944._M_impl.D.262289._M_end_of_storage+0 S8 A64]))) "/usr/include/c++/11/bits/vector.tcc":112:2 12 {*cmpdi_1}
     (nil))
(jump_insn 168 167 631 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "/usr/include/c++/11/bits/vector.tcc":112:2 806 {*jcc}
     (int_list:REG_BR_PROB 886588628 (nil))
 -> 194)
;;  succ:       37 [82.6% (guessed)]  count:4701519946 (estimated locally)
;;              38 [17.4% (guessed)]  count:992460854 (estimated locally) (FALLTHRU)

;; basic block 32, loop depth 0, count 0 (precise), probably never executed
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       15 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              23 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 631 168 634 32 1048 (nil) [1 uses])
(note 634 631 632 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 632 634 172 32 (set (reg:DI 212)
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 74 {*movdi_internal}
     (nil))
;;  succ:       33 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 33, loop depth 0, count 0 (precise), probably never executed
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 172 632 173 33 1000 (nil) [0 uses])
(note 173 172 174 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 33 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 175 174 176 33 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg:DI 208)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 176 175 177 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -64 [0xffffffffffffffc0])) [43 MEM[(struct rvalue_from_python_data *)&D.330650 + 16B].D.297727.stage1.convertible+0 S8 A128])
            (reg:DI 209))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 12 {*cmpdi_1}
     (nil))
(jump_insn 177 176 178 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 188)
            (pc))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 188)
;;  succ:       34 [never]  count:0 (precise) (FALLTHRU)
;;              36 [never]  count:0 (precise)

;; basic block 34, loop depth 0, count 0 (precise), probably never executed
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 [never]  count:0 (precise) (FALLTHRU)
(note 178 177 179 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 34 (set (reg/f:DI 139 [ _144 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [142 MEM[(struct vector *)&D.330650 + 32B].D.263939._M_impl.D.263289._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 180 179 181 34 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [142 MEM[(struct _Vector_base *)&D.330650 + 32B]._M_impl.D.263289._M_end_of_storage+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 181 180 182 34 (parallel [
            (set (reg:DI 141 [ _146 ])
                (minus:DI (reg/f:DI 210)
                    (reg/f:DI 139 [ _144 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])) [142 MEM[(struct _Vector_base *)&D.330650 + 32B]._M_impl.D.263289._M_end_of_storage+0 S8 A128])
            (reg/f:DI 139 [ _144 ]))
        (nil)))
(insn 182 181 183 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 139 [ _144 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 183 182 184 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 188)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 188)
;;  succ:       35 [never]  count:0 (precise) (FALLTHRU)
;;              36 [never]  count:0 (precise)

;; basic block 35, loop depth 0, count 0 (precise), probably never executed
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       34 [never]  count:0 (precise) (FALLTHRU)
(note 184 183 185 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 35 (set (reg:DI 4 si)
        (reg:DI 141 [ _146 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 186 185 187 35 (set (reg:DI 5 di)
        (reg/f:DI 139 [ _144 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 187 186 188 35 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       36 [never]  count:0 (precise) (FALLTHRU)

;; basic block 36, loop depth 0, count 0 (precise), probably never executed
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       34 [never]  count:0 (precise)
;;              35 [never]  count:0 (precise) (FALLTHRU)
;;              33 [never]  count:0 (precise)
(code_label 188 187 189 36 1001 (nil) [2 uses])
(note 189 188 190 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 194 36 (set (reg:DI 211)
        (reg:DI 212)) 74 {*movdi_internal}
     (nil))
;;  succ:       49 [always]  count:0 (precise) (FALLTHRU)

;; basic block 37, loop depth 1, count 4701519941 (estimated locally), maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       31 [82.6% (guessed)]  count:4701519946 (estimated locally)
(code_label 194 190 195 37 998 (nil) [1 uses])
(note 195 194 196 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 37 (set (reg:V2DI 215)
        (vec_concat:V2DI (reg/f:DI 131 [ iftmp.9_124 ])
            (reg/f:DI 130 [ _121 ]))) "/usr/include/c++/11/bits/stl_vector.h":103:4 4306 {vec_concatv2di}
     (nil))
(insn 197 196 198 37 (set (mem:V2DI (reg/f:DI 143 [ _150 ]) [142 MEM <vector(2) long unsigned int> [(int * *)_150]+0 S16 A64])
        (reg:V2DI 215)) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 198 197 199 37 (set (mem/f:DI (plus:DI (reg/f:DI 143 [ _150 ])
                (const_int 16 [0x10])) [142 MEM[(struct _Vector_impl_data *)_150]._M_end_of_storage+0 S8 A64])
        (reg/f:DI 132 [ _126 ])) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 199 198 200 37 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 143 [ _150 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":117:6 210 {*adddi_1}
     (nil))
(insn 200 199 204 37 (set (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 24 [0x18])) [124 MEM[(struct vector *)data_6(D) + 16B].D.262944._M_impl.D.262289._M_finish+0 S8 A64])
        (reg:DI 216)) "/usr/include/c++/11/bits/vector.tcc":117:6 74 {*movdi_internal}
     (nil))
;;  succ:       41 [always]  count:4701519941 (estimated locally) (FALLTHRU)

;; basic block 38, loop depth 1, count 992460853 (estimated locally), maybe hot
;;  prev block 37, next block 39, flags: (RTL)
;;  pred:       31 [17.4% (guessed)]  count:992460854 (estimated locally) (FALLTHRU)
(note 204 200 205 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 38 (set (reg:DI 181 [ D.330677 ])
        (reg/f:DI 143 [ _150 ])) 74 {*movdi_internal}
     (nil))
(insn 206 205 207 38 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":121:21 210 {*adddi_1}
     (nil))
(insn 207 206 208 38 (set (reg:DI 1 dx)
        (reg:DI 217)) "/usr/include/c++/11/bits/vector.tcc":121:21 74 {*movdi_internal}
     (nil))
(insn 208 207 209 38 (set (reg:DI 4 si)
        (reg:DI 181 [ D.330677 ])) "/usr/include/c++/11/bits/vector.tcc":121:21 74 {*movdi_internal}
     (nil))
(insn 209 208 210 38 (set (reg:DI 5 di)
        (reg/v/f:DI 82 [ storage ])) "/usr/include/c++/11/bits/vector.tcc":121:21 74 {*movdi_internal}
     (nil))
(call_insn 210 209 211 38 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_") [flags 0x1]  <function_decl 0x7f1a35b3b200 _M_realloc_insert>) [0 _M_realloc_insert S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/vector.tcc":121:21 813 {*call}
     (expr_list:REG_EH_REGION (const_int 16 [0x10])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_") [flags 0x1]  <function_decl 0x7f1a35b3b200 _M_realloc_insert>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       39 [always]  count:992460853 (estimated locally) (FALLTHRU)
;;              44 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 39, loop depth 1, count 3044571527 (estimated locally), maybe hot
;; Invalid sum of incoming counts 992460853 (estimated locally), should be 3044571527 (estimated locally)
;;  prev block 38, next block 40, flags: (RTL)
;;  pred:       38 [always]  count:992460853 (estimated locally) (FALLTHRU)
(note 211 210 212 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 39 (set (reg/f:DI 110 [ _83 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [142 D.330642.D.263939._M_impl.D.263289._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 213 212 214 39 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [142 MEM[(struct _Vector_base *)&D.330642]._M_impl.D.263289._M_end_of_storage+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 214 213 215 39 (parallel [
            (set (reg:DI 112 [ _85 ])
                (minus:DI (reg/f:DI 218)
                    (reg/f:DI 110 [ _83 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])) [142 MEM[(struct _Vector_base *)&D.330642]._M_impl.D.263289._M_end_of_storage+0 S8 A128])
            (reg/f:DI 110 [ _83 ]))
        (nil)))
(insn 215 214 216 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 110 [ _83 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 216 215 217 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 221)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 4 (nil))
 -> 221)
;;  succ:       40 [always (guessed)]  count:3044571527 (estimated locally) (FALLTHRU)
;;              41 [never (guessed)]  count:0 (estimated locally)

;; basic block 40, loop depth 1, count 3044571528 (estimated locally), maybe hot
;;  prev block 39, next block 41, flags: (RTL)
;;  pred:       39 [always (guessed)]  count:3044571527 (estimated locally) (FALLTHRU)
(note 217 216 218 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 40 (set (reg:DI 4 si)
        (reg:DI 112 [ _85 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 219 218 220 40 (set (reg:DI 5 di)
        (reg/f:DI 110 [ _83 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 220 219 221 40 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       41 [always]  count:3044571528 (estimated locally) (FALLTHRU)

;; basic block 41, loop depth 1, count 5693980800 (estimated locally), maybe hot
;; Invalid sum of incoming counts 7746091469 (estimated locally), should be 5693980800 (estimated locally)
;;  prev block 40, next block 42, flags: (RTL)
;;  pred:       39 [never (guessed)]  count:0 (estimated locally)
;;              40 [always]  count:3044571528 (estimated locally) (FALLTHRU)
;;              37 [always]  count:4701519941 (estimated locally) (FALLTHRU)
(code_label 221 220 222 41 1003 (nil) [1 uses])
(note 222 221 223 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 41 (parallel [
            (set (reg:DI 219)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":43:30 210 {*adddi_1}
     (nil))
(insn 224 223 225 41 (set (reg:DI 5 di)
        (reg:DI 219)) "/usr/include/boost/python/stl_iterator.hpp":43:30 74 {*movdi_internal}
     (nil))
(call_insn 225 224 226 41 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_impl9incrementEv") [flags 0x41]  <function_decl 0x7f1a3775b800 increment>) [0 increment S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/stl_iterator.hpp":43:30 813 {*call}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_impl9incrementEv") [flags 0x41]  <function_decl 0x7f1a3775b800 increment>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       42 [always]  count:5693980800 (estimated locally) (FALLTHRU,DFS_BACK)
;;              48 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 42, loop depth 1, count 6767722618 (estimated locally), maybe hot
;;  prev block 41, next block 43, flags: (RTL)
;;  pred:       11 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              41 [always]  count:5693980800 (estimated locally) (FALLTHRU,DFS_BACK)
(code_label 226 225 227 42 991 (nil) [0 uses])
(note 227 226 228 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 42 (parallel [
            (set (reg:DI 220)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":53:33 210 {*adddi_1}
     (nil))
(insn 229 228 230 42 (parallel [
            (set (reg:DI 221)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":53:33 210 {*adddi_1}
     (nil))
(insn 230 229 231 42 (set (reg:DI 4 si)
        (reg:DI 220)) "/usr/include/boost/python/stl_iterator.hpp":53:33 74 {*movdi_internal}
     (nil))
(insn 231 230 232 42 (set (reg:DI 5 di)
        (reg:DI 221)) "/usr/include/boost/python/stl_iterator.hpp":53:33 74 {*movdi_internal}
     (nil))
(call_insn 232 231 598 42 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl5equalERKS2_") [flags 0x41]  <function_decl 0x7f1a3775b900 equal>) [0 equal S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/stl_iterator.hpp":53:33 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl5equalERKS2_") [flags 0x41]  <function_decl 0x7f1a3775b900 equal>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       48 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              43 [always (adjusted)]  count:6767722618 (estimated locally) (FALLTHRU)

;; basic block 43, loop depth 1, count 6767722618 (estimated locally), maybe hot
;;  prev block 42, next block 44, flags: (RTL)
;;  pred:       42 [always (adjusted)]  count:6767722618 (estimated locally) (FALLTHRU)
(note 598 232 233 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 233 598 235 43 (set (reg:QI 113 [ _90 ])
        (reg:QI 0 ax)) "/usr/include/boost/python/stl_iterator.hpp":53:33 77 {*movqi_internal}
     (nil))
(insn 235 233 236 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ _90 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":1562:21 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 236 235 623 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 303)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1562:21 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 303)
;;  succ:       12 [89.0% (guessed)]  count:6023273134 (estimated locally) (FALLTHRU)
;;              54 [11.0% (guessed)]  count:744449484 (estimated locally)

;; basic block 44, loop depth 0, count 0 (precise), probably never executed
;;  prev block 43, next block 45, flags: (RTL)
;;  pred:       38 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 623 236 626 44 1046 (nil) [1 uses])
(note 626 623 624 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 624 626 241 44 (set (reg:DI 223)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
;;  succ:       45 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 45, loop depth 0, count 0 (precise), probably never executed
;;  prev block 44, next block 46, flags: (RTL)
;;  pred:       44 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 241 624 242 45 1006 (nil) [0 uses])
(note 242 241 243 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 45 (set (reg/f:DI 114 [ _91 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [142 D.330642.D.263939._M_impl.D.263289._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 244 243 245 45 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [142 MEM[(struct _Vector_base *)&D.330642]._M_impl.D.263289._M_end_of_storage+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 245 244 246 45 (parallel [
            (set (reg:DI 116 [ _93 ])
                (minus:DI (reg/f:DI 222)
                    (reg/f:DI 114 [ _91 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])) [142 MEM[(struct _Vector_base *)&D.330642]._M_impl.D.263289._M_end_of_storage+0 S8 A128])
            (reg/f:DI 114 [ _91 ]))
        (nil)))
(insn 246 245 247 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 114 [ _91 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 247 246 248 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 252)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 252)
;;  succ:       46 [never]  count:0 (precise) (FALLTHRU)
;;              47 [never]  count:0 (precise)

;; basic block 46, loop depth 0, count 0 (precise), probably never executed
;;  prev block 45, next block 47, flags: (RTL)
;;  pred:       45 [never]  count:0 (precise) (FALLTHRU)
(note 248 247 249 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 46 (set (reg:DI 4 si)
        (reg:DI 116 [ _93 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 250 249 251 46 (set (reg:DI 5 di)
        (reg/f:DI 114 [ _91 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 251 250 252 46 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       47 [never]  count:0 (precise) (FALLTHRU)

;; basic block 47, loop depth 0, count 0 (precise), probably never executed
;;  prev block 46, next block 48, flags: (RTL)
;;  pred:       45 [never]  count:0 (precise)
;;              46 [never]  count:0 (precise) (FALLTHRU)
(code_label 252 251 253 47 1007 (nil) [1 uses])
(note 253 252 254 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 617 47 (set (reg:DI 211)
        (reg:DI 223)) 74 {*movdi_internal}
     (nil))
;;  succ:       49 [always]  count:0 (precise) (FALLTHRU)

;; basic block 48, loop depth 0, count 0 (precise), probably never executed
;;  prev block 47, next block 49, flags: (RTL)
;;  pred:       12 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              42 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 617 254 622 48 1045 (nil) [1 uses])
(note 622 617 618 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 618 622 256 48 (set (reg:DI 211)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
;;  succ:       49 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 49, loop depth 0, count 0 (precise), probably never executed
;;  prev block 48, next block 50, flags: (RTL)
;;  pred:       36 [always]  count:0 (precise) (FALLTHRU)
;;              47 [always]  count:0 (precise) (FALLTHRU)
;;              48 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 256 618 257 49 1002 (nil) [0 uses])
(note 257 256 258 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 49 (set (reg/f:DI 117 [ _96 ])
        (reg:DI 211)) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
(insn 259 258 260 49 (set (reg:DI 5 di)
        (reg/f:DI 117 [ _96 ])) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
(call_insn 260 259 261 49 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":1568:6 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 261 260 262 49 (set (reg/f:DI 118 [ _97 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 16 [0x10])) [124 MEM[(struct vector *)data_6(D) + 16B].D.262944._M_impl.D.262289._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":1499:24 74 {*movdi_internal}
     (nil))
(insn 262 261 263 49 (set (reg/f:DI 119 [ _98 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 24 [0x18])) [124 MEM[(struct vector *)data_6(D) + 16B].D.262944._M_impl.D.262289._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":1794:36 74 {*movdi_internal}
     (nil))
(insn 263 262 264 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 118 [ _97 ])
            (reg/f:DI 119 [ _98 ]))) "/usr/include/c++/11/bits/stl_vector.h":1794:2 12 {*cmpdi_1}
     (nil))
(jump_insn 264 263 265 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1794:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 270)
;;  succ:       50 [never]  count:0 (precise) (FALLTHRU)
;;              51 [never]  count:0 (precise)

;; basic block 50, loop depth 0, count 0 (precise), probably never executed
;;  prev block 49, next block 51, flags: (RTL)
;;  pred:       49 [never]  count:0 (precise) (FALLTHRU)
(note 265 264 266 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 50 (set (reg:DI 4 si)
        (reg/f:DI 119 [ _98 ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(insn 267 266 268 50 (set (reg:DI 5 di)
        (reg/f:DI 118 [ _97 ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(call_insn 268 267 269 50 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_") [flags 0x1]  <function_decl 0x7f1a35a90100 __destroy>) [0 __destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_construct.h":196:11 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_") [flags 0x1]  <function_decl 0x7f1a35a90100 __destroy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 269 268 270 50 (set (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 24 [0x18])) [124 MEM[(struct vector *)data_6(D) + 16B].D.262944._M_impl.D.262289._M_finish+0 S8 A64])
        (reg/f:DI 118 [ _97 ])) "/usr/include/c++/11/bits/stl_vector.h":1798:30 74 {*movdi_internal}
     (nil))
;;  succ:       51 [never]  count:0 (precise) (FALLTHRU)

;; basic block 51, loop depth 0, count 0 (precise), probably never executed
;;  prev block 50, next block 52, flags: (RTL)
;;  pred:       49 [never]  count:0 (precise)
;;              50 [never]  count:0 (precise) (FALLTHRU)
(code_label 270 269 271 51 1008 (nil) [1 uses])
(note 271 270 272 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(call_insn 272 271 627 51 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1570:6 813 {*call}
     (expr_list:REG_EH_REGION (const_int 17 [0x11])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       52 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 52, loop depth 0, count 0 (precise), probably never executed
;;  prev block 51, next block 53, flags: (RTL)
;;  pred:       51 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 627 272 630 52 1047 (nil) [1 uses])
(note 630 627 628 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 628 630 274 52 (set (reg:DI 226)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
;;  succ:       53 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 53, loop depth 0, count 0 (precise), probably never executed
;;  prev block 52, next block 54, flags: (RTL)
;;  pred:       52 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 274 628 275 53 1009 (nil) [0 uses])
(note 275 274 276 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(call_insn 276 275 277 53 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1568:6 813 {*call}
     (expr_list:REG_EH_REGION (const_int -39 [0xffffffffffffffd9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 277 276 279 53 (set (reg:DI 225)
        (reg:DI 226)) 74 {*movdi_internal}
     (nil))
(insn 279 277 280 53 (set (reg:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -136 [0xffffffffffffff78])) [31 MEM[(struct handle *)&D.330629 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 280 279 281 53 (set (reg:DI 5 di)
        (reg:DI 229)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 281 280 282 53 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -30 [0xffffffffffffffe2])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 282 281 283 53 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 283 282 284 53 (set (reg:DI 5 di)
        (reg:DI 230)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 284 283 285 53 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 285 284 287 53 (set (reg:DI 231)
        (reg:DI 225)) 74 {*movdi_internal}
     (nil))
(insn 287 285 288 53 (set (reg:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -120 [0xffffffffffffff88])) [31 MEM[(struct handle *)&D.330630 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 288 287 289 53 (set (reg:DI 5 di)
        (reg:DI 233)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 289 288 290 53 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -29 [0xffffffffffffffe3])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 290 289 291 53 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 291 290 292 53 (set (reg:DI 5 di)
        (reg:DI 234)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 292 291 293 53 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 293 292 295 53 (set (reg:DI 235)
        (reg:DI 231)) 74 {*movdi_internal}
     (nil))
(insn 295 293 296 53 (set (reg/f:DI 108 [ _78 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 16 [0x10])) [124 MEM[(struct _Vector_base *)data_6(D) + 16B]._M_impl.D.262289._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
(insn 296 295 297 53 (set (reg/f:DI 237)
        (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 32 [0x20])) [124 MEM[(struct _Vector_base *)data_6(D) + 16B]._M_impl.D.262289._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 297 296 298 53 (parallel [
            (set (reg:DI 109 [ _79 ])
                (minus:DI (reg/f:DI 237)
                    (reg/f:DI 108 [ _78 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                    (const_int 32 [0x20])) [124 MEM[(struct _Vector_base *)data_6(D) + 16B]._M_impl.D.262289._M_end_of_storage+0 S8 A64])
            (reg/f:DI 108 [ _78 ]))
        (nil)))
(insn 298 297 299 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 108 [ _78 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 299 298 303 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 415)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 415)
;;  succ:       71 [never]  count:0 (precise)
;;              72 [never]  count:0 (precise) (FALLTHRU)

;; basic block 54, loop depth 0, count 744449484 (estimated locally), maybe hot
;;  prev block 53, next block 55, flags: (RTL)
;;  pred:       43 [11.0% (guessed)]  count:744449484 (estimated locally)
(code_label 303 299 304 54 1004 (nil) [1 uses])
(note 304 303 305 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 54 (set (reg/f:DI 103 [ _73 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -136 [0xffffffffffffff78])) [31 MEM[(struct handle *)&D.330629 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 306 305 307 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 103 [ _73 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 307 306 311 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 311)
;;  succ:       59 [30.0% (guessed)]  count:223334843 (estimated locally) (FALLTHRU)
;;              55 [70.0% (guessed)]  count:521114641 (estimated locally)

;; basic block 55, loop depth 0, count 521114639 (estimated locally), maybe hot
;;  prev block 54, next block 56, flags: (RTL)
;;  pred:       54 [70.0% (guessed)]  count:521114641 (estimated locally)
(code_label 311 307 312 55 1012 (nil) [1 uses])
(note 312 311 313 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 316 55 (set (reg:DI 156 [ _169 ])
        (mem:DI (reg/f:DI 103 [ _73 ]) [7 MEM[(const struct PyObject *)_73].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 316 313 317 55 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 156 [ _169 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 317 316 376 55 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 328)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 328)
;;  succ:       57 [100.0% (guessed)]  count:520906193 (estimated locally)
;;              56 [0.0% (guessed)]  count:208446 (estimated locally) (FALLTHRU)

;; basic block 56, loop depth 0, count 1040728 (estimated locally)
;;  prev block 55, next block 57, flags: (RTL)
;;  pred:       55 [0.0% (guessed)]  count:208446 (estimated locally) (FALLTHRU)
;;              64 [0.0% (guessed)]  count:208304 (estimated locally)
;;              73 [0.0% (guessed)]  count:208162 (estimated locally)
;;              80 [0.0% (guessed)]  count:208021 (estimated locally)
;;              90 [0.0% (guessed)]  count:207796 (estimated locally)
(code_label 376 317 318 56 1020 (nil) [4 uses])
(note 318 376 319 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 56 (set (reg:DI 238)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 320 319 321 56 (set (reg:DI 2 cx)
        (reg:DI 238)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)
        (nil)))
(insn 321 320 322 56 (set (reg:SI 1 dx)
        (const_int 37 [0x25])) "/usr/include/boost/python/refcount.hpp":37:5 75 {*movsi_internal}
     (nil))
(insn 322 321 323 56 (set (reg:DI 239)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 323 322 324 56 (set (reg:DI 4 si)
        (reg:DI 239)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)
        (nil)))
(insn 324 323 325 56 (set (reg:DI 240)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 325 324 326 56 (set (reg:DI 5 di)
        (reg:DI 240)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)
        (nil)))
(call_insn 326 325 328 56 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/refcount.hpp":37:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 57, loop depth 0, count 520968732 (estimated locally), maybe hot
;;  prev block 56, next block 58, flags: (RTL)
;;  pred:       55 [100.0% (guessed)]  count:520906193 (estimated locally)
(code_label 328 326 329 57 1014 (nil) [1 uses])
(note 329 328 330 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 57 (parallel [
            (set (reg:DI 157 [ _171 ])
                (plus:DI (reg:DI 156 [ _169 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 331 330 333 57 (set (mem:DI (reg/f:DI 103 [ _73 ]) [7 MEM[(struct PyObject *)_73].ob_refcnt+0 S8 A64])
        (reg:DI 157 [ _171 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 333 331 334 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 157 [ _171 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 334 333 335 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 338)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 338)
;;  succ:       59 [67.0% (guessed)]  count:349049051 (estimated locally)
;;              58 [33.0% (guessed)]  count:171919681 (estimated locally) (FALLTHRU)

;; basic block 58, loop depth 0, count 171919679 (estimated locally), maybe hot
;;  prev block 57, next block 59, flags: (RTL)
;;  pred:       57 [33.0% (guessed)]  count:171919681 (estimated locally) (FALLTHRU)
(note 335 334 336 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 58 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _73 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 337 336 338 58 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -31 [0xffffffffffffffe1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       59 [always]  count:171919679 (estimated locally) (FALLTHRU)

;; basic block 59, loop depth 0, count 744241040 (estimated locally), maybe hot
;;  prev block 58, next block 60, flags: (RTL)
;;  pred:       54 [30.0% (guessed)]  count:223334843 (estimated locally) (FALLTHRU)
;;              58 [always]  count:171919679 (estimated locally) (FALLTHRU)
;;              57 [67.0% (guessed)]  count:349049051 (estimated locally)
(code_label 338 337 339 59 1013 (nil) [1 uses])
(note 339 338 340 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 59 (set (reg/f:DI 153 [ _166 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -144 [0xffffffffffffff70])) [31 D.330629.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 341 340 344 59 (set (reg:DI 154 [ _167 ])
        (mem:DI (reg/f:DI 153 [ _166 ]) [7 MEM[(const struct PyObject *)_166].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 344 341 345 59 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 154 [ _167 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 345 344 394 59 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 356)
;;  succ:       61 [100.0% (guessed)]  count:743943344 (estimated locally)
;;              60 [0.0% (guessed)]  count:297696 (estimated locally) (FALLTHRU)

;; basic block 60, loop depth 0, count 1486534 (estimated locally), maybe hot
;;  prev block 59, next block 61, flags: (RTL)
;;  pred:       59 [0.0% (guessed)]  count:297696 (estimated locally) (FALLTHRU)
;;              67 [0.0% (guessed)]  count:297494 (estimated locally)
;;              76 [0.0% (guessed)]  count:297291 (estimated locally)
;;              83 [0.0% (guessed)]  count:297089 (estimated locally)
;;              86 [0.0% (guessed)]  count:296970 (estimated locally)
(code_label 394 345 346 60 1022 (nil) [4 uses])
(note 346 394 347 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 60 (set (reg:DI 241)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 348 347 349 60 (set (reg:DI 2 cx)
        (reg:DI 241)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)
        (nil)))
(insn 349 348 350 60 (set (reg:SI 1 dx)
        (const_int 422 [0x1a6])) "/usr/include/boost/python/object_core.hpp":422:5 75 {*movsi_internal}
     (nil))
(insn 350 349 351 60 (set (reg:DI 242)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 351 350 352 60 (set (reg:DI 4 si)
        (reg:DI 242)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)
        (nil)))
(insn 352 351 353 60 (set (reg:DI 243)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 353 352 354 60 (set (reg:DI 5 di)
        (reg:DI 243)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)
        (nil)))
(call_insn 354 353 356 60 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":422:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 61, loop depth 0, count 743943346 (estimated locally), maybe hot
;;  prev block 60, next block 62, flags: (RTL)
;;  pred:       59 [100.0% (guessed)]  count:743943344 (estimated locally)
(code_label 356 354 357 61 1016 (nil) [1 uses])
(note 357 356 358 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 61 (parallel [
            (set (reg:DI 155 [ _168 ])
                (plus:DI (reg:DI 154 [ _167 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 359 358 360 61 (set (mem:DI (reg/f:DI 153 [ _166 ]) [7 _166->ob_refcnt+0 S8 A64])
        (reg:DI 155 [ _168 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 360 359 361 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 155 [ _168 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 361 360 362 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 365)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 365)
;;  succ:       63 [67.0% (guessed)]  count:498442043 (estimated locally)
;;              62 [33.0% (guessed)]  count:245501303 (estimated locally) (FALLTHRU)

;; basic block 62, loop depth 0, count 245501302 (estimated locally), maybe hot
;;  prev block 61, next block 63, flags: (RTL)
;;  pred:       61 [33.0% (guessed)]  count:245501303 (estimated locally) (FALLTHRU)
(note 362 361 363 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 364 62 (set (reg:DI 5 di)
        (reg/f:DI 153 [ _166 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 364 363 365 62 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -42 [0xffffffffffffffd6])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       63 [always]  count:245501302 (estimated locally) (FALLTHRU)

;; basic block 63, loop depth 0, count 743943346 (estimated locally), maybe hot
;;  prev block 62, next block 64, flags: (RTL)
;;  pred:       61 [67.0% (guessed)]  count:498442043 (estimated locally)
;;              62 [always]  count:245501302 (estimated locally) (FALLTHRU)
(code_label 365 364 366 63 1017 (nil) [1 uses])
(note 366 365 367 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 63 (set (reg/f:DI 104 [ _74 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -120 [0xffffffffffffff88])) [31 MEM[(struct handle *)&D.330630 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 368 367 369 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 104 [ _74 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 369 368 373 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 373)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 373)
;;  succ:       67 [30.0% (guessed)]  count:223183002 (estimated locally) (FALLTHRU)
;;              64 [70.0% (guessed)]  count:520760344 (estimated locally)

;; basic block 64, loop depth 0, count 520760345 (estimated locally), maybe hot
;;  prev block 63, next block 65, flags: (RTL)
;;  pred:       63 [70.0% (guessed)]  count:520760344 (estimated locally)
(code_label 373 369 374 64 1018 (nil) [1 uses])
(note 374 373 375 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 379 64 (set (reg:DI 151 [ _163 ])
        (mem:DI (reg/f:DI 104 [ _74 ]) [7 MEM[(const struct PyObject *)_74].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 379 375 380 64 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 151 [ _163 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 380 379 381 64 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 376)
;;  succ:       65 [100.0% (guessed)]  count:520552041 (estimated locally) (FALLTHRU)
;;              56 [0.0% (guessed)]  count:208304 (estimated locally)

;; basic block 65, loop depth 0, count 520614533 (estimated locally), maybe hot
;;  prev block 64, next block 66, flags: (RTL)
;;  pred:       64 [100.0% (guessed)]  count:520552041 (estimated locally) (FALLTHRU)
(note 381 380 382 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 65 (parallel [
            (set (reg:DI 152 [ _165 ])
                (plus:DI (reg:DI 151 [ _163 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 383 382 385 65 (set (mem:DI (reg/f:DI 104 [ _74 ]) [7 MEM[(struct PyObject *)_74].ob_refcnt+0 S8 A64])
        (reg:DI 152 [ _165 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 385 383 386 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 152 [ _165 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 386 385 387 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 390)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 390)
;;  succ:       67 [67.0% (guessed)]  count:348811738 (estimated locally)
;;              66 [33.0% (guessed)]  count:171802795 (estimated locally) (FALLTHRU)

;; basic block 66, loop depth 0, count 171802791 (estimated locally), maybe hot
;;  prev block 65, next block 67, flags: (RTL)
;;  pred:       65 [33.0% (guessed)]  count:171802795 (estimated locally) (FALLTHRU)
(note 387 386 388 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 388 387 389 66 (set (reg:DI 5 di)
        (reg/f:DI 104 [ _74 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 389 388 390 66 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -32 [0xffffffffffffffe0])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       67 [always]  count:171802791 (estimated locally) (FALLTHRU)

;; basic block 67, loop depth 0, count 743735040 (estimated locally), maybe hot
;;  prev block 66, next block 68, flags: (RTL)
;;  pred:       63 [30.0% (guessed)]  count:223183002 (estimated locally) (FALLTHRU)
;;              66 [always]  count:171802791 (estimated locally) (FALLTHRU)
;;              65 [67.0% (guessed)]  count:348811738 (estimated locally)
(code_label 390 389 391 67 1019 (nil) [1 uses])
(note 391 390 392 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 67 (set (reg/f:DI 148 [ _160 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -128 [0xffffffffffffff80])) [31 D.330630.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 393 392 397 67 (set (reg:DI 149 [ _161 ])
        (mem:DI (reg/f:DI 148 [ _160 ]) [7 MEM[(const struct PyObject *)_160].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 397 393 398 67 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 149 [ _161 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 398 397 399 67 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 394)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 394)
;;  succ:       68 [100.0% (guessed)]  count:743437546 (estimated locally) (FALLTHRU)
;;              60 [0.0% (guessed)]  count:297494 (estimated locally)

;; basic block 68, loop depth 0, count 743437548 (estimated locally), maybe hot
;;  prev block 67, next block 69, flags: (RTL)
;;  pred:       67 [100.0% (guessed)]  count:743437546 (estimated locally) (FALLTHRU)
(note 399 398 400 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 401 68 (parallel [
            (set (reg:DI 150 [ _162 ])
                (plus:DI (reg:DI 149 [ _161 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 401 400 402 68 (set (mem:DI (reg/f:DI 148 [ _160 ]) [7 _160->ob_refcnt+0 S8 A64])
        (reg:DI 150 [ _162 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 402 401 403 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 150 [ _162 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 403 402 404 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 407)
;;  succ:       70 [67.0% (guessed)]  count:498103158 (estimated locally)
;;              69 [33.0% (guessed)]  count:245334390 (estimated locally) (FALLTHRU)

;; basic block 69, loop depth 0, count 245334388 (estimated locally), maybe hot
;;  prev block 68, next block 70, flags: (RTL)
;;  pred:       68 [33.0% (guessed)]  count:245334390 (estimated locally) (FALLTHRU)
(note 404 403 405 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 405 404 406 69 (set (reg:DI 5 di)
        (reg/f:DI 148 [ _160 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 406 405 407 69 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -41 [0xffffffffffffffd7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       70 [always]  count:245334388 (estimated locally) (FALLTHRU)

;; basic block 70, loop depth 0, count 743437548 (estimated locally), maybe hot
;;  prev block 69, next block 71, flags: (RTL)
;;  pred:       68 [67.0% (guessed)]  count:498103158 (estimated locally)
;;              69 [always]  count:245334388 (estimated locally) (FALLTHRU)
(code_label 407 406 408 70 1023 (nil) [1 uses])
(note 408 407 409 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 70 (set (reg/f:DI 87 [ _24 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -152 [0xffffffffffffff68])) [31 MEM[(struct handle *)&D.279955 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 410 409 411 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _24 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 411 410 415 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 434)
;;  succ:       76 [30.0% (guessed)]  count:223031262 (estimated locally) (FALLTHRU)
;;              73 [70.0% (guessed)]  count:520406286 (estimated locally)

;; basic block 71, loop depth 0, count 0 (precise), probably never executed
;;  prev block 70, next block 72, flags: (RTL)
;;  pred:       53 [never]  count:0 (precise)
(code_label 415 411 416 71 1010 (nil) [1 uses])
(note 416 415 417 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 417 416 418 71 (set (reg:DI 4 si)
        (reg:DI 109 [ _79 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 418 417 419 71 (set (reg:DI 5 di)
        (reg/f:DI 108 [ _78 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 419 418 420 71 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       72 [never]  count:0 (precise) (FALLTHRU)

;; basic block 72, loop depth 0, count 0 (precise), probably never executed
;;  prev block 71, next block 73, flags: (RTL)
;;  pred:       71 [never]  count:0 (precise) (FALLTHRU)
;;              53 [never]  count:0 (precise) (FALLTHRU)
(code_label 420 419 421 72 1011 (nil) [0 uses])
(note 421 420 422 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 424 72 (set (reg:DI 244)
        (reg:DI 235)) 74 {*movdi_internal}
     (nil))
(insn 424 422 425 72 (set (reg:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -152 [0xffffffffffffff68])) [31 MEM[(struct handle *)&D.279955 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 425 424 426 72 (set (reg:DI 5 di)
        (reg:DI 246)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 426 425 427 72 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -26 [0xffffffffffffffe6])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 427 426 428 72 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 428 427 429 72 (set (reg:DI 5 di)
        (reg:DI 247)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 429 428 430 72 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 430 429 434 72 (set (reg:DI 248)
        (reg:DI 244)) 74 {*movdi_internal}
     (nil))
;;  succ:       94 [always]  count:0 (precise) (FALLTHRU)

;; basic block 73, loop depth 0, count 520406284 (estimated locally), maybe hot
;;  prev block 72, next block 74, flags: (RTL)
;;  pred:       70 [70.0% (guessed)]  count:520406286 (estimated locally)
(code_label 434 430 435 73 1024 (nil) [1 uses])
(note 435 434 436 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 436 435 439 73 (set (reg:DI 172 [ _188 ])
        (mem:DI (reg/f:DI 87 [ _24 ]) [7 MEM[(const struct PyObject *)_24].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 439 436 440 73 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 172 [ _188 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 440 439 441 73 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 376)
;;  succ:       74 [100.0% (guessed)]  count:520198122 (estimated locally) (FALLTHRU)
;;              56 [0.0% (guessed)]  count:208162 (estimated locally)

;; basic block 74, loop depth 0, count 520260572 (estimated locally), maybe hot
;;  prev block 73, next block 75, flags: (RTL)
;;  pred:       73 [100.0% (guessed)]  count:520198122 (estimated locally) (FALLTHRU)
(note 441 440 442 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 74 (parallel [
            (set (reg:DI 173 [ _190 ])
                (plus:DI (reg:DI 172 [ _188 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 443 442 445 74 (set (mem:DI (reg/f:DI 87 [ _24 ]) [7 MEM[(struct PyObject *)_24].ob_refcnt+0 S8 A64])
        (reg:DI 173 [ _190 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 445 443 446 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 173 [ _190 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 446 445 447 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 450)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 450)
;;  succ:       76 [67.0% (guessed)]  count:348574584 (estimated locally)
;;              75 [33.0% (guessed)]  count:171685988 (estimated locally) (FALLTHRU)

;; basic block 75, loop depth 0, count 171685985 (estimated locally), maybe hot
;;  prev block 74, next block 76, flags: (RTL)
;;  pred:       74 [33.0% (guessed)]  count:171685988 (estimated locally) (FALLTHRU)
(note 447 446 448 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 448 447 449 75 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _24 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 449 448 450 75 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -25 [0xffffffffffffffe7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       76 [always]  count:171685985 (estimated locally) (FALLTHRU)

;; basic block 76, loop depth 0, count 743229387 (estimated locally), maybe hot
;;  prev block 75, next block 77, flags: (RTL)
;;  pred:       70 [30.0% (guessed)]  count:223031262 (estimated locally) (FALLTHRU)
;;              75 [always]  count:171685985 (estimated locally) (FALLTHRU)
;;              74 [67.0% (guessed)]  count:348574584 (estimated locally)
(code_label 450 449 451 76 1025 (nil) [1 uses])
(note 451 450 452 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 452 451 453 76 (set (reg/f:DI 169 [ _185 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -160 [0xffffffffffffff60])) [31 D.279955.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 453 452 456 76 (set (reg:DI 170 [ _186 ])
        (mem:DI (reg/f:DI 169 [ _185 ]) [7 MEM[(const struct PyObject *)_185].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 456 453 457 76 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 170 [ _186 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 457 456 458 76 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 394)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 394)
;;  succ:       77 [100.0% (guessed)]  count:742932096 (estimated locally) (FALLTHRU)
;;              60 [0.0% (guessed)]  count:297291 (estimated locally)

;; basic block 77, loop depth 0, count 742932097 (estimated locally), maybe hot
;;  prev block 76, next block 78, flags: (RTL)
;;  pred:       76 [100.0% (guessed)]  count:742932096 (estimated locally) (FALLTHRU)
(note 458 457 459 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 77 (parallel [
            (set (reg:DI 171 [ _187 ])
                (plus:DI (reg:DI 170 [ _186 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 460 459 461 77 (set (mem:DI (reg/f:DI 169 [ _185 ]) [7 _185->ob_refcnt+0 S8 A64])
        (reg:DI 171 [ _187 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 461 460 462 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 171 [ _187 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 462 461 463 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 466)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 466)
;;  succ:       79 [67.0% (guessed)]  count:497764506 (estimated locally)
;;              78 [33.0% (guessed)]  count:245167591 (estimated locally) (FALLTHRU)

;; basic block 78, loop depth 0, count 245167587 (estimated locally), maybe hot
;;  prev block 77, next block 79, flags: (RTL)
;;  pred:       77 [33.0% (guessed)]  count:245167591 (estimated locally) (FALLTHRU)
(note 463 462 464 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 78 (set (reg:DI 5 di)
        (reg/f:DI 169 [ _185 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 465 464 466 78 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -45 [0xffffffffffffffd3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       79 [always]  count:245167587 (estimated locally) (FALLTHRU)

;; basic block 79, loop depth 0, count 742932097 (estimated locally), maybe hot
;;  prev block 78, next block 80, flags: (RTL)
;;  pred:       77 [67.0% (guessed)]  count:497764506 (estimated locally)
;;              78 [always]  count:245167587 (estimated locally) (FALLTHRU)
(code_label 466 465 467 79 1028 (nil) [1 uses])
(note 467 466 468 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 79 (set (reg/f:DI 86 [ _23 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -168 [0xffffffffffffff58])) [31 MEM[(struct handle *)&D.279938 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 469 468 470 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 86 [ _23 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 470 469 474 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 474)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 474)
;;  succ:       83 [30.0% (guessed)]  count:222879627 (estimated locally) (FALLTHRU)
;;              80 [70.0% (guessed)]  count:520052470 (estimated locally)

;; basic block 80, loop depth 0, count 520052469 (estimated locally), maybe hot
;;  prev block 79, next block 81, flags: (RTL)
;;  pred:       79 [70.0% (guessed)]  count:520052470 (estimated locally)
(code_label 474 470 475 80 1029 (nil) [1 uses])
(note 475 474 476 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 479 80 (set (reg:DI 167 [ _182 ])
        (mem:DI (reg/f:DI 86 [ _23 ]) [7 MEM[(const struct PyObject *)_23].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 479 476 480 80 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 167 [ _182 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 480 479 481 80 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 376)
;;  succ:       81 [100.0% (guessed)]  count:519844448 (estimated locally) (FALLTHRU)
;;              56 [0.0% (guessed)]  count:208021 (estimated locally)

;; basic block 81, loop depth 0, count 519906852 (estimated locally), maybe hot
;;  prev block 80, next block 82, flags: (RTL)
;;  pred:       80 [100.0% (guessed)]  count:519844448 (estimated locally) (FALLTHRU)
(note 481 480 482 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 483 81 (parallel [
            (set (reg:DI 168 [ _184 ])
                (plus:DI (reg:DI 167 [ _182 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 483 482 485 81 (set (mem:DI (reg/f:DI 86 [ _23 ]) [7 MEM[(struct PyObject *)_23].ob_refcnt+0 S8 A64])
        (reg:DI 168 [ _184 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 485 483 486 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 168 [ _184 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 486 485 487 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 490)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 490)
;;  succ:       83 [67.0% (guessed)]  count:348337592 (estimated locally)
;;              82 [33.0% (guessed)]  count:171569260 (estimated locally) (FALLTHRU)

;; basic block 82, loop depth 0, count 171569261 (estimated locally), maybe hot
;;  prev block 81, next block 83, flags: (RTL)
;;  pred:       81 [33.0% (guessed)]  count:171569260 (estimated locally) (FALLTHRU)
(note 487 486 488 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 489 82 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _23 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 489 488 490 82 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -24 [0xffffffffffffffe8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       83 [always]  count:171569261 (estimated locally) (FALLTHRU)

;; basic block 83, loop depth 0, count 742724075 (estimated locally), maybe hot
;;  prev block 82, next block 84, flags: (RTL)
;;  pred:       79 [30.0% (guessed)]  count:222879627 (estimated locally) (FALLTHRU)
;;              82 [always]  count:171569261 (estimated locally) (FALLTHRU)
;;              81 [67.0% (guessed)]  count:348337592 (estimated locally)
(code_label 490 489 491 83 1030 (nil) [1 uses])
(note 491 490 492 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 83 (set (reg/f:DI 164 [ _179 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [31 D.279938.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 493 492 496 83 (set (reg:DI 165 [ _180 ])
        (mem:DI (reg/f:DI 164 [ _179 ]) [7 MEM[(const struct PyObject *)_179].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 496 493 497 83 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 165 [ _180 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 497 496 498 83 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 394)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 394)
;;  succ:       84 [100.0% (guessed)]  count:742426986 (estimated locally) (FALLTHRU)
;;              60 [0.0% (guessed)]  count:297089 (estimated locally)

;; basic block 84, loop depth 0, count 742426986 (estimated locally), maybe hot
;;  prev block 83, next block 85, flags: (RTL)
;;  pred:       83 [100.0% (guessed)]  count:742426986 (estimated locally) (FALLTHRU)
(note 498 497 499 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 499 498 500 84 (parallel [
            (set (reg:DI 166 [ _181 ])
                (plus:DI (reg:DI 165 [ _180 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 500 499 501 84 (set (mem:DI (reg/f:DI 164 [ _179 ]) [7 _179->ob_refcnt+0 S8 A64])
        (reg:DI 166 [ _181 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 501 500 502 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 166 [ _181 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 502 501 503 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 506)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 506)
;;  succ:       86 [67.0% (guessed)]  count:497426082 (estimated locally)
;;              85 [33.0% (guessed)]  count:245000904 (estimated locally) (FALLTHRU)

;; basic block 85, loop depth 0, count 245000906 (estimated locally), maybe hot
;;  prev block 84, next block 86, flags: (RTL)
;;  pred:       84 [33.0% (guessed)]  count:245000904 (estimated locally) (FALLTHRU)
(note 503 502 504 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 505 85 (set (reg:DI 5 di)
        (reg/f:DI 164 [ _179 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 505 504 506 85 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -44 [0xffffffffffffffd4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       86 [always]  count:245000906 (estimated locally) (FALLTHRU)

;; basic block 86, loop depth 0, count 742426986 (estimated locally), maybe hot
;;  prev block 85, next block 87, flags: (RTL)
;;  pred:       84 [67.0% (guessed)]  count:497426082 (estimated locally)
;;              85 [always]  count:245000906 (estimated locally) (FALLTHRU)
(code_label 506 505 507 86 1032 (nil) [1 uses])
(note 507 506 508 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 86 (set (reg/f:DI 161 [ _176 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -184 [0xffffffffffffff48])) [31 D.279681.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 509 508 512 86 (set (reg:DI 162 [ _177 ])
        (mem:DI (reg/f:DI 161 [ _176 ]) [7 MEM[(const struct PyObject *)_176].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 512 509 513 86 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 162 [ _177 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 513 512 514 86 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 394)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 394)
;;  succ:       87 [100.0% (guessed)]  count:742130016 (estimated locally) (FALLTHRU)
;;              60 [0.0% (guessed)]  count:296970 (estimated locally)

;; basic block 87, loop depth 0, count 742130017 (estimated locally), maybe hot
;;  prev block 86, next block 88, flags: (RTL)
;;  pred:       86 [100.0% (guessed)]  count:742130016 (estimated locally) (FALLTHRU)
(note 514 513 515 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 515 514 516 87 (parallel [
            (set (reg:DI 163 [ _178 ])
                (plus:DI (reg:DI 162 [ _177 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 516 515 517 87 (set (mem:DI (reg/f:DI 161 [ _176 ]) [7 _176->ob_refcnt+0 S8 A64])
        (reg:DI 163 [ _178 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 517 516 518 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 163 [ _178 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 518 517 519 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 522)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 522)
;;  succ:       89 [67.0% (guessed)]  count:497227113 (estimated locally)
;;              88 [33.0% (guessed)]  count:244902904 (estimated locally) (FALLTHRU)

;; basic block 88, loop depth 0, count 244902902 (estimated locally), maybe hot
;;  prev block 87, next block 89, flags: (RTL)
;;  pred:       87 [33.0% (guessed)]  count:244902904 (estimated locally) (FALLTHRU)
(note 519 518 520 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 520 519 521 88 (set (reg:DI 5 di)
        (reg/f:DI 161 [ _176 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 521 520 522 88 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -43 [0xffffffffffffffd5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       89 [always]  count:244902902 (estimated locally) (FALLTHRU)

;; basic block 89, loop depth 0, count 742130017 (estimated locally), maybe hot
;;  prev block 88, next block 90, flags: (RTL)
;;  pred:       87 [67.0% (guessed)]  count:497227113 (estimated locally)
;;              88 [always]  count:244902902 (estimated locally) (FALLTHRU)
(code_label 522 521 523 89 1033 (nil) [1 uses])
(note 523 522 524 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 525 89 (set (mem/f:DI (reg/v/f:DI 184 [ data ]) [43 data_6(D)->convertible+0 S8 A64])
        (reg/v/f:DI 82 [ storage ])) "src/ChineseCheckersWrapper.cpp":83:27 74 {*movdi_internal}
     (nil))
(insn 525 524 526 89 (set (reg/f:DI 83 [ _9 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -192 [0xffffffffffffff40])) [31 handle.m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 526 525 527 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ _9 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 527 526 531 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 531)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 531)
;;  succ:       99 [30.0% (guessed)]  count:222639003 (estimated locally) (FALLTHRU)
;;              90 [70.0% (guessed)]  count:519491014 (estimated locally)

;; basic block 90, loop depth 0, count 519491016 (estimated locally), maybe hot
;;  prev block 89, next block 91, flags: (RTL)
;;  pred:       89 [70.0% (guessed)]  count:519491014 (estimated locally)
(code_label 531 527 532 90 1034 (nil) [1 uses])
(note 532 531 533 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 533 532 536 90 (set (reg:DI 159 [ _173 ])
        (mem:DI (reg/f:DI 83 [ _9 ]) [7 MEM[(const struct PyObject *)_9].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 536 533 537 90 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 159 [ _173 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 537 536 538 90 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 376)
;;  succ:       91 [100.0% (guessed)]  count:519283220 (estimated locally) (FALLTHRU)
;;              56 [0.0% (guessed)]  count:207796 (estimated locally)

;; basic block 91, loop depth 0, count 519345557 (estimated locally), maybe hot
;;  prev block 90, next block 92, flags: (RTL)
;;  pred:       90 [100.0% (guessed)]  count:519283220 (estimated locally) (FALLTHRU)
(note 538 537 539 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 539 538 540 91 (parallel [
            (set (reg:DI 160 [ _175 ])
                (plus:DI (reg:DI 159 [ _173 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 540 539 542 91 (set (mem:DI (reg/f:DI 83 [ _9 ]) [7 MEM[(struct PyObject *)_9].ob_refcnt+0 S8 A64])
        (reg:DI 160 [ _175 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 542 540 543 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 160 [ _175 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 543 542 544 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 577)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 577)
;;  succ:       99 [67.0% (guessed)]  count:347961524 (estimated locally)
;;              92 [33.0% (guessed)]  count:171384033 (estimated locally) (FALLTHRU)

;; basic block 92, loop depth 0, count 171384030 (estimated locally), maybe hot
;;  prev block 91, next block 93, flags: (RTL)
;;  pred:       91 [33.0% (guessed)]  count:171384033 (estimated locally) (FALLTHRU)
(note 544 543 545 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 545 544 546 92 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _9 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 546 545 613 92 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -23 [0xffffffffffffffe9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       99 [always]  count:171384030 (estimated locally) (FALLTHRU)

;; basic block 93, loop depth 0, count 0 (precise), probably never executed
;;  prev block 92, next block 94, flags: (RTL)
;;  pred:       6 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 613 546 616 93 1044 (nil) [1 uses])
(note 616 613 614 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 614 616 551 93 (set (reg:DI 248)
        (reg:DI 0 ax)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
;;  succ:       94 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 94, loop depth 0, count 0 (precise), probably never executed
;;  prev block 93, next block 95, flags: (RTL)
;;  pred:       93 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              72 [always]  count:0 (precise) (FALLTHRU)
(code_label 551 614 552 94 1026 (nil) [0 uses])
(note 552 551 553 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 553 552 554 94 (set (reg:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -168 [0xffffffffffffff58])) [31 MEM[(struct handle *)&D.279938 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 554 553 555 94 (set (reg:DI 5 di)
        (reg:DI 250)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 555 554 556 94 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -27 [0xffffffffffffffe5])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 556 555 557 94 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 557 556 558 94 (set (reg:DI 5 di)
        (reg:DI 251)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 558 557 559 94 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 559 558 607 94 (set (reg:DI 252)
        (reg:DI 248)) 74 {*movdi_internal}
     (nil))
;;  succ:       96 [always]  count:0 (precise) (FALLTHRU)

;; basic block 95, loop depth 0, count 0 (precise), probably never executed
;;  prev block 94, next block 96, flags: (RTL)
;;  pred:       5 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 607 559 612 95 1043 (nil) [1 uses])
(note 612 607 608 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 608 612 561 95 (set (reg:DI 252)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       96 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 96, loop depth 0, count 0 (precise), probably never executed
;;  prev block 95, next block 97, flags: (RTL)
;;  pred:       95 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              94 [always]  count:0 (precise) (FALLTHRU)
(code_label 561 608 562 96 1037 (nil) [0 uses])
(note 562 561 563 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 563 562 564 96 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 564 563 565 96 (set (reg:DI 5 di)
        (reg:DI 254)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 565 564 566 96 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 566 565 601 96 (set (reg:DI 255)
        (reg:DI 252)) 74 {*movdi_internal}
     (nil))
;;  succ:       98 [always]  count:0 (precise) (FALLTHRU)

;; basic block 97, loop depth 0, count 0 (precise), probably never executed
;;  prev block 96, next block 98, flags: (RTL)
;;  pred:       4 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 601 566 606 97 1042 (nil) [1 uses])
(note 606 601 602 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 602 606 568 97 (set (reg:DI 255)
        (reg:DI 0 ax)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
;;  succ:       98 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 98, loop depth 0, count 0 (precise), probably never executed
;;  prev block 97, next block 99, flags: (RTL)
;;  pred:       97 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              96 [always]  count:0 (precise) (FALLTHRU)
(code_label 568 602 569 98 1038 (nil) [0 uses])
(note 569 568 570 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 571 98 (set (reg:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -192 [0xffffffffffffff40])) [31 handle.m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 571 570 572 98 (set (reg:DI 5 di)
        (reg:DI 257)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 572 571 573 98 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -28 [0xffffffffffffffe4])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 573 572 574 98 (set (reg/f:DI 174 [ D.330724 ])
        (reg:DI 255)) 74 {*movdi_internal}
     (nil))
(insn 574 573 575 98 (set (reg:DI 5 di)
        (reg/f:DI 174 [ D.330724 ])) 74 {*movdi_internal}
     (nil))
(call_insn 575 574 577 98 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 99, loop depth 0, count 741922222 (estimated locally), maybe hot
;;  prev block 98, next block 100, flags: (RTL)
;;  pred:       92 [always]  count:171384030 (estimated locally) (FALLTHRU)
;;              89 [30.0% (guessed)]  count:222639003 (estimated locally) (FALLTHRU)
;;              91 [67.0% (guessed)]  count:347961524 (estimated locally)
(code_label 577 575 584 99 987 (nil) [1 uses])
(note 584 577 578 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 578 584 579 99 (set (reg/f:DI 258)
        (const_int 40 [0x28])) "src/ChineseCheckersWrapper.cpp":84:5 74 {*movdi_internal}
     (nil))
(insn 579 578 580 99 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.330725+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 258) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "src/ChineseCheckersWrapper.cpp":84:5 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 580 579 599 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 583)
            (pc))) "src/ChineseCheckersWrapper.cpp":84:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 583)
;;  succ:       101 [100.0% (guessed)]  count:741625454 (estimated locally)
;;              100 [0.0% (guessed)]  count:296768 (estimated locally) (FALLTHRU)

;; basic block 100, loop depth 0, count 296768 (estimated locally)
;;  prev block 99, next block 101, flags: (RTL)
;;  pred:       99 [0.0% (guessed)]  count:296768 (estimated locally) (FALLTHRU)
(note 599 580 581 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(call_insn 581 599 583 100 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":84:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 101, loop depth 0, count 741625454 (estimated locally), maybe hot
;;  prev block 100, next block 1, flags: (RTL)
;;  pred:       99 [100.0% (guessed)]  count:741625454 (estimated locally)
(code_label 583 581 600 101 1039 (nil) [1 uses])
(note 600 583 0 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:741625454 (estimated locally) (FALLTHRU)


;; Function std::_Destroy_aux<false>::__destroy<std::vector<Color>*> (_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5ColorSaIS3_EEEEvT_S7_, funcdef_no=12929, decl_uid=299459, cgraph_uid=4841, symbol_order=5766)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:118111600 (estimated locally) (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 86 [ __first ])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/11/bits/stl_construct.h":160:2 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 87 [ __last ])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/11/bits/stl_construct.h":160:2 74 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 86 [ __first ])
            (reg/v/f:DI 87 [ __last ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 8 7 32 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 37)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 37)
;;  succ:       3 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
;;              7 [11.0% (guessed)]  count:12992276 (estimated locally)

;; basic block 3, loop depth 1, count 955630225 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       6 [always]  count:850510901 (estimated locally) (FALLTHRU)
;;              2 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
(code_label 32 8 9 3 1094 (nil) [0 uses])
(note 9 32 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 82 [ _8 ])
        (mem/f:DI (reg/v/f:DI 86 [ __first ]) [118 MEM[(Color * *)__first_12]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _8 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 25)
;;  succ:       4 [53.5% (guessed)]  count:510975480 (estimated locally) (FALLTHRU)
;;              5 [46.5% (guessed)]  count:444654745 (estimated locally)

;; basic block 4, loop depth 1, count 510975480 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [53.5% (guessed)]  count:510975480 (estimated locally) (FALLTHRU)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 89)
        (mem/f:DI (plus:DI (reg/v/f:DI 86 [ __first ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__first_12 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg:DI 88)
                (minus:DI (reg/f:DI 89)
                    (reg/f:DI 82 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 86 [ __first ])
                    (const_int 16 [0x10])) [118 MEM[(Color * *)__first_12 + 16B]+0 S8 A64])
            (reg/f:DI 82 [ _8 ]))
        (nil)))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (reg:DI 88)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _8 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 4 (parallel [
            (set (reg/v/f:DI 86 [ __first ])
                (plus:DI (reg/v/f:DI 86 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ __last ])
            (reg/v/f:DI 86 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 21 20 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 30)
;;  succ:       6 [89.0% (guessed)]  count:454768178 (estimated locally)
;;              7 [11.0% (guessed)]  count:56207302 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 1, count 444654745 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3 [46.5% (guessed)]  count:444654745 (estimated locally)
(code_label 25 21 26 5 1092 (nil) [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (reg/v/f:DI 86 [ __first ])
                (plus:DI (reg/v/f:DI 86 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ __last ])
            (reg/v/f:DI 86 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 37)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 37)
;;  succ:       6 [89.0% (guessed)]  count:395742723 (estimated locally) (FALLTHRU)
;;              7 [11.0% (guessed)]  count:48912022 (estimated locally)

;; basic block 6, loop depth 1, count 850510901 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [89.0% (guessed)]  count:395742723 (estimated locally) (FALLTHRU)
;;              4 [89.0% (guessed)]  count:454768178 (estimated locally)
(code_label 30 29 31 6 1093 (nil) [1 uses])
(note 31 30 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       3 [always]  count:850510901 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       5 [11.0% (guessed)]  count:48912022 (estimated locally)
;;              2 [11.0% (guessed)]  count:12992276 (estimated locally)
;;              4 [11.0% (guessed)]  count:56207302 (estimated locally) (FALLTHRU)
(code_label 37 31 38 7 1090 (nil) [2 uses])
(note 38 37 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:118111600 (estimated locally) (FALLTHRU)


;; Function iterable_converter::construct<std::vector<std::vector<Color> > > (_ZN18iterable_converter9constructISt6vectorIS1_I5ColorSaIS2_EESaIS4_EEEEvP7_objectPN5boost6python9converter30rvalue_from_python_stage1_dataE, funcdef_no=11886, decl_uid=269473, cgraph_uid=3800, symbol_order=4706)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 11 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 183 [ object ])
        (reg:DI 5 di [ object ])) "src/ChineseCheckersWrapper.cpp":59:15 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 184 [ data ])
        (reg:DI 4 si [ data ])) "src/ChineseCheckersWrapper.cpp":59:15 74 {*movdi_internal}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 6 2 (set (reg/f:DI 185)
        (const_int 40 [0x28])) "src/ChineseCheckersWrapper.cpp":59:15 74 {*movdi_internal}
     (nil))
(insn 6 5 13 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.330871+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 185) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":59:15 1159 {stack_protect_set_1_di}
     (nil))
(insn 13 6 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 183 [ object ])
            (const_int 0 [0]))) "/usr/include/boost/python/errors.hpp":44:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "/usr/include/boost/python/errors.hpp":44:5 806 {*jcc}
     (int_list:REG_BR_PROB 886588628 (nil))
 -> 17)
;;  succ:       3 [17.4% (guessed)]  count:187153200 (estimated locally) (FALLTHRU)
;;              4 [82.6% (guessed)]  count:886588624 (estimated locally)

;; basic block 3, loop depth 0, count 187153199 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [17.4% (guessed)]  count:187153200 (estimated locally) (FALLTHRU)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 16 15 17 3 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>) [0 throw_error_already_set S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/errors.hpp":45:32 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python23throw_error_already_setEv") [flags 0x41]  <function_decl 0x7f1a3afffd00 throw_error_already_set>)
        (nil))
    (nil))
;;  succ:       4 [always]  count:187153199 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [82.6% (guessed)]  count:886588624 (estimated locally)
;;              3 [always]  count:187153199 (estimated locally) (FALLTHRU)
(code_label 17 16 18 4 1097 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (parallel [
            (set (mem:DI (reg/v/f:DI 183 [ object ]) [7 *object_5(D).ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/v/f:DI 183 [ object ]) [7 *object_5(D).ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 20 19 21 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -192 [0xffffffffffffff40])) [31 handle.m_p+0 S8 A128])
        (reg/v/f:DI 183 [ object ])) "/usr/include/boost/python/handle.hpp":75:11 74 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/v/f:DI 82 [ storage ])
                (plus:DI (reg/v/f:DI 184 [ data ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":71:15 210 {*adddi_1}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:DI 187)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":81:28 210 {*adddi_1}
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) "src/ChineseCheckersWrapper.cpp":81:28 210 {*adddi_1}
     (nil))
(insn 24 23 25 4 (set (reg:DI 4 si)
        (reg:DI 187)) "src/ChineseCheckersWrapper.cpp":81:28 74 {*movdi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg:DI 188)) "src/ChineseCheckersWrapper.cpp":81:28 74 {*movdi_internal}
     (nil))
(call_insn 26 25 27 4 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python3api6objectC1ERKNS0_6handleI7_objectEE") [flags 0x41]  <function_decl 0x7f1a39cd7500 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":81:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python3api6objectC1ERKNS0_6handleI7_objectEE") [flags 0x41]  <function_decl 0x7f1a39cd7500 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       97 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":34:9 210 {*adddi_1}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":34:9 210 {*adddi_1}
     (nil))
(insn 30 29 31 5 (set (reg:DI 4 si)
        (reg:DI 189)) "/usr/include/boost/python/stl_iterator.hpp":34:9 74 {*movdi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:DI 5 di)
        (reg:DI 190)) "/usr/include/boost/python/stl_iterator.hpp":34:9 74 {*movdi_internal}
     (nil))
(call_insn 32 31 33 5 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1ERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3775bb00 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/stl_iterator.hpp":34:9 813 {*call}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1ERKNS0_3api6objectE") [flags 0x41]  <function_decl 0x7f1a3775bb00 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       6 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              95 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 6, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":28:9 210 {*adddi_1}
     (nil))
(insn 35 34 36 6 (set (reg:DI 5 di)
        (reg:DI 191)) "/usr/include/boost/python/stl_iterator.hpp":28:9 74 {*movdi_internal}
     (nil))
(call_insn 36 35 37 6 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1Ev") [flags 0x41]  <function_decl 0x7f1a3775bd00 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/stl_iterator.hpp":28:9 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_implC1Ev") [flags 0x41]  <function_decl 0x7f1a3775bd00 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              93 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 7, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg:V2DI 192)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 39 38 40 7 (set (mem:V2DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 16 [0x10])) [115 MEM <vector(2) long unsigned int> [(struct vector * *)data_6(D) + 16B]+0 S16 A64])
        (reg:V2DI 192)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 40 39 41 7 (set (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 32 [0x20])) [115 MEM[(struct _Vector_impl_data *)data_6(D) + 16B]._M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 41 40 42 7 (set (reg/f:DI 91 [ _61 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -160 [0xffffffffffffff60])) [31 MEM[(const struct object_base &)&D.280367].m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":405:32 74 {*movdi_internal}
     (nil))
(insn 42 41 43 7 (parallel [
            (set (mem:DI (reg/f:DI 91 [ _61 ]) [7 *_61.ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 91 [ _61 ]) [7 *_61.ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 43 42 44 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -128 [0xffffffffffffff80])) [31 MEM[(struct object_base *)&D.330776].m_ptr+0 S8 A128])
        (reg/f:DI 91 [ _61 ])) "/usr/include/boost/python/object_core.hpp":405:7 74 {*movdi_internal}
     (nil))
(insn 44 43 45 7 (set (reg/f:DI 94 [ _64 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -152 [0xffffffffffffff68])) [31 MEM[(const struct handle &)&D.280367 + 8].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":105:33 74 {*movdi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ _64 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":557:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "/usr/include/python3.10/object.h":557:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 49)
;;  succ:       8 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
;;              9 [30.0% (guessed)]  count:322122544 (estimated locally)

;; basic block 8, loop depth 0, count 751619278 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (parallel [
            (set (mem:DI (reg/f:DI 94 [ _64 ]) [7 MEM[(struct PyObject *)_64].ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 94 [ _64 ]) [7 MEM[(struct PyObject *)_64].ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
;;  succ:       9 [always]  count:751619278 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7 [30.0% (guessed)]  count:322122544 (estimated locally)
;;              8 [always]  count:751619278 (estimated locally) (FALLTHRU)
(code_label 49 48 50 9 1098 (nil) [1 uses])
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -120 [0xffffffffffffff88])) [31 MEM[(struct handle *)&D.330776 + 8B].m_p+0 S8 A64])
        (reg/f:DI 94 [ _64 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
(insn 52 51 53 9 (set (reg/f:DI 97 [ _67 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [31 MEM[(const struct object_base &)&D.280350].m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":405:32 74 {*movdi_internal}
     (nil))
(insn 53 52 54 9 (parallel [
            (set (mem:DI (reg/f:DI 97 [ _67 ]) [7 *_67.ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 97 [ _67 ]) [7 *_67.ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
(insn 54 53 55 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -144 [0xffffffffffffff70])) [31 MEM[(struct object_base *)&D.330775].m_ptr+0 S8 A128])
        (reg/f:DI 97 [ _67 ])) "/usr/include/boost/python/object_core.hpp":405:7 74 {*movdi_internal}
     (nil))
(insn 55 54 56 9 (set (reg/f:DI 100 [ _70 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -168 [0xffffffffffffff58])) [31 MEM[(const struct handle &)&D.280350 + 8].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":105:33 74 {*movdi_internal}
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ _70 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":557:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "/usr/include/python3.10/object.h":557:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 60)
;;  succ:       10 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
;;              11 [30.0% (guessed)]  count:322122544 (estimated locally)

;; basic block 10, loop depth 0, count 751619278 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [70.0% (guessed)]  count:751619280 (estimated locally) (FALLTHRU)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (parallel [
            (set (mem:DI (reg/f:DI 100 [ _70 ]) [7 MEM[(struct PyObject *)_70].ob_refcnt+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 100 [ _70 ]) [7 MEM[(struct PyObject *)_70].ob_refcnt+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (nil))
;;  succ:       11 [always]  count:751619278 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9 [30.0% (guessed)]  count:322122544 (estimated locally)
;;              10 [always]  count:751619278 (estimated locally) (FALLTHRU)
(code_label 60 59 61 11 1099 (nil) [1 uses])
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 65 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -136 [0xffffffffffffff78])) [31 MEM[(struct handle *)&D.330775 + 8B].m_p+0 S8 A64])
        (reg/f:DI 100 [ _70 ])) "/usr/include/boost/python/handle.hpp":105:11 74 {*movdi_internal}
     (nil))
;;  succ:       42 [always]  count:1073741824 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 1, count 6023273140 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       43 [89.0% (guessed)]  count:6023273134 (estimated locally) (FALLTHRU)
(note 65 62 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":48:51 210 {*adddi_1}
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg:DI 193)) "/usr/include/boost/python/stl_iterator.hpp":48:51 74 {*movdi_internal}
     (nil))
(call_insn 68 67 594 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl7currentEv") [flags 0x41]  <function_decl 0x7f1a3775ba00 current>) [0 current S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/stl_iterator.hpp":48:51 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl7currentEv") [flags 0x41]  <function_decl 0x7f1a3775ba00 current>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       48 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [always (adjusted)]  count:6023273140 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 1, count 6023273140 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [always (adjusted)]  count:6023273140 (estimated locally) (FALLTHRU)
(note 594 68 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 594 71 13 (set (reg/f:DI 120 [ _101 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/stl_iterator.hpp":48:51 74 {*movdi_internal}
     (nil))
(insn 71 69 72 13 (set (reg/f:DI 121 [ _102 ])
        (mem/f:DI (reg/f:DI 120 [ _101 ]) [31 _101->m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":202:12 74 {*movdi_internal}
     (nil))
(insn 72 71 73 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [31 MEM[(struct extract_rvalue *)&D.330796].m_source+0 S8 A128])
        (reg/f:DI 121 [ _102 ])) "/usr/include/boost/python/extract.hpp":162:9 74 {*movdi_internal}
     (nil))
(insn 73 72 74 13 (set (reg/f:DI 194)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorI5ColorSaIS5_EEE10convertersE")  <var_decl 0x7f1a35a8f360 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/extract.hpp":164:38 74 {*movdi_internal}
     (nil))
(insn 74 73 75 13 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 194) [42 converters+0 S8 A64])) "/usr/include/boost/python/extract.hpp":164:38 74 {*movdi_internal}
     (nil))
(insn 75 74 76 13 (set (reg:DI 5 di)
        (reg/f:DI 121 [ _102 ])) "/usr/include/boost/python/extract.hpp":164:38 74 {*movdi_internal}
     (nil))
(call_insn 76 75 595 13 (set (reg:TI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage1EP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235f00 rvalue_from_python_stage1>) [0 rvalue_from_python_stage1 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/extract.hpp":164:38 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage1EP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235f00 rvalue_from_python_stage1>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       48 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 [always (adjusted)]  count:6023273140 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 1, count 6023273140 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [always (adjusted)]  count:6023273140 (estimated locally) (FALLTHRU)
(note 595 76 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 595 79 14 (set (reg:TI 182 [ D.330795 ])
        (reg:TI 0 ax)) "/usr/include/boost/python/extract.hpp":164:38 73 {*movti_internal}
     (nil))
(insn 79 77 80 14 (set (mem/c:TI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [237 MEM[(struct rvalue_from_python_data *)&D.330796 + 16B].D.298234.stage1+0 S16 A128])
        (reg:TI 182 [ D.330795 ])) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":122:5 73 {*movti_internal}
     (nil))
(insn 80 79 81 14 (clobber (reg:TI 182 [ D.330795 ])) "/usr/include/boost/python/extract.hpp":164:38 -1
     (nil))
(insn 81 80 82 14 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
(insn 82 81 83 14 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg:DI 195)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
(insn 83 82 84 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -64 [0xffffffffffffffc0])) [43 MEM[(const struct extract_rvalue *)&D.330796].m_data.D.298234.stage1.convertible+0 S8 A128])
            (reg:DI 196))) "/usr/include/boost/python/extract.hpp":180:15 12 {*cmpdi_1}
     (nil))
(jump_insn 84 83 85 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 589)
            (pc))) "/usr/include/boost/python/extract.hpp":180:15 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 589)
;;  succ:       17 [46.5% (guessed)]  count:2802628999 (estimated locally)
;;              15 [53.5% (guessed)]  count:3220644141 (estimated locally) (FALLTHRU)

;; basic block 15, loop depth 1, count 3220644140 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [53.5% (guessed)]  count:3220644141 (estimated locally) (FALLTHRU)
(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 15 (set (reg/f:DI 197)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorI5ColorSaIS5_EEE10convertersE")  <var_decl 0x7f1a35a8f360 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 87 86 88 15 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":184:43 210 {*adddi_1}
     (nil))
(insn 88 87 89 15 (parallel [
            (set (reg:DI 199)
                (plus:DI (reg:DI 198)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":184:43 210 {*adddi_1}
     (nil))
(insn 89 88 90 15 (set (reg:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [31 MEM[(const struct extract_rvalue *)&D.330796].m_source+0 S8 A128])) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 90 89 91 15 (set (reg:DI 1 dx)
        (mem/f/c:DI (reg/f:DI 197) [42 converters+0 S8 A64])) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 91 90 92 15 (set (reg:DI 4 si)
        (reg:DI 199)) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(insn 92 91 93 15 (set (reg:DI 5 di)
        (reg:DI 200)) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
(call_insn 93 92 596 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage2EP7_objectRNS1_30rvalue_from_python_stage1_dataERKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a269000 rvalue_from_python_stage2>) [0 rvalue_from_python_stage2 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/extract.hpp":184:43 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 18 [0x12])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage2EP7_objectRNS1_30rvalue_from_python_stage1_dataERKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a269000 rvalue_from_python_stage2>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 [always (adjusted)]  count:3220644140 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 1, count 3220644140 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [always (adjusted)]  count:3220644140 (estimated locally) (FALLTHRU)
(note 596 93 94 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 94 596 589 16 (set (reg/f:DI 126 [ _107 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/extract.hpp":184:43 74 {*movdi_internal}
     (nil))
;;  succ:       18 [always]  count:3220644140 (estimated locally) (FALLTHRU)

;; basic block 17, loop depth 1, count 2802628999 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       14 [46.5% (guessed)]  count:2802628999 (estimated locally)
(code_label 589 94 588 17 1149 (nil) [1 uses])
(note 588 589 7 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 7 588 8 17 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
(insn 8 7 95 17 (parallel [
            (set (reg/f:DI 126 [ _107 ])
                (plus:DI (reg:DI 186)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/extract.hpp":180:15 210 {*adddi_1}
     (nil))
;;  succ:       18 [always]  count:2802628999 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 1, count 6023273140 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [always]  count:2802628999 (estimated locally) (FALLTHRU)
;;              16 [always]  count:3220644140 (estimated locally) (FALLTHRU)
(code_label 95 8 96 18 1101 (nil) [0 uses])
(note 96 95 97 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 18 (set (reg/f:DI 127 [ _110 ])
        (mem/f:DI (plus:DI (reg/f:DI 126 [ _107 ])
                (const_int 8 [0x8])) [118 *iftmp.45_108.D.261450._M_impl.D.260795._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:40 74 {*movdi_internal}
     (nil))
(insn 98 97 99 18 (set (reg/f:DI 128 [ _111 ])
        (mem/f:DI (reg/f:DI 126 [ _107 ]) [118 *iftmp.45_108.D.261450._M_impl.D.260795._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:66 74 {*movdi_internal}
     (nil))
(insn 99 98 100 18 (parallel [
            (set (reg:DI 129 [ _112 ])
                (minus:DI (reg/f:DI 127 [ _110 ])
                    (reg/f:DI 128 [ _111 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (nil))
(insn 100 99 101 18 (set (reg:V2DI 201)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 101 100 102 18 (set (mem/c:V2DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [118 MEM <vector(2) long unsigned int> [(Color * *)&D.330788]+0 S16 A128])
        (reg:V2DI 201)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 102 101 103 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [118 MEM[(struct _Vector_impl_data *)&D.330788]._M_end_of_storage+0 S8 A128])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 103 102 104 18 (set (reg:DI 176 [ _350 ])
        (reg:DI 129 [ _112 ])) 74 {*movdi_internal}
     (nil))
(insn 104 103 105 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 129 [ _112 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 105 104 106 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 593)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 593)
;;  succ:       19 [54.7% (guessed)]  count:3292923430 (estimated locally) (FALLTHRU)
;;              25 [45.3% (guessed)]  count:2730349710 (estimated locally)

;; basic block 19, loop depth 1, count 3292923432 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [54.7% (guessed)]  count:3292923430 (estimated locally) (FALLTHRU)
(note 106 105 109 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 109 106 110 19 (set (reg:DI 202)
        (const_int 9223372036854775804 [0x7ffffffffffffffc])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 110 109 111 19 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 176 [ _350 ])
            (reg:DI 202))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 111 110 112 19 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 124)
;;  succ:       20 [10.0% (guessed)]  count:329292348 (estimated locally) (FALLTHRU)
;;              23 [90.0% (guessed)]  count:2963631084 (estimated locally)

;; basic block 20, loop depth 0, count 329292346 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [10.0% (guessed)]  count:329292348 (estimated locally) (FALLTHRU)
(note 112 111 115 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 115 112 116 20 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 129 [ _112 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 116 115 117 20 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 120)
;;  succ:       21 [50.0% (guessed)]  count:164646173 (estimated locally) (FALLTHRU)
;;              22 [50.0% (guessed)]  count:164646173 (estimated locally)

;; basic block 21, loop depth 0, count 164646176 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [50.0% (guessed)]  count:164646173 (estimated locally) (FALLTHRU)
(note 117 116 118 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(call_insn 118 117 120 21 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 18 [0x12])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 22, loop depth 0, count 164646176 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       20 [50.0% (guessed)]  count:164646173 (estimated locally)
(code_label 120 118 121 22 1104 (nil) [1 uses])
(note 121 120 122 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(call_insn 122 121 124 22 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 18 [0x12])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 23, loop depth 1, count 2963631079 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       19 [90.0% (guessed)]  count:2963631084 (estimated locally)
(code_label 124 122 125 23 1103 (nil) [1 uses])
(note 125 124 126 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 23 (set (reg:DI 5 di)
        (reg:DI 176 [ _350 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 127 126 597 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 18 [0x12])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              24 [always (adjusted)]  count:2963631079 (estimated locally) (FALLTHRU)

;; basic block 24, loop depth 1, count 2963631079 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 [always (adjusted)]  count:2963631079 (estimated locally) (FALLTHRU)
(note 597 127 128 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 128 597 129 24 (set (reg/f:DI 203)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 203)
        (nil)))
(insn 129 128 131 24 (set (reg/f:DI 131 [ iftmp.47_124 ])
        (reg/f:DI 203)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 131 129 132 24 (set (reg/f:DI 127 [ _110 ])
        (mem/f:DI (plus:DI (reg/f:DI 126 [ _107 ])
                (const_int 8 [0x8])) [118 MEM[(const Color * const &)iftmp.45_108 + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 132 131 133 24 (set (reg/f:DI 128 [ _111 ])
        (mem/f:DI (reg/f:DI 126 [ _107 ]) [118 MEM[(const Color * const &)iftmp.45_108]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 133 132 593 24 (parallel [
            (set (reg:DI 175 [ prephitmp_346 ])
                (minus:DI (reg/f:DI 127 [ _110 ])
                    (reg/f:DI 128 [ _111 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":429:34 283 {*subdi_1}
     (nil))
;;  succ:       26 [always]  count:2963631079 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 1, count 2730349710 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       18 [45.3% (guessed)]  count:2730349710 (estimated locally)
(code_label 593 133 592 25 1150 (nil) [1 uses])
(note 592 593 9 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 9 592 10 25 (set (reg:DI 175 [ prephitmp_346 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 10 9 134 25 (set (reg/f:DI 131 [ iftmp.47_124 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       26 [always]  count:2730349710 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 1, count 5693980800 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [always]  count:2730349710 (estimated locally) (FALLTHRU)
;;              24 [always]  count:2963631079 (estimated locally) (FALLTHRU)
(code_label 134 10 135 26 1102 (nil) [0 uses])
(note 135 134 136 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [118 MEM[(struct _Vector_base *)&D.330788]._M_impl.D.260795._M_start+0 S8 A128])
        (reg/f:DI 131 [ iftmp.47_124 ])) "/usr/include/c++/11/bits/stl_vector.h":361:25 74 {*movdi_internal}
     (nil))
(insn 137 136 138 26 (parallel [
            (set (reg/f:DI 132 [ _126 ])
                (plus:DI (reg/f:DI 131 [ iftmp.47_124 ])
                    (reg:DI 176 [ _350 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 138 137 139 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [118 MEM[(struct _Vector_base *)&D.330788]._M_impl.D.260795._M_end_of_storage+0 S8 A128])
        (reg/f:DI 132 [ _126 ])) "/usr/include/c++/11/bits/stl_vector.h":363:34 74 {*movdi_internal}
     (nil))
(insn 139 138 140 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 128 [ _111 ])
            (reg/f:DI 127 [ _110 ]))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 12 {*cmpdi_1}
     (nil))
(jump_insn 140 139 141 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 146)
;;  succ:       27 [53.5% (guessed)]  count:3044571527 (estimated locally) (FALLTHRU)
;;              28 [46.5% (guessed)]  count:2649409273 (estimated locally)

;; basic block 27, loop depth 1, count 3044571528 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [53.5% (guessed)]  count:3044571527 (estimated locally) (FALLTHRU)
(note 141 140 142 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 27 (set (reg:DI 1 dx)
        (reg:DI 175 [ prephitmp_346 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 143 142 144 27 (set (reg:DI 4 si)
        (reg/f:DI 128 [ _111 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 144 143 145 27 (set (reg:DI 5 di)
        (reg/f:DI 131 [ iftmp.47_124 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(call_insn 145 144 146 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_algobase.h":431:23 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       28 [always]  count:3044571528 (estimated locally) (FALLTHRU)

;; basic block 28, loop depth 1, count 5693980800 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       26 [46.5% (guessed)]  count:2649409273 (estimated locally)
;;              27 [always]  count:3044571528 (estimated locally) (FALLTHRU)
(code_label 146 145 147 28 1105 (nil) [1 uses])
(note 147 146 148 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 28 (parallel [
            (set (reg/f:DI 130 [ _121 ])
                (plus:DI (reg/f:DI 131 [ iftmp.47_124 ])
                    (reg:DI 175 [ prephitmp_346 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":432:22 210 {*adddi_1}
     (nil))
(insn 149 148 150 28 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -104 [0xffffffffffffff98])) [118 MEM[(struct vector *)&D.330788].D.261450._M_impl.D.260795._M_finish+0 S8 A64])
        (reg/f:DI 130 [ _121 ])) "/usr/include/c++/11/bits/stl_vector.h":557:26 74 {*movdi_internal}
     (nil))
(insn 150 149 151 28 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 151 150 152 28 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg:DI 204)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 152 151 153 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -64 [0xffffffffffffffc0])) [43 MEM[(struct rvalue_from_python_data *)&D.330796 + 16B].D.298234.stage1.convertible+0 S8 A128])
            (reg:DI 205))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 12 {*cmpdi_1}
     (nil))
(jump_insn 153 152 154 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 164)
;;  succ:       29 [30.0% (guessed)]  count:1708194223 (estimated locally) (FALLTHRU)
;;              31 [70.0% (guessed)]  count:3985786577 (estimated locally)

;; basic block 29, loop depth 1, count 1708194219 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 [30.0% (guessed)]  count:1708194223 (estimated locally) (FALLTHRU)
(note 154 153 155 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 29 (set (reg/f:DI 134 [ _135 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [118 MEM[(struct vector *)&D.330796 + 32B].D.261450._M_impl.D.260795._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 156 155 157 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 134 [ _135 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 157 156 158 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 164)
;;  succ:       30 [53.5% (guessed)]  count:913371447 (estimated locally) (FALLTHRU)
;;              31 [46.5% (guessed)]  count:794822772 (estimated locally)

;; basic block 30, loop depth 1, count 913371450 (estimated locally), maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 [53.5% (guessed)]  count:913371447 (estimated locally) (FALLTHRU)
(note 158 157 159 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 30 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [118 MEM[(struct _Vector_base *)&D.330796 + 32B]._M_impl.D.260795._M_end_of_storage+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 160 159 161 30 (parallel [
            (set (reg:DI 206)
                (minus:DI (reg/f:DI 207)
                    (reg/f:DI 134 [ _135 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])) [118 MEM[(struct _Vector_base *)&D.330796 + 32B]._M_impl.D.260795._M_end_of_storage+0 S8 A128])
            (reg/f:DI 134 [ _135 ]))
        (nil)))
(insn 161 160 162 30 (set (reg:DI 4 si)
        (reg:DI 206)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 162 161 163 30 (set (reg:DI 5 di)
        (reg/f:DI 134 [ _135 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 163 162 164 30 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       31 [always]  count:913371450 (estimated locally) (FALLTHRU)

;; basic block 31, loop depth 1, count 5693980800 (estimated locally), maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       29 [46.5% (guessed)]  count:794822772 (estimated locally)
;;              30 [always]  count:913371450 (estimated locally) (FALLTHRU)
;;              28 [70.0% (guessed)]  count:3985786577 (estimated locally)
(code_label 164 163 165 31 1106 (nil) [2 uses])
(note 165 164 166 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 31 (set (reg/f:DI 143 [ _150 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 24 [0x18])) [115 MEM[(struct vector *)data_6(D) + 16B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/vector.tcc":112:20 74 {*movdi_internal}
     (nil))
(insn 167 166 168 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 143 [ _150 ])
            (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                    (const_int 32 [0x20])) [115 MEM[(struct vector *)data_6(D) + 16B].D.254077._M_impl.D.253422._M_end_of_storage+0 S8 A64]))) "/usr/include/c++/11/bits/vector.tcc":112:2 12 {*cmpdi_1}
     (nil))
(jump_insn 168 167 631 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "/usr/include/c++/11/bits/vector.tcc":112:2 806 {*jcc}
     (int_list:REG_BR_PROB 886588628 (nil))
 -> 194)
;;  succ:       37 [82.6% (guessed)]  count:4701519946 (estimated locally)
;;              38 [17.4% (guessed)]  count:992460854 (estimated locally) (FALLTHRU)

;; basic block 32, loop depth 0, count 0 (precise), probably never executed
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       15 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              23 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 631 168 634 32 1157 (nil) [1 uses])
(note 634 631 632 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 632 634 172 32 (set (reg:DI 212)
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 74 {*movdi_internal}
     (nil))
;;  succ:       33 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 33, loop depth 0, count 0 (precise), probably never executed
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 172 632 173 33 1109 (nil) [0 uses])
(note 173 172 174 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 33 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 175 174 176 33 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg:DI 208)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 176 175 177 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -64 [0xffffffffffffffc0])) [43 MEM[(struct rvalue_from_python_data *)&D.330796 + 16B].D.298234.stage1.convertible+0 S8 A128])
            (reg:DI 209))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 12 {*cmpdi_1}
     (nil))
(jump_insn 177 176 178 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 188)
            (pc))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 188)
;;  succ:       34 [never]  count:0 (precise) (FALLTHRU)
;;              36 [never]  count:0 (precise)

;; basic block 34, loop depth 0, count 0 (precise), probably never executed
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 [never]  count:0 (precise) (FALLTHRU)
(note 178 177 179 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 34 (set (reg/f:DI 139 [ _144 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [118 MEM[(struct vector *)&D.330796 + 32B].D.261450._M_impl.D.260795._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 180 179 181 34 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [118 MEM[(struct _Vector_base *)&D.330796 + 32B]._M_impl.D.260795._M_end_of_storage+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 181 180 182 34 (parallel [
            (set (reg:DI 141 [ _146 ])
                (minus:DI (reg/f:DI 210)
                    (reg/f:DI 139 [ _144 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])) [118 MEM[(struct _Vector_base *)&D.330796 + 32B]._M_impl.D.260795._M_end_of_storage+0 S8 A128])
            (reg/f:DI 139 [ _144 ]))
        (nil)))
(insn 182 181 183 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 139 [ _144 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 183 182 184 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 188)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 188)
;;  succ:       35 [never]  count:0 (precise) (FALLTHRU)
;;              36 [never]  count:0 (precise)

;; basic block 35, loop depth 0, count 0 (precise), probably never executed
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       34 [never]  count:0 (precise) (FALLTHRU)
(note 184 183 185 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 35 (set (reg:DI 4 si)
        (reg:DI 141 [ _146 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 186 185 187 35 (set (reg:DI 5 di)
        (reg/f:DI 139 [ _144 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 187 186 188 35 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       36 [never]  count:0 (precise) (FALLTHRU)

;; basic block 36, loop depth 0, count 0 (precise), probably never executed
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       34 [never]  count:0 (precise)
;;              35 [never]  count:0 (precise) (FALLTHRU)
;;              33 [never]  count:0 (precise)
(code_label 188 187 189 36 1110 (nil) [2 uses])
(note 189 188 190 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 194 36 (set (reg:DI 211)
        (reg:DI 212)) 74 {*movdi_internal}
     (nil))
;;  succ:       49 [always]  count:0 (precise) (FALLTHRU)

;; basic block 37, loop depth 1, count 4701519941 (estimated locally), maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       31 [82.6% (guessed)]  count:4701519946 (estimated locally)
(code_label 194 190 195 37 1107 (nil) [1 uses])
(note 195 194 196 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 37 (set (reg:V2DI 215)
        (vec_concat:V2DI (reg/f:DI 131 [ iftmp.47_124 ])
            (reg/f:DI 130 [ _121 ]))) "/usr/include/c++/11/bits/stl_vector.h":103:4 4306 {vec_concatv2di}
     (nil))
(insn 197 196 198 37 (set (mem:V2DI (reg/f:DI 143 [ _150 ]) [118 MEM <vector(2) long unsigned int> [(Color * *)_150]+0 S16 A64])
        (reg:V2DI 215)) "/usr/include/c++/11/bits/stl_vector.h":103:4 1439 {movv2di_internal}
     (nil))
(insn 198 197 199 37 (set (mem/f:DI (plus:DI (reg/f:DI 143 [ _150 ])
                (const_int 16 [0x10])) [118 MEM[(struct _Vector_impl_data *)_150]._M_end_of_storage+0 S8 A64])
        (reg/f:DI 132 [ _126 ])) "/usr/include/c++/11/bits/stl_vector.h":104:4 74 {*movdi_internal}
     (nil))
(insn 199 198 200 37 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 143 [ _150 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":117:6 210 {*adddi_1}
     (nil))
(insn 200 199 204 37 (set (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 24 [0x18])) [115 MEM[(struct vector *)data_6(D) + 16B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])
        (reg:DI 216)) "/usr/include/c++/11/bits/vector.tcc":117:6 74 {*movdi_internal}
     (nil))
;;  succ:       41 [always]  count:4701519941 (estimated locally) (FALLTHRU)

;; basic block 38, loop depth 1, count 992460853 (estimated locally), maybe hot
;;  prev block 37, next block 39, flags: (RTL)
;;  pred:       31 [17.4% (guessed)]  count:992460854 (estimated locally) (FALLTHRU)
(note 204 200 205 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 38 (set (reg:DI 181 [ D.330823 ])
        (reg/f:DI 143 [ _150 ])) 74 {*movdi_internal}
     (nil))
(insn 206 205 207 38 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/vector.tcc":121:21 210 {*adddi_1}
     (nil))
(insn 207 206 208 38 (set (reg:DI 1 dx)
        (reg:DI 217)) "/usr/include/c++/11/bits/vector.tcc":121:21 74 {*movdi_internal}
     (nil))
(insn 208 207 209 38 (set (reg:DI 4 si)
        (reg:DI 181 [ D.330823 ])) "/usr/include/c++/11/bits/vector.tcc":121:21 74 {*movdi_internal}
     (nil))
(insn 209 208 210 38 (set (reg:DI 5 di)
        (reg/v/f:DI 82 [ storage ])) "/usr/include/c++/11/bits/vector.tcc":121:21 74 {*movdi_internal}
     (nil))
(call_insn 210 209 211 38 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIS_I5ColorSaIS0_EESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_") [flags 0x1]  <function_decl 0x7f1a35b81d00 _M_realloc_insert>) [0 _M_realloc_insert S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/vector.tcc":121:21 813 {*call}
     (expr_list:REG_EH_REGION (const_int 16 [0x10])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIS_I5ColorSaIS0_EESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_") [flags 0x1]  <function_decl 0x7f1a35b81d00 _M_realloc_insert>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       39 [always]  count:992460853 (estimated locally) (FALLTHRU)
;;              44 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 39, loop depth 1, count 3044571527 (estimated locally), maybe hot
;; Invalid sum of incoming counts 992460853 (estimated locally), should be 3044571527 (estimated locally)
;;  prev block 38, next block 40, flags: (RTL)
;;  pred:       38 [always]  count:992460853 (estimated locally) (FALLTHRU)
(note 211 210 212 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 39 (set (reg/f:DI 110 [ _83 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [118 D.330788.D.261450._M_impl.D.260795._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 213 212 214 39 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [118 MEM[(struct _Vector_base *)&D.330788]._M_impl.D.260795._M_end_of_storage+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 214 213 215 39 (parallel [
            (set (reg:DI 112 [ _85 ])
                (minus:DI (reg/f:DI 218)
                    (reg/f:DI 110 [ _83 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])) [118 MEM[(struct _Vector_base *)&D.330788]._M_impl.D.260795._M_end_of_storage+0 S8 A128])
            (reg/f:DI 110 [ _83 ]))
        (nil)))
(insn 215 214 216 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 110 [ _83 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 216 215 217 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 221)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 4 (nil))
 -> 221)
;;  succ:       40 [always (guessed)]  count:3044571527 (estimated locally) (FALLTHRU)
;;              41 [never (guessed)]  count:0 (estimated locally)

;; basic block 40, loop depth 1, count 3044571528 (estimated locally), maybe hot
;;  prev block 39, next block 41, flags: (RTL)
;;  pred:       39 [always (guessed)]  count:3044571527 (estimated locally) (FALLTHRU)
(note 217 216 218 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 40 (set (reg:DI 4 si)
        (reg:DI 112 [ _85 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 219 218 220 40 (set (reg:DI 5 di)
        (reg/f:DI 110 [ _83 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 220 219 221 40 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       41 [always]  count:3044571528 (estimated locally) (FALLTHRU)

;; basic block 41, loop depth 1, count 5693980800 (estimated locally), maybe hot
;; Invalid sum of incoming counts 7746091469 (estimated locally), should be 5693980800 (estimated locally)
;;  prev block 40, next block 42, flags: (RTL)
;;  pred:       39 [never (guessed)]  count:0 (estimated locally)
;;              40 [always]  count:3044571528 (estimated locally) (FALLTHRU)
;;              37 [always]  count:4701519941 (estimated locally) (FALLTHRU)
(code_label 221 220 222 41 1112 (nil) [1 uses])
(note 222 221 223 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 41 (parallel [
            (set (reg:DI 219)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":43:30 210 {*adddi_1}
     (nil))
(insn 224 223 225 41 (set (reg:DI 5 di)
        (reg:DI 219)) "/usr/include/boost/python/stl_iterator.hpp":43:30 74 {*movdi_internal}
     (nil))
(call_insn 225 224 226 41 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_impl9incrementEv") [flags 0x41]  <function_decl 0x7f1a3775b800 increment>) [0 increment S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/stl_iterator.hpp":43:30 813 {*call}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python7objects23stl_input_iterator_impl9incrementEv") [flags 0x41]  <function_decl 0x7f1a3775b800 increment>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       42 [always]  count:5693980800 (estimated locally) (FALLTHRU,DFS_BACK)
;;              48 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 42, loop depth 1, count 6767722618 (estimated locally), maybe hot
;;  prev block 41, next block 43, flags: (RTL)
;;  pred:       11 [always]  count:1073741824 (estimated locally) (FALLTHRU)
;;              41 [always]  count:5693980800 (estimated locally) (FALLTHRU,DFS_BACK)
(code_label 226 225 227 42 1100 (nil) [0 uses])
(note 227 226 228 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 42 (parallel [
            (set (reg:DI 220)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":53:33 210 {*adddi_1}
     (nil))
(insn 229 228 230 42 (parallel [
            (set (reg:DI 221)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/stl_iterator.hpp":53:33 210 {*adddi_1}
     (nil))
(insn 230 229 231 42 (set (reg:DI 4 si)
        (reg:DI 220)) "/usr/include/boost/python/stl_iterator.hpp":53:33 74 {*movdi_internal}
     (nil))
(insn 231 230 232 42 (set (reg:DI 5 di)
        (reg:DI 221)) "/usr/include/boost/python/stl_iterator.hpp":53:33 74 {*movdi_internal}
     (nil))
(call_insn 232 231 598 42 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl5equalERKS2_") [flags 0x41]  <function_decl 0x7f1a3775b900 equal>) [0 equal S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/stl_iterator.hpp":53:33 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 15 [0xf])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python7objects23stl_input_iterator_impl5equalERKS2_") [flags 0x41]  <function_decl 0x7f1a3775b900 equal>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       48 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              43 [always (adjusted)]  count:6767722618 (estimated locally) (FALLTHRU)

;; basic block 43, loop depth 1, count 6767722618 (estimated locally), maybe hot
;;  prev block 42, next block 44, flags: (RTL)
;;  pred:       42 [always (adjusted)]  count:6767722618 (estimated locally) (FALLTHRU)
(note 598 232 233 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 233 598 235 43 (set (reg:QI 113 [ _90 ])
        (reg:QI 0 ax)) "/usr/include/boost/python/stl_iterator.hpp":53:33 77 {*movqi_internal}
     (nil))
(insn 235 233 236 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ _90 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":1562:21 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 236 235 623 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 303)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1562:21 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 303)
;;  succ:       12 [89.0% (guessed)]  count:6023273134 (estimated locally) (FALLTHRU)
;;              54 [11.0% (guessed)]  count:744449484 (estimated locally)

;; basic block 44, loop depth 0, count 0 (precise), probably never executed
;;  prev block 43, next block 45, flags: (RTL)
;;  pred:       38 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 623 236 626 44 1155 (nil) [1 uses])
(note 626 623 624 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 624 626 241 44 (set (reg:DI 223)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
;;  succ:       45 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 45, loop depth 0, count 0 (precise), probably never executed
;;  prev block 44, next block 46, flags: (RTL)
;;  pred:       44 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 241 624 242 45 1115 (nil) [0 uses])
(note 242 241 243 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 45 (set (reg/f:DI 114 [ _91 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [118 D.330788.D.261450._M_impl.D.260795._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 244 243 245 45 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -96 [0xffffffffffffffa0])) [118 MEM[(struct _Vector_base *)&D.330788]._M_impl.D.260795._M_end_of_storage+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 245 244 246 45 (parallel [
            (set (reg:DI 116 [ _93 ])
                (minus:DI (reg/f:DI 222)
                    (reg/f:DI 114 [ _91 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -96 [0xffffffffffffffa0])) [118 MEM[(struct _Vector_base *)&D.330788]._M_impl.D.260795._M_end_of_storage+0 S8 A128])
            (reg/f:DI 114 [ _91 ]))
        (nil)))
(insn 246 245 247 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 114 [ _91 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 247 246 248 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 252)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 252)
;;  succ:       46 [never]  count:0 (precise) (FALLTHRU)
;;              47 [never]  count:0 (precise)

;; basic block 46, loop depth 0, count 0 (precise), probably never executed
;;  prev block 45, next block 47, flags: (RTL)
;;  pred:       45 [never]  count:0 (precise) (FALLTHRU)
(note 248 247 249 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 46 (set (reg:DI 4 si)
        (reg:DI 116 [ _93 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 250 249 251 46 (set (reg:DI 5 di)
        (reg/f:DI 114 [ _91 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 251 250 252 46 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       47 [never]  count:0 (precise) (FALLTHRU)

;; basic block 47, loop depth 0, count 0 (precise), probably never executed
;;  prev block 46, next block 48, flags: (RTL)
;;  pred:       45 [never]  count:0 (precise)
;;              46 [never]  count:0 (precise) (FALLTHRU)
(code_label 252 251 253 47 1116 (nil) [1 uses])
(note 253 252 254 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 617 47 (set (reg:DI 211)
        (reg:DI 223)) 74 {*movdi_internal}
     (nil))
;;  succ:       49 [always]  count:0 (precise) (FALLTHRU)

;; basic block 48, loop depth 0, count 0 (precise), probably never executed
;;  prev block 47, next block 49, flags: (RTL)
;;  pred:       12 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              42 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 617 254 622 48 1154 (nil) [1 uses])
(note 622 617 618 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 618 622 256 48 (set (reg:DI 211)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
;;  succ:       49 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 49, loop depth 0, count 0 (precise), probably never executed
;;  prev block 48, next block 50, flags: (RTL)
;;  pred:       36 [always]  count:0 (precise) (FALLTHRU)
;;              47 [always]  count:0 (precise) (FALLTHRU)
;;              48 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 256 618 257 49 1111 (nil) [0 uses])
(note 257 256 258 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 49 (set (reg/f:DI 117 [ _96 ])
        (reg:DI 211)) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
(insn 259 258 260 49 (set (reg:DI 5 di)
        (reg/f:DI 117 [ _96 ])) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
(call_insn 260 259 261 49 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":1568:6 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 261 260 262 49 (set (reg/f:DI 118 [ _97 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 16 [0x10])) [115 MEM[(struct vector *)data_6(D) + 16B].D.254077._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":1499:24 74 {*movdi_internal}
     (nil))
(insn 262 261 263 49 (set (reg/f:DI 119 [ _98 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 24 [0x18])) [115 MEM[(struct vector *)data_6(D) + 16B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":1794:36 74 {*movdi_internal}
     (nil))
(insn 263 262 264 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 118 [ _97 ])
            (reg/f:DI 119 [ _98 ]))) "/usr/include/c++/11/bits/stl_vector.h":1794:2 12 {*cmpdi_1}
     (nil))
(jump_insn 264 263 265 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":1794:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 270)
;;  succ:       50 [never]  count:0 (precise) (FALLTHRU)
;;              51 [never]  count:0 (precise)

;; basic block 50, loop depth 0, count 0 (precise), probably never executed
;;  prev block 49, next block 51, flags: (RTL)
;;  pred:       49 [never]  count:0 (precise) (FALLTHRU)
(note 265 264 266 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 50 (set (reg:DI 4 si)
        (reg/f:DI 119 [ _98 ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(insn 267 266 268 50 (set (reg:DI 5 di)
        (reg/f:DI 118 [ _97 ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(call_insn 268 267 269 50 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5ColorSaIS3_EEEEvT_S7_") [flags 0x1]  <function_decl 0x7f1a356a6f00 __destroy>) [0 __destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_construct.h":196:11 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5ColorSaIS3_EEEEvT_S7_") [flags 0x1]  <function_decl 0x7f1a356a6f00 __destroy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 269 268 270 50 (set (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 24 [0x18])) [115 MEM[(struct vector *)data_6(D) + 16B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])
        (reg/f:DI 118 [ _97 ])) "/usr/include/c++/11/bits/stl_vector.h":1798:30 74 {*movdi_internal}
     (nil))
;;  succ:       51 [never]  count:0 (precise) (FALLTHRU)

;; basic block 51, loop depth 0, count 0 (precise), probably never executed
;;  prev block 50, next block 52, flags: (RTL)
;;  pred:       49 [never]  count:0 (precise)
;;              50 [never]  count:0 (precise) (FALLTHRU)
(code_label 270 269 271 51 1117 (nil) [1 uses])
(note 271 270 272 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(call_insn 272 271 627 51 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1570:6 813 {*call}
     (expr_list:REG_EH_REGION (const_int 17 [0x11])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       52 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 52, loop depth 0, count 0 (precise), probably never executed
;;  prev block 51, next block 53, flags: (RTL)
;;  pred:       51 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 627 272 630 52 1156 (nil) [1 uses])
(note 630 627 628 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 628 630 274 52 (set (reg:DI 226)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_vector.h":1568:6 74 {*movdi_internal}
     (nil))
;;  succ:       53 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 53, loop depth 0, count 0 (precise), probably never executed
;;  prev block 52, next block 54, flags: (RTL)
;;  pred:       52 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 274 628 275 53 1118 (nil) [0 uses])
(note 275 274 276 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(call_insn 276 275 277 53 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":1568:6 813 {*call}
     (expr_list:REG_EH_REGION (const_int -39 [0xffffffffffffffd9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 277 276 279 53 (set (reg:DI 225)
        (reg:DI 226)) 74 {*movdi_internal}
     (nil))
(insn 279 277 280 53 (set (reg:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -136 [0xffffffffffffff78])) [31 MEM[(struct handle *)&D.330775 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 280 279 281 53 (set (reg:DI 5 di)
        (reg:DI 229)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 281 280 282 53 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -30 [0xffffffffffffffe2])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 282 281 283 53 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 283 282 284 53 (set (reg:DI 5 di)
        (reg:DI 230)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 284 283 285 53 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 285 284 287 53 (set (reg:DI 231)
        (reg:DI 225)) 74 {*movdi_internal}
     (nil))
(insn 287 285 288 53 (set (reg:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -120 [0xffffffffffffff88])) [31 MEM[(struct handle *)&D.330776 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 288 287 289 53 (set (reg:DI 5 di)
        (reg:DI 233)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 289 288 290 53 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -29 [0xffffffffffffffe3])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 290 289 291 53 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 291 290 292 53 (set (reg:DI 5 di)
        (reg:DI 234)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 292 291 293 53 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 293 292 295 53 (set (reg:DI 235)
        (reg:DI 231)) 74 {*movdi_internal}
     (nil))
(insn 295 293 296 53 (set (reg/f:DI 108 [ _78 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 16 [0x10])) [115 MEM[(struct _Vector_base *)data_6(D) + 16B]._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
(insn 296 295 297 53 (set (reg/f:DI 237)
        (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                (const_int 32 [0x20])) [115 MEM[(struct _Vector_base *)data_6(D) + 16B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 297 296 298 53 (parallel [
            (set (reg:DI 109 [ _79 ])
                (minus:DI (reg/f:DI 237)
                    (reg/f:DI 108 [ _78 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 184 [ data ])
                    (const_int 32 [0x20])) [115 MEM[(struct _Vector_base *)data_6(D) + 16B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])
            (reg/f:DI 108 [ _78 ]))
        (nil)))
(insn 298 297 299 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 108 [ _78 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 299 298 303 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 415)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 415)
;;  succ:       71 [never]  count:0 (precise)
;;              72 [never]  count:0 (precise) (FALLTHRU)

;; basic block 54, loop depth 0, count 744449484 (estimated locally), maybe hot
;;  prev block 53, next block 55, flags: (RTL)
;;  pred:       43 [11.0% (guessed)]  count:744449484 (estimated locally)
(code_label 303 299 304 54 1113 (nil) [1 uses])
(note 304 303 305 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 54 (set (reg/f:DI 103 [ _73 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -136 [0xffffffffffffff78])) [31 MEM[(struct handle *)&D.330775 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 306 305 307 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 103 [ _73 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 307 306 311 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 311)
;;  succ:       59 [30.0% (guessed)]  count:223334843 (estimated locally) (FALLTHRU)
;;              55 [70.0% (guessed)]  count:521114641 (estimated locally)

;; basic block 55, loop depth 0, count 521114639 (estimated locally), maybe hot
;;  prev block 54, next block 56, flags: (RTL)
;;  pred:       54 [70.0% (guessed)]  count:521114641 (estimated locally)
(code_label 311 307 312 55 1121 (nil) [1 uses])
(note 312 311 313 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 316 55 (set (reg:DI 156 [ _169 ])
        (mem:DI (reg/f:DI 103 [ _73 ]) [7 MEM[(const struct PyObject *)_73].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 316 313 317 55 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 156 [ _169 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 317 316 376 55 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 328)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 328)
;;  succ:       57 [100.0% (guessed)]  count:520906193 (estimated locally)
;;              56 [0.0% (guessed)]  count:208446 (estimated locally) (FALLTHRU)

;; basic block 56, loop depth 0, count 1040728 (estimated locally)
;;  prev block 55, next block 57, flags: (RTL)
;;  pred:       55 [0.0% (guessed)]  count:208446 (estimated locally) (FALLTHRU)
;;              64 [0.0% (guessed)]  count:208304 (estimated locally)
;;              73 [0.0% (guessed)]  count:208162 (estimated locally)
;;              80 [0.0% (guessed)]  count:208021 (estimated locally)
;;              90 [0.0% (guessed)]  count:207796 (estimated locally)
(code_label 376 317 318 56 1129 (nil) [4 uses])
(note 318 376 319 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 56 (set (reg:DI 238)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 320 319 321 56 (set (reg:DI 2 cx)
        (reg:DI 238)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f1a338c6900 *.LC6>)
        (nil)))
(insn 321 320 322 56 (set (reg:SI 1 dx)
        (const_int 37 [0x25])) "/usr/include/boost/python/refcount.hpp":37:5 75 {*movsi_internal}
     (nil))
(insn 322 321 323 56 (set (reg:DI 239)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 323 322 324 56 (set (reg:DI 4 si)
        (reg:DI 239)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f1a338c6a20 *.LC7>)
        (nil)))
(insn 324 323 325 56 (set (reg:DI 240)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (nil))
(insn 325 324 326 56 (set (reg:DI 5 di)
        (reg:DI 240)) "/usr/include/boost/python/refcount.hpp":37:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f1a338c6ab0 *.LC8>)
        (nil)))
(call_insn 326 325 328 56 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/refcount.hpp":37:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 57, loop depth 0, count 520968732 (estimated locally), maybe hot
;;  prev block 56, next block 58, flags: (RTL)
;;  pred:       55 [100.0% (guessed)]  count:520906193 (estimated locally)
(code_label 328 326 329 57 1123 (nil) [1 uses])
(note 329 328 330 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 57 (parallel [
            (set (reg:DI 157 [ _171 ])
                (plus:DI (reg:DI 156 [ _169 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 331 330 333 57 (set (mem:DI (reg/f:DI 103 [ _73 ]) [7 MEM[(struct PyObject *)_73].ob_refcnt+0 S8 A64])
        (reg:DI 157 [ _171 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 333 331 334 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 157 [ _171 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 334 333 335 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 338)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 338)
;;  succ:       59 [67.0% (guessed)]  count:349049051 (estimated locally)
;;              58 [33.0% (guessed)]  count:171919681 (estimated locally) (FALLTHRU)

;; basic block 58, loop depth 0, count 171919679 (estimated locally), maybe hot
;;  prev block 57, next block 59, flags: (RTL)
;;  pred:       57 [33.0% (guessed)]  count:171919681 (estimated locally) (FALLTHRU)
(note 335 334 336 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 58 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _73 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 337 336 338 58 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -31 [0xffffffffffffffe1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       59 [always]  count:171919679 (estimated locally) (FALLTHRU)

;; basic block 59, loop depth 0, count 744241040 (estimated locally), maybe hot
;;  prev block 58, next block 60, flags: (RTL)
;;  pred:       54 [30.0% (guessed)]  count:223334843 (estimated locally) (FALLTHRU)
;;              58 [always]  count:171919679 (estimated locally) (FALLTHRU)
;;              57 [67.0% (guessed)]  count:349049051 (estimated locally)
(code_label 338 337 339 59 1122 (nil) [1 uses])
(note 339 338 340 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 59 (set (reg/f:DI 153 [ _166 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -144 [0xffffffffffffff70])) [31 D.330775.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 341 340 344 59 (set (reg:DI 154 [ _167 ])
        (mem:DI (reg/f:DI 153 [ _166 ]) [7 MEM[(const struct PyObject *)_166].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 344 341 345 59 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 154 [ _167 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 345 344 394 59 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 356)
;;  succ:       61 [100.0% (guessed)]  count:743943344 (estimated locally)
;;              60 [0.0% (guessed)]  count:297696 (estimated locally) (FALLTHRU)

;; basic block 60, loop depth 0, count 1486534 (estimated locally), maybe hot
;;  prev block 59, next block 61, flags: (RTL)
;;  pred:       59 [0.0% (guessed)]  count:297696 (estimated locally) (FALLTHRU)
;;              67 [0.0% (guessed)]  count:297494 (estimated locally)
;;              76 [0.0% (guessed)]  count:297291 (estimated locally)
;;              83 [0.0% (guessed)]  count:297089 (estimated locally)
;;              86 [0.0% (guessed)]  count:296970 (estimated locally)
(code_label 394 345 346 60 1131 (nil) [4 uses])
(note 346 394 347 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 60 (set (reg:DI 241)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 348 347 349 60 (set (reg:DI 2 cx)
        (reg:DI 241)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f1a33c96ab0 *.LC3>)
        (nil)))
(insn 349 348 350 60 (set (reg:SI 1 dx)
        (const_int 422 [0x1a6])) "/usr/include/boost/python/object_core.hpp":422:5 75 {*movsi_internal}
     (nil))
(insn 350 349 351 60 (set (reg:DI 242)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 351 350 352 60 (set (reg:DI 4 si)
        (reg:DI 242)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f1a33c96b40 *.LC4>)
        (nil)))
(insn 352 351 353 60 (set (reg:DI 243)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 353 352 354 60 (set (reg:DI 5 di)
        (reg:DI 243)) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f1a33c96bd0 *.LC5>)
        (nil)))
(call_insn 354 353 356 60 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":422:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 61, loop depth 0, count 743943346 (estimated locally), maybe hot
;;  prev block 60, next block 62, flags: (RTL)
;;  pred:       59 [100.0% (guessed)]  count:743943344 (estimated locally)
(code_label 356 354 357 61 1125 (nil) [1 uses])
(note 357 356 358 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 61 (parallel [
            (set (reg:DI 155 [ _168 ])
                (plus:DI (reg:DI 154 [ _167 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 359 358 360 61 (set (mem:DI (reg/f:DI 153 [ _166 ]) [7 _166->ob_refcnt+0 S8 A64])
        (reg:DI 155 [ _168 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 360 359 361 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 155 [ _168 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 361 360 362 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 365)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 365)
;;  succ:       63 [67.0% (guessed)]  count:498442043 (estimated locally)
;;              62 [33.0% (guessed)]  count:245501303 (estimated locally) (FALLTHRU)

;; basic block 62, loop depth 0, count 245501302 (estimated locally), maybe hot
;;  prev block 61, next block 63, flags: (RTL)
;;  pred:       61 [33.0% (guessed)]  count:245501303 (estimated locally) (FALLTHRU)
(note 362 361 363 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 364 62 (set (reg:DI 5 di)
        (reg/f:DI 153 [ _166 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 364 363 365 62 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -42 [0xffffffffffffffd6])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       63 [always]  count:245501302 (estimated locally) (FALLTHRU)

;; basic block 63, loop depth 0, count 743943346 (estimated locally), maybe hot
;;  prev block 62, next block 64, flags: (RTL)
;;  pred:       61 [67.0% (guessed)]  count:498442043 (estimated locally)
;;              62 [always]  count:245501302 (estimated locally) (FALLTHRU)
(code_label 365 364 366 63 1126 (nil) [1 uses])
(note 366 365 367 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 63 (set (reg/f:DI 104 [ _74 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -120 [0xffffffffffffff88])) [31 MEM[(struct handle *)&D.330776 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 368 367 369 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 104 [ _74 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 369 368 373 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 373)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 373)
;;  succ:       67 [30.0% (guessed)]  count:223183002 (estimated locally) (FALLTHRU)
;;              64 [70.0% (guessed)]  count:520760344 (estimated locally)

;; basic block 64, loop depth 0, count 520760345 (estimated locally), maybe hot
;;  prev block 63, next block 65, flags: (RTL)
;;  pred:       63 [70.0% (guessed)]  count:520760344 (estimated locally)
(code_label 373 369 374 64 1127 (nil) [1 uses])
(note 374 373 375 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 379 64 (set (reg:DI 151 [ _163 ])
        (mem:DI (reg/f:DI 104 [ _74 ]) [7 MEM[(const struct PyObject *)_74].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 379 375 380 64 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 151 [ _163 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 380 379 381 64 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 376)
;;  succ:       65 [100.0% (guessed)]  count:520552041 (estimated locally) (FALLTHRU)
;;              56 [0.0% (guessed)]  count:208304 (estimated locally)

;; basic block 65, loop depth 0, count 520614533 (estimated locally), maybe hot
;;  prev block 64, next block 66, flags: (RTL)
;;  pred:       64 [100.0% (guessed)]  count:520552041 (estimated locally) (FALLTHRU)
(note 381 380 382 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 65 (parallel [
            (set (reg:DI 152 [ _165 ])
                (plus:DI (reg:DI 151 [ _163 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 383 382 385 65 (set (mem:DI (reg/f:DI 104 [ _74 ]) [7 MEM[(struct PyObject *)_74].ob_refcnt+0 S8 A64])
        (reg:DI 152 [ _165 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 385 383 386 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 152 [ _165 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 386 385 387 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 390)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 390)
;;  succ:       67 [67.0% (guessed)]  count:348811738 (estimated locally)
;;              66 [33.0% (guessed)]  count:171802795 (estimated locally) (FALLTHRU)

;; basic block 66, loop depth 0, count 171802791 (estimated locally), maybe hot
;;  prev block 65, next block 67, flags: (RTL)
;;  pred:       65 [33.0% (guessed)]  count:171802795 (estimated locally) (FALLTHRU)
(note 387 386 388 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 388 387 389 66 (set (reg:DI 5 di)
        (reg/f:DI 104 [ _74 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 389 388 390 66 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -32 [0xffffffffffffffe0])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       67 [always]  count:171802791 (estimated locally) (FALLTHRU)

;; basic block 67, loop depth 0, count 743735040 (estimated locally), maybe hot
;;  prev block 66, next block 68, flags: (RTL)
;;  pred:       63 [30.0% (guessed)]  count:223183002 (estimated locally) (FALLTHRU)
;;              66 [always]  count:171802791 (estimated locally) (FALLTHRU)
;;              65 [67.0% (guessed)]  count:348811738 (estimated locally)
(code_label 390 389 391 67 1128 (nil) [1 uses])
(note 391 390 392 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 67 (set (reg/f:DI 148 [ _160 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -128 [0xffffffffffffff80])) [31 D.330776.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 393 392 397 67 (set (reg:DI 149 [ _161 ])
        (mem:DI (reg/f:DI 148 [ _160 ]) [7 MEM[(const struct PyObject *)_160].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 397 393 398 67 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 149 [ _161 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 398 397 399 67 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 394)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 394)
;;  succ:       68 [100.0% (guessed)]  count:743437546 (estimated locally) (FALLTHRU)
;;              60 [0.0% (guessed)]  count:297494 (estimated locally)

;; basic block 68, loop depth 0, count 743437548 (estimated locally), maybe hot
;;  prev block 67, next block 69, flags: (RTL)
;;  pred:       67 [100.0% (guessed)]  count:743437546 (estimated locally) (FALLTHRU)
(note 399 398 400 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 401 68 (parallel [
            (set (reg:DI 150 [ _162 ])
                (plus:DI (reg:DI 149 [ _161 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 401 400 402 68 (set (mem:DI (reg/f:DI 148 [ _160 ]) [7 _160->ob_refcnt+0 S8 A64])
        (reg:DI 150 [ _162 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 402 401 403 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 150 [ _162 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 403 402 404 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 407)
;;  succ:       70 [67.0% (guessed)]  count:498103158 (estimated locally)
;;              69 [33.0% (guessed)]  count:245334390 (estimated locally) (FALLTHRU)

;; basic block 69, loop depth 0, count 245334388 (estimated locally), maybe hot
;;  prev block 68, next block 70, flags: (RTL)
;;  pred:       68 [33.0% (guessed)]  count:245334390 (estimated locally) (FALLTHRU)
(note 404 403 405 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 405 404 406 69 (set (reg:DI 5 di)
        (reg/f:DI 148 [ _160 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 406 405 407 69 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -41 [0xffffffffffffffd7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       70 [always]  count:245334388 (estimated locally) (FALLTHRU)

;; basic block 70, loop depth 0, count 743437548 (estimated locally), maybe hot
;;  prev block 69, next block 71, flags: (RTL)
;;  pred:       68 [67.0% (guessed)]  count:498103158 (estimated locally)
;;              69 [always]  count:245334388 (estimated locally) (FALLTHRU)
(code_label 407 406 408 70 1132 (nil) [1 uses])
(note 408 407 409 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 70 (set (reg/f:DI 87 [ _24 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -152 [0xffffffffffffff68])) [31 MEM[(struct handle *)&D.280367 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 410 409 411 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _24 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 411 410 415 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 434)
;;  succ:       76 [30.0% (guessed)]  count:223031262 (estimated locally) (FALLTHRU)
;;              73 [70.0% (guessed)]  count:520406286 (estimated locally)

;; basic block 71, loop depth 0, count 0 (precise), probably never executed
;;  prev block 70, next block 72, flags: (RTL)
;;  pred:       53 [never]  count:0 (precise)
(code_label 415 411 416 71 1119 (nil) [1 uses])
(note 416 415 417 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 417 416 418 71 (set (reg:DI 4 si)
        (reg:DI 109 [ _79 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 418 417 419 71 (set (reg:DI 5 di)
        (reg/f:DI 108 [ _78 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 419 418 420 71 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       72 [never]  count:0 (precise) (FALLTHRU)

;; basic block 72, loop depth 0, count 0 (precise), probably never executed
;;  prev block 71, next block 73, flags: (RTL)
;;  pred:       71 [never]  count:0 (precise) (FALLTHRU)
;;              53 [never]  count:0 (precise) (FALLTHRU)
(code_label 420 419 421 72 1120 (nil) [0 uses])
(note 421 420 422 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 424 72 (set (reg:DI 244)
        (reg:DI 235)) 74 {*movdi_internal}
     (nil))
(insn 424 422 425 72 (set (reg:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -152 [0xffffffffffffff68])) [31 MEM[(struct handle *)&D.280367 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 425 424 426 72 (set (reg:DI 5 di)
        (reg:DI 246)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 426 425 427 72 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -26 [0xffffffffffffffe6])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 427 426 428 72 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 428 427 429 72 (set (reg:DI 5 di)
        (reg:DI 247)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 429 428 430 72 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 430 429 434 72 (set (reg:DI 248)
        (reg:DI 244)) 74 {*movdi_internal}
     (nil))
;;  succ:       94 [always]  count:0 (precise) (FALLTHRU)

;; basic block 73, loop depth 0, count 520406284 (estimated locally), maybe hot
;;  prev block 72, next block 74, flags: (RTL)
;;  pred:       70 [70.0% (guessed)]  count:520406286 (estimated locally)
(code_label 434 430 435 73 1133 (nil) [1 uses])
(note 435 434 436 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 436 435 439 73 (set (reg:DI 172 [ _188 ])
        (mem:DI (reg/f:DI 87 [ _24 ]) [7 MEM[(const struct PyObject *)_24].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 439 436 440 73 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 172 [ _188 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 440 439 441 73 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 376)
;;  succ:       74 [100.0% (guessed)]  count:520198122 (estimated locally) (FALLTHRU)
;;              56 [0.0% (guessed)]  count:208162 (estimated locally)

;; basic block 74, loop depth 0, count 520260572 (estimated locally), maybe hot
;;  prev block 73, next block 75, flags: (RTL)
;;  pred:       73 [100.0% (guessed)]  count:520198122 (estimated locally) (FALLTHRU)
(note 441 440 442 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 74 (parallel [
            (set (reg:DI 173 [ _190 ])
                (plus:DI (reg:DI 172 [ _188 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 443 442 445 74 (set (mem:DI (reg/f:DI 87 [ _24 ]) [7 MEM[(struct PyObject *)_24].ob_refcnt+0 S8 A64])
        (reg:DI 173 [ _190 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 445 443 446 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 173 [ _190 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 446 445 447 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 450)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 450)
;;  succ:       76 [67.0% (guessed)]  count:348574584 (estimated locally)
;;              75 [33.0% (guessed)]  count:171685988 (estimated locally) (FALLTHRU)

;; basic block 75, loop depth 0, count 171685985 (estimated locally), maybe hot
;;  prev block 74, next block 76, flags: (RTL)
;;  pred:       74 [33.0% (guessed)]  count:171685988 (estimated locally) (FALLTHRU)
(note 447 446 448 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 448 447 449 75 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _24 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 449 448 450 75 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -25 [0xffffffffffffffe7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       76 [always]  count:171685985 (estimated locally) (FALLTHRU)

;; basic block 76, loop depth 0, count 743229387 (estimated locally), maybe hot
;;  prev block 75, next block 77, flags: (RTL)
;;  pred:       70 [30.0% (guessed)]  count:223031262 (estimated locally) (FALLTHRU)
;;              75 [always]  count:171685985 (estimated locally) (FALLTHRU)
;;              74 [67.0% (guessed)]  count:348574584 (estimated locally)
(code_label 450 449 451 76 1134 (nil) [1 uses])
(note 451 450 452 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 452 451 453 76 (set (reg/f:DI 169 [ _185 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -160 [0xffffffffffffff60])) [31 D.280367.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 453 452 456 76 (set (reg:DI 170 [ _186 ])
        (mem:DI (reg/f:DI 169 [ _185 ]) [7 MEM[(const struct PyObject *)_185].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 456 453 457 76 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 170 [ _186 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 457 456 458 76 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 394)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 394)
;;  succ:       77 [100.0% (guessed)]  count:742932096 (estimated locally) (FALLTHRU)
;;              60 [0.0% (guessed)]  count:297291 (estimated locally)

;; basic block 77, loop depth 0, count 742932097 (estimated locally), maybe hot
;;  prev block 76, next block 78, flags: (RTL)
;;  pred:       76 [100.0% (guessed)]  count:742932096 (estimated locally) (FALLTHRU)
(note 458 457 459 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 77 (parallel [
            (set (reg:DI 171 [ _187 ])
                (plus:DI (reg:DI 170 [ _186 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 460 459 461 77 (set (mem:DI (reg/f:DI 169 [ _185 ]) [7 _185->ob_refcnt+0 S8 A64])
        (reg:DI 171 [ _187 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 461 460 462 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 171 [ _187 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 462 461 463 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 466)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 466)
;;  succ:       79 [67.0% (guessed)]  count:497764506 (estimated locally)
;;              78 [33.0% (guessed)]  count:245167591 (estimated locally) (FALLTHRU)

;; basic block 78, loop depth 0, count 245167587 (estimated locally), maybe hot
;;  prev block 77, next block 79, flags: (RTL)
;;  pred:       77 [33.0% (guessed)]  count:245167591 (estimated locally) (FALLTHRU)
(note 463 462 464 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 78 (set (reg:DI 5 di)
        (reg/f:DI 169 [ _185 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 465 464 466 78 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -45 [0xffffffffffffffd3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       79 [always]  count:245167587 (estimated locally) (FALLTHRU)

;; basic block 79, loop depth 0, count 742932097 (estimated locally), maybe hot
;;  prev block 78, next block 80, flags: (RTL)
;;  pred:       77 [67.0% (guessed)]  count:497764506 (estimated locally)
;;              78 [always]  count:245167587 (estimated locally) (FALLTHRU)
(code_label 466 465 467 79 1137 (nil) [1 uses])
(note 467 466 468 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 79 (set (reg/f:DI 86 [ _23 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -168 [0xffffffffffffff58])) [31 MEM[(struct handle *)&D.280350 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 469 468 470 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 86 [ _23 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 470 469 474 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 474)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 474)
;;  succ:       83 [30.0% (guessed)]  count:222879627 (estimated locally) (FALLTHRU)
;;              80 [70.0% (guessed)]  count:520052470 (estimated locally)

;; basic block 80, loop depth 0, count 520052469 (estimated locally), maybe hot
;;  prev block 79, next block 81, flags: (RTL)
;;  pred:       79 [70.0% (guessed)]  count:520052470 (estimated locally)
(code_label 474 470 475 80 1138 (nil) [1 uses])
(note 475 474 476 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 479 80 (set (reg:DI 167 [ _182 ])
        (mem:DI (reg/f:DI 86 [ _23 ]) [7 MEM[(const struct PyObject *)_23].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 479 476 480 80 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 167 [ _182 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 480 479 481 80 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 376)
;;  succ:       81 [100.0% (guessed)]  count:519844448 (estimated locally) (FALLTHRU)
;;              56 [0.0% (guessed)]  count:208021 (estimated locally)

;; basic block 81, loop depth 0, count 519906852 (estimated locally), maybe hot
;;  prev block 80, next block 82, flags: (RTL)
;;  pred:       80 [100.0% (guessed)]  count:519844448 (estimated locally) (FALLTHRU)
(note 481 480 482 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 483 81 (parallel [
            (set (reg:DI 168 [ _184 ])
                (plus:DI (reg:DI 167 [ _182 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 483 482 485 81 (set (mem:DI (reg/f:DI 86 [ _23 ]) [7 MEM[(struct PyObject *)_23].ob_refcnt+0 S8 A64])
        (reg:DI 168 [ _184 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 485 483 486 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 168 [ _184 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 486 485 487 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 490)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 490)
;;  succ:       83 [67.0% (guessed)]  count:348337592 (estimated locally)
;;              82 [33.0% (guessed)]  count:171569260 (estimated locally) (FALLTHRU)

;; basic block 82, loop depth 0, count 171569261 (estimated locally), maybe hot
;;  prev block 81, next block 83, flags: (RTL)
;;  pred:       81 [33.0% (guessed)]  count:171569260 (estimated locally) (FALLTHRU)
(note 487 486 488 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 489 82 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _23 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 489 488 490 82 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -24 [0xffffffffffffffe8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       83 [always]  count:171569261 (estimated locally) (FALLTHRU)

;; basic block 83, loop depth 0, count 742724075 (estimated locally), maybe hot
;;  prev block 82, next block 84, flags: (RTL)
;;  pred:       79 [30.0% (guessed)]  count:222879627 (estimated locally) (FALLTHRU)
;;              82 [always]  count:171569261 (estimated locally) (FALLTHRU)
;;              81 [67.0% (guessed)]  count:348337592 (estimated locally)
(code_label 490 489 491 83 1139 (nil) [1 uses])
(note 491 490 492 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 83 (set (reg/f:DI 164 [ _179 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -176 [0xffffffffffffff50])) [31 D.280350.m_ptr+0 S8 A128])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 493 492 496 83 (set (reg:DI 165 [ _180 ])
        (mem:DI (reg/f:DI 164 [ _179 ]) [7 MEM[(const struct PyObject *)_179].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 496 493 497 83 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 165 [ _180 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 497 496 498 83 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 394)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 394)
;;  succ:       84 [100.0% (guessed)]  count:742426986 (estimated locally) (FALLTHRU)
;;              60 [0.0% (guessed)]  count:297089 (estimated locally)

;; basic block 84, loop depth 0, count 742426986 (estimated locally), maybe hot
;;  prev block 83, next block 85, flags: (RTL)
;;  pred:       83 [100.0% (guessed)]  count:742426986 (estimated locally) (FALLTHRU)
(note 498 497 499 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 499 498 500 84 (parallel [
            (set (reg:DI 166 [ _181 ])
                (plus:DI (reg:DI 165 [ _180 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 500 499 501 84 (set (mem:DI (reg/f:DI 164 [ _179 ]) [7 _179->ob_refcnt+0 S8 A64])
        (reg:DI 166 [ _181 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 501 500 502 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 166 [ _181 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 502 501 503 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 506)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 506)
;;  succ:       86 [67.0% (guessed)]  count:497426082 (estimated locally)
;;              85 [33.0% (guessed)]  count:245000904 (estimated locally) (FALLTHRU)

;; basic block 85, loop depth 0, count 245000906 (estimated locally), maybe hot
;;  prev block 84, next block 86, flags: (RTL)
;;  pred:       84 [33.0% (guessed)]  count:245000904 (estimated locally) (FALLTHRU)
(note 503 502 504 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 505 85 (set (reg:DI 5 di)
        (reg/f:DI 164 [ _179 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 505 504 506 85 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -44 [0xffffffffffffffd4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       86 [always]  count:245000906 (estimated locally) (FALLTHRU)

;; basic block 86, loop depth 0, count 742426986 (estimated locally), maybe hot
;;  prev block 85, next block 87, flags: (RTL)
;;  pred:       84 [67.0% (guessed)]  count:497426082 (estimated locally)
;;              85 [always]  count:245000906 (estimated locally) (FALLTHRU)
(code_label 506 505 507 86 1141 (nil) [1 uses])
(note 507 506 508 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 86 (set (reg/f:DI 161 [ _176 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -184 [0xffffffffffffff48])) [31 D.280093.m_ptr+0 S8 A64])) "/usr/include/boost/python/object_core.hpp":422:5 74 {*movdi_internal}
     (nil))
(insn 509 508 512 86 (set (reg:DI 162 [ _177 ])
        (mem:DI (reg/f:DI 161 [ _176 ]) [7 MEM[(const struct PyObject *)_176].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 512 509 513 86 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 162 [ _177 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object_core.hpp":422:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 513 512 514 86 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 394)
            (pc))) "/usr/include/boost/python/object_core.hpp":422:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 394)
;;  succ:       87 [100.0% (guessed)]  count:742130016 (estimated locally) (FALLTHRU)
;;              60 [0.0% (guessed)]  count:296970 (estimated locally)

;; basic block 87, loop depth 0, count 742130017 (estimated locally), maybe hot
;;  prev block 86, next block 88, flags: (RTL)
;;  pred:       86 [100.0% (guessed)]  count:742130016 (estimated locally) (FALLTHRU)
(note 514 513 515 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 515 514 516 87 (parallel [
            (set (reg:DI 163 [ _178 ])
                (plus:DI (reg:DI 162 [ _177 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 516 515 517 87 (set (mem:DI (reg/f:DI 161 [ _176 ]) [7 _176->ob_refcnt+0 S8 A64])
        (reg:DI 163 [ _178 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 517 516 518 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 163 [ _178 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 518 517 519 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 522)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 522)
;;  succ:       89 [67.0% (guessed)]  count:497227113 (estimated locally)
;;              88 [33.0% (guessed)]  count:244902904 (estimated locally) (FALLTHRU)

;; basic block 88, loop depth 0, count 244902902 (estimated locally), maybe hot
;;  prev block 87, next block 89, flags: (RTL)
;;  pred:       87 [33.0% (guessed)]  count:244902904 (estimated locally) (FALLTHRU)
(note 519 518 520 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 520 519 521 88 (set (reg:DI 5 di)
        (reg/f:DI 161 [ _176 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 521 520 522 88 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -43 [0xffffffffffffffd5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       89 [always]  count:244902902 (estimated locally) (FALLTHRU)

;; basic block 89, loop depth 0, count 742130017 (estimated locally), maybe hot
;;  prev block 88, next block 90, flags: (RTL)
;;  pred:       87 [67.0% (guessed)]  count:497227113 (estimated locally)
;;              88 [always]  count:244902902 (estimated locally) (FALLTHRU)
(code_label 522 521 523 89 1142 (nil) [1 uses])
(note 523 522 524 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 525 89 (set (mem/f:DI (reg/v/f:DI 184 [ data ]) [43 data_6(D)->convertible+0 S8 A64])
        (reg/v/f:DI 82 [ storage ])) "src/ChineseCheckersWrapper.cpp":83:27 74 {*movdi_internal}
     (nil))
(insn 525 524 526 89 (set (reg/f:DI 83 [ _9 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -192 [0xffffffffffffff40])) [31 handle.m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 526 525 527 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ _9 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 527 526 531 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 531)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 531)
;;  succ:       99 [30.0% (guessed)]  count:222639003 (estimated locally) (FALLTHRU)
;;              90 [70.0% (guessed)]  count:519491014 (estimated locally)

;; basic block 90, loop depth 0, count 519491016 (estimated locally), maybe hot
;;  prev block 89, next block 91, flags: (RTL)
;;  pred:       89 [70.0% (guessed)]  count:519491014 (estimated locally)
(code_label 531 527 532 90 1143 (nil) [1 uses])
(note 532 531 533 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 533 532 536 90 (set (reg:DI 159 [ _173 ])
        (mem:DI (reg/f:DI 83 [ _9 ]) [7 MEM[(const struct PyObject *)_9].ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":131:16 74 {*movdi_internal}
     (nil))
(insn 536 533 537 90 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 159 [ _173 ])
            (const_int 0 [0]))) "/usr/include/boost/python/refcount.hpp":37:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 537 536 538 90 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) "/usr/include/boost/python/refcount.hpp":37:5 806 {*jcc}
     (int_list:REG_BR_PROB 429500 (nil))
 -> 376)
;;  succ:       91 [100.0% (guessed)]  count:519283220 (estimated locally) (FALLTHRU)
;;              56 [0.0% (guessed)]  count:207796 (estimated locally)

;; basic block 91, loop depth 0, count 519345557 (estimated locally), maybe hot
;;  prev block 90, next block 92, flags: (RTL)
;;  pred:       90 [100.0% (guessed)]  count:519283220 (estimated locally) (FALLTHRU)
(note 538 537 539 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 539 538 540 91 (parallel [
            (set (reg:DI 160 [ _175 ])
                (plus:DI (reg:DI 159 [ _173 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (nil))
(insn 540 539 542 91 (set (mem:DI (reg/f:DI 83 [ _9 ]) [7 MEM[(struct PyObject *)_9].ob_refcnt+0 S8 A64])
        (reg:DI 160 [ _175 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 542 540 543 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 160 [ _175 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 543 542 544 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 577)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 577)
;;  succ:       99 [67.0% (guessed)]  count:347961524 (estimated locally)
;;              92 [33.0% (guessed)]  count:171384033 (estimated locally) (FALLTHRU)

;; basic block 92, loop depth 0, count 171384030 (estimated locally), maybe hot
;;  prev block 91, next block 93, flags: (RTL)
;;  pred:       91 [33.0% (guessed)]  count:171384033 (estimated locally) (FALLTHRU)
(note 544 543 545 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 545 544 546 92 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _9 ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 546 545 613 92 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -23 [0xffffffffffffffe9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       99 [always]  count:171384030 (estimated locally) (FALLTHRU)

;; basic block 93, loop depth 0, count 0 (precise), probably never executed
;;  prev block 92, next block 94, flags: (RTL)
;;  pred:       6 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 613 546 616 93 1153 (nil) [1 uses])
(note 616 613 614 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 614 616 551 93 (set (reg:DI 248)
        (reg:DI 0 ax)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
;;  succ:       94 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 94, loop depth 0, count 0 (precise), probably never executed
;;  prev block 93, next block 95, flags: (RTL)
;;  pred:       93 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              72 [always]  count:0 (precise) (FALLTHRU)
(code_label 551 614 552 94 1135 (nil) [0 uses])
(note 552 551 553 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 553 552 554 94 (set (reg:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -168 [0xffffffffffffff58])) [31 MEM[(struct handle *)&D.280350 + 8B].m_p+0 S8 A64])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 554 553 555 94 (set (reg:DI 5 di)
        (reg:DI 250)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 555 554 556 94 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -27 [0xffffffffffffffe5])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 556 555 557 94 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 557 556 558 94 (set (reg:DI 5 di)
        (reg:DI 251)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 558 557 559 94 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 559 558 607 94 (set (reg:DI 252)
        (reg:DI 248)) 74 {*movdi_internal}
     (nil))
;;  succ:       96 [always]  count:0 (precise) (FALLTHRU)

;; basic block 95, loop depth 0, count 0 (precise), probably never executed
;;  prev block 94, next block 96, flags: (RTL)
;;  pred:       5 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 607 559 612 95 1152 (nil) [1 uses])
(note 612 607 608 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 608 612 561 95 (set (reg:DI 252)
        (reg:DI 0 ax)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
;;  succ:       96 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 96, loop depth 0, count 0 (precise), probably never executed
;;  prev block 95, next block 97, flags: (RTL)
;;  pred:       95 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              94 [always]  count:0 (precise) (FALLTHRU)
(code_label 561 608 562 96 1146 (nil) [0 uses])
(note 562 561 563 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 563 562 564 96 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object_core.hpp":238:9 210 {*adddi_1}
     (nil))
(insn 564 563 565 96 (set (reg:DI 5 di)
        (reg:DI 254)) "/usr/include/boost/python/object_core.hpp":238:9 74 {*movdi_internal}
     (nil))
(call_insn 565 564 566 96 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object_core.hpp":238:9 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python3api11object_baseD2Ev") [flags 0x1]  <function_decl 0x7f1a39ccf400 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 566 565 601 96 (set (reg:DI 255)
        (reg:DI 252)) 74 {*movdi_internal}
     (nil))
;;  succ:       98 [always]  count:0 (precise) (FALLTHRU)

;; basic block 97, loop depth 0, count 0 (precise), probably never executed
;;  prev block 96, next block 98, flags: (RTL)
;;  pred:       4 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 601 566 606 97 1151 (nil) [1 uses])
(note 606 601 602 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 602 606 568 97 (set (reg:DI 255)
        (reg:DI 0 ax)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
;;  succ:       98 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 98, loop depth 0, count 0 (precise), probably never executed
;;  prev block 97, next block 99, flags: (RTL)
;;  pred:       97 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              96 [always]  count:0 (precise) (FALLTHRU)
(code_label 568 602 569 98 1147 (nil) [0 uses])
(note 569 568 570 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 571 98 (set (reg:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -192 [0xffffffffffffff40])) [31 handle.m_p+0 S8 A128])) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(insn 571 570 572 98 (set (reg:DI 5 di)
        (reg:DI 257)) "/usr/include/boost/python/handle.hpp":184:20 74 {*movdi_internal}
     (nil))
(call_insn 572 571 573 98 (call (mem:QI (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>) [0 xdecref S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/handle.hpp":184:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -28 [0xffffffffffffffe4])
        (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5boost6python7xdecrefI7_objectEEvPT_") [flags 0x1]  <function_decl 0x7f1a39175e00 xdecref>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 573 572 574 98 (set (reg/f:DI 174 [ D.330870 ])
        (reg:DI 255)) 74 {*movdi_internal}
     (nil))
(insn 574 573 575 98 (set (reg:DI 5 di)
        (reg/f:DI 174 [ D.330870 ])) 74 {*movdi_internal}
     (nil))
(call_insn 575 574 577 98 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 99, loop depth 0, count 741922222 (estimated locally), maybe hot
;;  prev block 98, next block 100, flags: (RTL)
;;  pred:       92 [always]  count:171384030 (estimated locally) (FALLTHRU)
;;              89 [30.0% (guessed)]  count:222639003 (estimated locally) (FALLTHRU)
;;              91 [67.0% (guessed)]  count:347961524 (estimated locally)
(code_label 577 575 584 99 1096 (nil) [1 uses])
(note 584 577 578 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 578 584 579 99 (set (reg/f:DI 258)
        (const_int 40 [0x28])) "src/ChineseCheckersWrapper.cpp":84:5 74 {*movdi_internal}
     (nil))
(insn 579 578 580 99 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.330871+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 258) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "src/ChineseCheckersWrapper.cpp":84:5 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 580 579 599 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 583)
            (pc))) "src/ChineseCheckersWrapper.cpp":84:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 583)
;;  succ:       101 [100.0% (guessed)]  count:741625454 (estimated locally)
;;              100 [0.0% (guessed)]  count:296768 (estimated locally) (FALLTHRU)

;; basic block 100, loop depth 0, count 296768 (estimated locally)
;;  prev block 99, next block 101, flags: (RTL)
;;  pred:       99 [0.0% (guessed)]  count:296768 (estimated locally) (FALLTHRU)
(note 599 580 581 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(call_insn 581 599 583 100 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "src/ChineseCheckersWrapper.cpp":84:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 101, loop depth 0, count 741625454 (estimated locally), maybe hot
;;  prev block 100, next block 1, flags: (RTL)
;;  pred:       99 [100.0% (guessed)]  count:741625454 (estimated locally)
(code_label 583 581 600 101 1148 (nil) [1 uses])
(note 600 583 0 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:741625454 (estimated locally) (FALLTHRU)


;; Function std::_Rb_tree<std::vector<std::vector<Color> >, std::pair<const std::vector<std::vector<Color> >, int>, std::_Select1st<std::pair<const std::vector<std::vector<Color> >, int> >, std::less<std::vector<std::vector<Color> > >, std::allocator<std::pair<const std::vector<std::vector<Color> >, int> > >::_M_copy.isra (_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_.isra.0, funcdef_no=13814, decl_uid=328767, cgraph_uid=6472, symbol_order=8339)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 236223200 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:236223200 (estimated locally) (FALLTHRU)
(note 17 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 17 3 2 (set (reg/v/f:DI 167 [ __x ])
        (reg:DI 5 di [ __x ])) "/usr/include/c++/11/bits/stl_tree.h":1845:7 74 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 168 [ __p ])
        (reg:DI 4 si [ __p ])) "/usr/include/c++/11/bits/stl_tree.h":1845:7 74 {*movdi_internal}
     (nil))
(note 4 3 19 2 NOTE_INSN_FUNCTION_BEG)
(insn 19 4 20 2 (set (reg:DI 5 di)
        (const_int 64 [0x40])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 169)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 169)
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 166 [ <retval> ])
        (reg/f:DI 169)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 97 [ _61 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 167 [ __x ])
                (const_int 40 [0x28])) [115 MEM[(const struct vector *)__x_1(D) + 32B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:40 74 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 98 [ _62 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 167 [ __x ])
                (const_int 32 [0x20])) [115 MEM[(const struct vector *)__x_1(D) + 32B].D.254077._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:66 74 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 99 [ _63 ])
                (minus:DI (reg/f:DI 97 [ _61 ])
                    (reg/f:DI 98 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (nil))
(insn 26 25 27 2 (set (reg:V2DI 170)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 27 26 28 2 (set (mem:V2DI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 32 [0x20])) [115 MEM <vector(2) long unsigned int> [(struct vector * *)_59 + 32B]+0 S16 A64])
        (reg:V2DI 170)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 28 27 29 2 (set (mem/f:DI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 48 [0x30])) [115 MEM[(struct _Vector_impl_data *)_59 + 32B]._M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 99 [ _63 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 30 29 31 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 449)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 449)
;;  succ:       3 [54.7% (guessed)]  count:129143224 (estimated locally) (FALLTHRU)
;;              9 [45.3% (guessed)]  count:107079976 (estimated locally)

;; basic block 3, loop depth 0, count 116228901 (estimated locally), maybe hot
;; Invalid sum of incoming counts 129143224 (estimated locally), should be 116228901 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [54.7% (guessed)]  count:129143224 (estimated locally) (FALLTHRU)
(note 31 30 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 35 3 (set (reg:DI 134 [ prephitmp_141 ])
        (reg:DI 99 [ _63 ])) 74 {*movdi_internal}
     (nil))
(insn 35 32 36 3 (set (reg:DI 171)
        (const_int 9223372036854775800 [0x7ffffffffffffff8])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 134 [ prephitmp_141 ])
            (reg:DI 171))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 37 36 38 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 50)
;;  succ:       4 [10.0% (guessed)]  count:11622890 (estimated locally) (FALLTHRU)
;;              7 [90.0% (guessed)]  count:104606011 (estimated locally)

;; basic block 4, loop depth 0, count 11622890 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [10.0% (guessed)]  count:11622890 (estimated locally) (FALLTHRU)
(note 38 37 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 38 42 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 99 [ _63 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 42 41 43 4 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 46)
;;  succ:       5 [50.0% (guessed)]  count:5811445 (estimated locally) (FALLTHRU)
;;              6 [50.0% (guessed)]  count:5811445 (estimated locally)

;; basic block 5, loop depth 0, count 5811445 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [50.0% (guessed)]  count:5811445 (estimated locally) (FALLTHRU)
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 44 43 46 5 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 6, loop depth 0, count 5811445 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [50.0% (guessed)]  count:5811445 (estimated locally)
(code_label 46 44 47 6 1202 (nil) [1 uses])
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 48 47 50 6 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 7, loop depth 0, count 104606010 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       3 [90.0% (guessed)]  count:104606011 (estimated locally)
(code_label 50 48 51 7 1201 (nil) [1 uses])
(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 7 (set (reg:DI 5 di)
        (reg:DI 134 [ prephitmp_141 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 53 52 475 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 [always (adjusted)]  count:104606010 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 104606010 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always (adjusted)]  count:104606010 (estimated locally) (FALLTHRU)
(note 475 53 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 475 55 8 (set (reg/f:DI 172)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 172)
        (nil)))
(insn 55 54 57 8 (set (reg/f:DI 106 [ iftmp.58_78 ])
        (reg/f:DI 172)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 57 55 58 8 (set (reg/f:DI 97 [ _61 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 167 [ __x ])
                (const_int 40 [0x28])) [115 MEM[(const struct vector * const &)__x_1(D) + 40]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 58 57 449 8 (set (reg/f:DI 98 [ _62 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 167 [ __x ])
                (const_int 32 [0x20])) [115 MEM[(const struct vector * const &)__x_1(D) + 32]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
;;  succ:       10 [always]  count:104606010 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 107079976 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       2 [45.3% (guessed)]  count:107079976 (estimated locally)
(code_label 449 58 448 9 1238 (nil) [1 uses])
(note 448 449 5 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 5 448 6 9 (set (reg:DI 134 [ prephitmp_141 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 6 5 59 9 (set (reg/f:DI 106 [ iftmp.58_78 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       10 [always]  count:107079976 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 0, count 200977990 (estimated locally), maybe hot
;; Invalid sum of incoming counts 211685986 (estimated locally), should be 200977990 (estimated locally)
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [always]  count:107079976 (estimated locally) (FALLTHRU)
;;              8 [always]  count:104606010 (estimated locally) (FALLTHRU)
(code_label 59 6 60 10 1200 (nil) [0 uses])
(note 60 59 61 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 10 (set (reg:DI 96 [ _56 ])
        (reg/f:DI 106 [ iftmp.58_78 ])) 74 {*movdi_internal}
     (nil))
(insn 62 61 63 10 (set (reg:V2DI 173)
        (vec_duplicate:V2DI (reg:DI 96 [ _56 ]))) "/usr/include/c++/11/bits/stl_vector.h":361:25 5014 {*vec_dupv2di}
     (nil))
(insn 63 62 64 10 (set (mem:V2DI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 32 [0x20])) [115 MEM <vector(2) long unsigned int> [(struct vector * *)_59 + 32B]+0 S16 A64])
        (reg:V2DI 173)) "/usr/include/c++/11/bits/stl_vector.h":361:25 1439 {movv2di_internal}
     (nil))
(insn 64 63 65 10 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 106 [ iftmp.58_78 ])
                    (reg:DI 134 [ prephitmp_141 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 65 64 66 10 (set (mem/f:DI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 48 [0x30])) [115 MEM[(struct _Vector_base *)_59 + 32B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])
        (reg:DI 174)) "/usr/include/c++/11/bits/stl_vector.h":363:59 74 {*movdi_internal}
     (nil))
(insn 66 65 67 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ _61 ])
            (reg/f:DI 98 [ _62 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 67 66 68 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 451)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 451)
;;  succ:       11 [89.0% (guessed)]  count:178870411 (estimated locally) (FALLTHRU)
;;              24 [11.0% (guessed)]  count:22107579 (estimated locally)

;; basic block 11, loop depth 0, count 178870411 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [89.0% (guessed)]  count:178870411 (estimated locally) (FALLTHRU)
(note 68 67 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 7 11 (set (reg:DI 110 [ ivtmp.2493 ])
        (reg/f:DI 98 [ _62 ])) 74 {*movdi_internal}
     (nil))
(insn 7 69 141 11 (set (reg/v/f:DI 108 [ __cur ])
        (reg/f:DI 106 [ iftmp.58_78 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":88:21 74 {*movdi_internal}
     (nil))
;;  succ:       12 [always]  count:178870411 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 1, count 1127408190 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       23 [always]  count:948537778 (estimated locally) (FALLTHRU)
;;              11 [always]  count:178870411 (estimated locally) (FALLTHRU)
(code_label 141 7 70 12 1209 (nil) [0 uses])
(note 70 141 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 12 (set (reg/f:DI 161 [ _219 ])
        (reg:DI 110 [ ivtmp.2493 ])) 74 {*movdi_internal}
     (nil))
(insn 72 71 73 12 (set (reg/f:DI 175)
        (mem/f:DI (plus:DI (reg/f:DI 161 [ _219 ])
                (const_int 8 [0x8])) [118 MEM[(Color * *)_219 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:50 74 {*movdi_internal}
     (nil))
(insn 73 72 74 12 (parallel [
            (set (reg:DI 113 [ _98 ])
                (minus:DI (reg/f:DI 175)
                    (mem/f:DI (reg/f:DI 161 [ _219 ]) [118 MEM[(Color * *)_219]+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 161 [ _219 ])
                    (const_int 8 [0x8])) [118 MEM[(Color * *)_219 + 8B]+0 S8 A64])
            (mem/f:DI (reg/f:DI 161 [ _219 ]) [118 MEM[(Color * *)_219]+0 S8 A64]))
        (nil)))
(insn 74 73 75 12 (set (reg:V2DI 176)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 75 74 76 12 (set (mem:V2DI (reg/v/f:DI 108 [ __cur ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__cur_66]+0 S16 A64])
        (reg:V2DI 176)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 76 75 77 12 (set (mem/f:DI (plus:DI (reg/v/f:DI 108 [ __cur ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__cur_66 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 77 76 78 12 (set (reg:DI 105 [ _75 ])
        (reg:DI 113 [ _98 ])) 74 {*movdi_internal}
     (nil))
(insn 78 77 79 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 113 [ _98 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 79 78 80 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 456)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 456)
;;  succ:       13 [54.7% (guessed)]  count:616354058 (estimated locally) (FALLTHRU)
;;              19 [45.3% (guessed)]  count:511054132 (estimated locally)

;; basic block 13, loop depth 1, count 616354058 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [54.7% (guessed)]  count:616354058 (estimated locally) (FALLTHRU)
(note 80 79 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 83 80 84 13 (set (reg:DI 177)
        (const_int 9223372036854775804 [0x7ffffffffffffffc])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 84 83 85 13 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 105 [ _75 ])
            (reg:DI 177))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 85 84 86 13 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 98)
;;  succ:       14 [10.0% (guessed)]  count:61635407 (estimated locally) (FALLTHRU)
;;              17 [90.0% (guessed)]  count:554718651 (estimated locally)

;; basic block 14, loop depth 0, count 61635406 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [10.0% (guessed)]  count:61635407 (estimated locally) (FALLTHRU)
(note 86 85 89 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 89 86 90 14 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 113 [ _98 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 90 89 91 14 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 94)
;;  succ:       15 [50.0% (guessed)]  count:30817703 (estimated locally) (FALLTHRU)
;;              16 [50.0% (guessed)]  count:30817703 (estimated locally)

;; basic block 15, loop depth 0, count 30817704 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [50.0% (guessed)]  count:30817703 (estimated locally) (FALLTHRU)
(note 91 90 92 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 92 91 94 15 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 7 [0x7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       26 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 16, loop depth 0, count 30817704 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       14 [50.0% (guessed)]  count:30817703 (estimated locally)
(code_label 94 92 95 16 1206 (nil) [1 uses])
(note 95 94 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(call_insn 96 95 98 16 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 7 [0x7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       26 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 17, loop depth 1, count 554718652 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       13 [90.0% (guessed)]  count:554718651 (estimated locally)
(code_label 98 96 99 17 1205 (nil) [1 uses])
(note 99 98 100 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 17 (set (reg:DI 5 di)
        (reg:DI 105 [ _75 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 101 100 476 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 7 [0x7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       26 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              18 [always (adjusted)]  count:554718652 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 1, count 554718652 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [always (adjusted)]  count:554718652 (estimated locally) (FALLTHRU)
(note 476 101 102 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 102 476 103 18 (set (reg/f:DI 178)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 178)
        (nil)))
(insn 103 102 456 18 (set (reg/f:DI 120 [ iftmp.47_110 ])
        (reg/f:DI 178)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
;;  succ:       20 [always]  count:554718652 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 1, count 511054132 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       12 [45.3% (guessed)]  count:511054132 (estimated locally)
(code_label 456 103 455 19 1240 (nil) [1 uses])
(note 455 456 8 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 8 455 104 19 (set (reg/f:DI 120 [ iftmp.47_110 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       20 [always]  count:511054132 (estimated locally) (FALLTHRU)

;; basic block 20, loop depth 1, count 1065772784 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [always]  count:511054132 (estimated locally) (FALLTHRU)
;;              18 [always]  count:554718652 (estimated locally) (FALLTHRU)
(code_label 104 8 105 20 1204 (nil) [0 uses])
(note 105 104 106 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 20 (set (reg:DI 127 [ _130 ])
        (reg/f:DI 120 [ iftmp.47_110 ])) 74 {*movdi_internal}
     (nil))
(insn 107 106 108 20 (set (reg:V2DI 179)
        (vec_duplicate:V2DI (reg:DI 127 [ _130 ]))) "/usr/include/c++/11/bits/stl_vector.h":361:25 5014 {*vec_dupv2di}
     (nil))
(insn 108 107 109 20 (set (mem:V2DI (reg/v/f:DI 108 [ __cur ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__cur_66]+0 S16 A64])
        (reg:V2DI 179)) "/usr/include/c++/11/bits/stl_vector.h":361:25 1439 {movv2di_internal}
     (nil))
(insn 109 108 110 20 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 120 [ iftmp.47_110 ])
                    (reg:DI 105 [ _75 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 110 109 111 20 (set (mem/f:DI (plus:DI (reg/v/f:DI 108 [ __cur ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__cur_66 + 16B]+0 S8 A64])
        (reg:DI 180)) "/usr/include/c++/11/bits/stl_vector.h":363:59 74 {*movdi_internal}
     (nil))
(insn 111 110 112 20 (set (reg/f:DI 115 [ _102 ])
        (mem/f:DI (plus:DI (reg/f:DI 161 [ _219 ])
                (const_int 8 [0x8])) [118 MEM[(const Color * const &)_219 + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 112 111 113 20 (set (reg/f:DI 116 [ _103 ])
        (mem/f:DI (reg/f:DI 161 [ _219 ]) [118 MEM[(const Color * const &)_219]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 113 112 114 20 (parallel [
            (set (reg:DI 117 [ _104 ])
                (minus:DI (reg/f:DI 115 [ _102 ])
                    (reg/f:DI 116 [ _103 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":429:34 283 {*subdi_1}
     (nil))
(insn 114 113 115 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 115 [ _102 ])
            (reg/f:DI 116 [ _103 ]))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 12 {*cmpdi_1}
     (nil))
(jump_insn 115 114 116 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 806 {*jcc}
     (int_list:REG_BR_PROB 574129756 (nil))
 -> 126)
;;  succ:       22 [53.5% (guessed)]  count:569868706 (estimated locally)
;;              21 [46.5% (guessed)]  count:495904078 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 1, count 495904078 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [46.5% (guessed)]  count:495904078 (estimated locally) (FALLTHRU)
(note 116 115 117 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 21 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 120 [ iftmp.47_110 ])
                    (reg:DI 117 [ _104 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":432:22 210 {*adddi_1}
     (nil))
(insn 118 117 119 21 (set (mem/f:DI (plus:DI (reg/v/f:DI 108 [ __cur ])
                (const_int 8 [0x8])) [118 MEM[(Color * *)__cur_66 + 8B]+0 S8 A64])
        (reg:DI 181)) "/usr/include/c++/11/bits/stl_algobase.h":432:22 74 {*movdi_internal}
     (nil))
(insn 119 118 120 21 (parallel [
            (set (reg/v/f:DI 108 [ __cur ])
                (plus:DI (reg/v/f:DI 108 [ __cur ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:45 210 {*adddi_1}
     (nil))
(insn 120 119 121 21 (parallel [
            (set (reg:DI 110 [ ivtmp.2493 ])
                (plus:DI (reg:DI 110 [ ivtmp.2493 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 210 {*adddi_1}
     (nil))
(insn 121 120 122 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ _61 ])
            (reg:DI 110 [ ivtmp.2493 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 122 121 126 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 139)
;;  succ:       23 [89.0% (guessed)]  count:441354630 (estimated locally)
;;              25 [11.0% (guessed)]  count:54549448 (estimated locally) (FALLTHRU)

;; basic block 22, loop depth 1, count 569868706 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       20 [53.5% (guessed)]  count:569868706 (estimated locally)
(code_label 126 122 127 22 1207 (nil) [1 uses])
(note 127 126 128 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 22 (set (reg:DI 118 [ _105 ])
        (reg:DI 117 [ _104 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 129 128 130 22 (set (reg:DI 1 dx)
        (reg:DI 118 [ _105 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 130 129 131 22 (set (reg:DI 4 si)
        (reg/f:DI 116 [ _103 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 131 130 132 22 (set (reg:DI 5 di)
        (reg/f:DI 120 [ iftmp.47_110 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(call_insn 132 131 133 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_algobase.h":431:23 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 133 132 134 22 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 120 [ iftmp.47_110 ])
                    (reg:DI 118 [ _105 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":432:22 210 {*adddi_1}
     (nil))
(insn 134 133 135 22 (set (mem/f:DI (plus:DI (reg/v/f:DI 108 [ __cur ])
                (const_int 8 [0x8])) [118 MEM[(Color * *)__cur_66 + 8B]+0 S8 A64])
        (reg:DI 182)) "/usr/include/c++/11/bits/stl_algobase.h":432:22 74 {*movdi_internal}
     (nil))
(insn 135 134 136 22 (parallel [
            (set (reg/v/f:DI 108 [ __cur ])
                (plus:DI (reg/v/f:DI 108 [ __cur ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:45 210 {*adddi_1}
     (nil))
(insn 136 135 137 22 (parallel [
            (set (reg:DI 110 [ ivtmp.2493 ])
                (plus:DI (reg:DI 110 [ ivtmp.2493 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 210 {*adddi_1}
     (nil))
(insn 137 136 138 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ _61 ])
            (reg:DI 110 [ ivtmp.2493 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 138 137 139 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 144)
;;  succ:       23 [89.0% (guessed)]  count:507183149 (estimated locally) (FALLTHRU)
;;              25 [11.0% (guessed)]  count:62685557 (estimated locally)

;; basic block 23, loop depth 1, count 948537778 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [89.0% (guessed)]  count:507183149 (estimated locally) (FALLTHRU)
;;              21 [89.0% (guessed)]  count:441354630 (estimated locally)
(code_label 139 138 140 23 1208 (nil) [1 uses])
(note 140 139 451 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
;;  succ:       12 [always]  count:948537778 (estimated locally) (FALLTHRU)

;; basic block 24, loop depth 0, count 22107579 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       10 [11.0% (guessed)]  count:22107579 (estimated locally)
(code_label 451 140 450 24 1239 (nil) [1 uses])
(note 450 451 9 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 9 450 144 24 (set (reg/v/f:DI 108 [ __cur ])
        (reg/f:DI 106 [ iftmp.58_78 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":88:21 74 {*movdi_internal}
     (nil))
;;  succ:       25 [always]  count:22107579 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 0, count 139342584 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       22 [11.0% (guessed)]  count:62685557 (estimated locally)
;;              24 [always]  count:22107579 (estimated locally) (FALLTHRU)
;;              21 [11.0% (guessed)]  count:54549448 (estimated locally) (FALLTHRU)
(code_label 144 9 145 25 1203 (nil) [1 uses])
(note 145 144 146 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 25 (set (mem/f:DI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 40 [0x28])) [115 MEM[(struct vector *)_59 + 32B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])
        (reg/v/f:DI 108 [ __cur ])) "/usr/include/c++/11/bits/stl_vector.h":557:26 74 {*movdi_internal}
     (nil))
(insn 147 146 148 25 (set (reg:SI 183)
        (mem:SI (plus:DI (reg/v/f:DI 167 [ __x ])
                (const_int 56 [0x38])) [35 MEM[(const struct pair &)__x_1(D) + 32].second+0 S4 A64])) "/usr/include/c++/11/bits/stl_pair.h":314:17 75 {*movsi_internal}
     (nil))
(insn 148 147 149 25 (set (mem:SI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 56 [0x38])) [35 MEM[(struct pair *)_59 + 32B].second+0 S4 A64])
        (reg:SI 183)) "/usr/include/c++/11/bits/stl_pair.h":314:17 75 {*movsi_internal}
     (nil))
(insn 149 148 150 25 (set (reg:SI 184)
        (mem:SI (reg/v/f:DI 167 [ __x ]) [112 __x_1(D)->D.309030._M_color+0 S4 A64])) "/usr/include/c++/11/bits/stl_tree.h":646:20 75 {*movsi_internal}
     (nil))
(insn 150 149 151 25 (set (mem:SI (reg/f:DI 166 [ <retval> ]) [112 _59->D.309030._M_color+0 S4 A64])
        (reg:SI 184)) "/usr/include/c++/11/bits/stl_tree.h":646:20 75 {*movsi_internal}
     (nil))
(insn 151 150 152 25 (set (mem/f:DI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 16 [0x10])) [110 _59->D.309030._M_left+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":647:19 74 {*movdi_internal}
     (nil))
(insn 152 151 153 25 (set (mem/f:DI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 24 [0x18])) [110 _59->D.309030._M_right+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":648:20 74 {*movdi_internal}
     (nil))
(insn 153 152 154 25 (set (mem/f:DI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 8 [0x8])) [110 _59->D.309030._M_parent+0 S8 A64])
        (reg/v/f:DI 168 [ __p ])) "/usr/include/c++/11/bits/stl_tree.h":1850:19 74 {*movdi_internal}
     (nil))
(insn 154 153 155 25 (set (reg/f:DI 84 [ _8 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 167 [ __x ])
                (const_int 24 [0x18])) [110 __x_1(D)->D.309030._M_right+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":1854:15 74 {*movdi_internal}
     (nil))
(insn 155 154 156 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 84 [ _8 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":1854:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 156 155 502 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) "/usr/include/c++/11/bits/stl_tree.h":1854:6 806 {*jcc}
     (int_list:REG_BR_PROB 574129756 (nil))
 -> 205)
;;  succ:       36 [53.5% (guessed)]  count:74506479 (estimated locally)
;;              38 [46.5% (guessed)]  count:64836105 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 0, count 0 (precise), probably never executed
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       15 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              17 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 502 156 504 26 1251 (nil) [1 uses])
(note 504 502 503 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 503 504 160 26 (set (reg:DI 185)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
;;  succ:       27 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 27, loop depth 0, count 0 (precise), probably never executed
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 160 503 161 27 1212 (nil) [0 uses])
(note 161 160 162 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 27 (set (reg/f:DI 109 [ _93 ])
        (reg:DI 185)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
(insn 163 162 164 27 (set (reg:DI 5 di)
        (reg/f:DI 109 [ _93 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
(call_insn 164 163 165 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 165 164 166 27 (set (reg:DI 4 si)
        (reg/v/f:DI 108 [ __cur ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(insn 166 165 167 27 (set (reg:DI 5 di)
        (reg/f:DI 106 [ iftmp.58_78 ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(call_insn 167 166 168 27 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5ColorSaIS3_EEEEvT_S7_") [flags 0x1]  <function_decl 0x7f1a356a6f00 __destroy>) [0 __destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_construct.h":196:11 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5ColorSaIS3_EEEEvT_S7_") [flags 0x1]  <function_decl 0x7f1a356a6f00 __destroy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(call_insn 168 167 498 27 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_uninitialized.h":98:8 813 {*call}
     (expr_list:REG_EH_REGION (const_int 6 [0x6])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       28 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 28, loop depth 0, count 0 (precise), probably never executed
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 498 168 501 28 1250 (nil) [1 uses])
(note 501 498 499 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 499 501 170 28 (set (reg:DI 187)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
;;  succ:       29 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 29, loop depth 0, count 0 (precise), probably never executed
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 170 499 171 29 1213 (nil) [0 uses])
(note 171 170 172 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn 172 171 173 29 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 813 {*call}
     (expr_list:REG_EH_REGION (const_int -8 [0xfffffffffffffff8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 173 172 175 29 (set (reg:DI 186)
        (reg:DI 187)) 74 {*movdi_internal}
     (nil))
(insn 175 173 176 29 (set (reg/f:DI 102 [ _72 ])
        (mem/f:DI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 32 [0x20])) [115 MEM[(struct _Vector_base *)_59 + 32B]._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
(insn 176 175 177 29 (set (reg/f:DI 190)
        (mem/f:DI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 48 [0x30])) [115 MEM[(struct _Vector_base *)_59 + 32B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 177 176 178 29 (parallel [
            (set (reg:DI 103 [ _73 ])
                (minus:DI (reg/f:DI 190)
                    (reg/f:DI 102 [ _72 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 166 [ <retval> ])
                    (const_int 48 [0x30])) [115 MEM[(struct _Vector_base *)_59 + 32B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])
            (reg/f:DI 102 [ _72 ]))
        (nil)))
(insn 178 177 179 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 102 [ _72 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 179 178 180 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 184)
;;  succ:       30 [never]  count:0 (precise) (FALLTHRU)
;;              31 [never]  count:0 (precise)

;; basic block 30, loop depth 0, count 0 (precise), probably never executed
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 [never]  count:0 (precise) (FALLTHRU)
(note 180 179 181 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 30 (set (reg:DI 4 si)
        (reg:DI 103 [ _73 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 182 181 183 30 (set (reg:DI 5 di)
        (reg/f:DI 102 [ _72 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 183 182 184 30 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       31 [never]  count:0 (precise) (FALLTHRU)

;; basic block 31, loop depth 0, count 0 (precise), probably never executed
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       29 [never]  count:0 (precise)
;;              30 [never]  count:0 (precise) (FALLTHRU)
(code_label 184 183 185 31 1214 (nil) [1 uses])
(note 185 184 186 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 489 31 (set (reg:DI 191)
        (reg:DI 186)) 74 {*movdi_internal}
     (nil))
;;  succ:       33 [always]  count:0 (precise) (FALLTHRU)

;; basic block 32, loop depth 0, count 0 (precise), probably never executed
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       5 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 489 186 494 32 1248 (nil) [1 uses])
(note 494 489 490 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 490 494 188 32 (set (reg:DI 191)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_tree.h":599:4 74 {*movdi_internal}
     (nil))
;;  succ:       33 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 33, loop depth 0, count 0 (precise), probably never executed
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              31 [always]  count:0 (precise) (FALLTHRU)
(code_label 188 490 189 33 1215 (nil) [0 uses])
(note 189 188 190 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 33 (set (reg/f:DI 95 [ _54 ])
        (reg:DI 191)) "/usr/include/c++/11/bits/stl_tree.h":599:4 74 {*movdi_internal}
     (nil))
(insn 191 190 192 33 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _54 ])) "/usr/include/c++/11/bits/stl_tree.h":599:4 74 {*movdi_internal}
     (nil))
(call_insn 192 191 193 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":599:4 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 193 192 194 33 (set (reg:DI 4 si)
        (const_int 64 [0x40])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 194 193 195 33 (set (reg:DI 5 di)
        (reg/f:DI 166 [ <retval> ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 195 194 196 33 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(call_insn 196 195 495 33 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":603:8 813 {*call}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       34 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 34, loop depth 0, count 0 (precise), probably never executed
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 495 196 497 34 1249 (nil) [1 uses])
(note 497 495 496 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 496 497 198 34 (set (reg:DI 193)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_tree.h":599:4 74 {*movdi_internal}
     (nil))
;;  succ:       35 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 35, loop depth 0, count 0 (precise), probably never executed
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       34 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 198 496 199 35 1216 (nil) [0 uses])
(note 199 198 200 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(call_insn 200 199 201 35 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":599:4 813 {*call}
     (expr_list:REG_EH_REGION (const_int -6 [0xfffffffffffffffa])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 201 200 202 35 (set (reg/f:DI 100 [ D.331080 ])
        (reg:DI 193)) 74 {*movdi_internal}
     (nil))
(insn 202 201 203 35 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.331080 ])) 74 {*movdi_internal}
     (nil))
(call_insn 203 202 205 35 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 36, loop depth 0, count 74506479 (estimated locally), maybe hot
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       25 [53.5% (guessed)]  count:74506479 (estimated locally)
(code_label 205 203 206 36 1210 (nil) [1 uses])
(note 206 205 207 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 36 (set (reg:DI 4 si)
        (reg/f:DI 166 [ <retval> ])) "/usr/include/c++/11/bits/stl_tree.h":1856:23 74 {*movdi_internal}
     (nil))
(insn 208 207 209 36 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _8 ])) "/usr/include/c++/11/bits/stl_tree.h":1856:23 74 {*movdi_internal}
     (nil))
(call_insn 209 208 477 36 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ea00 _M_copy.isra>) [0 _M_copy.isra S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":1856:23 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ea00 _M_copy.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       79 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              37 [always (adjusted)]  count:74506479 (estimated locally) (FALLTHRU)

;; basic block 37, loop depth 0, count 74506479 (estimated locally), maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       36 [always (adjusted)]  count:74506479 (estimated locally) (FALLTHRU)
(note 477 209 210 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 210 477 212 37 (set (reg/f:DI 85 [ _10 ])
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_tree.h":1856:23 74 {*movdi_internal}
     (nil))
(insn 212 210 213 37 (set (mem/f:DI (plus:DI (reg/f:DI 166 [ <retval> ])
                (const_int 24 [0x18])) [110 _59->D.309030._M_right+0 S8 A64])
        (reg/f:DI 85 [ _10 ])) "/usr/include/c++/11/bits/stl_tree.h":1855:24 74 {*movdi_internal}
     (nil))
;;  succ:       38 [always]  count:74506479 (estimated locally) (FALLTHRU)

;; basic block 38, loop depth 0, count 139342584 (estimated locally), maybe hot
;;  prev block 37, next block 39, flags: (RTL)
;;  pred:       37 [always]  count:74506479 (estimated locally) (FALLTHRU)
;;              25 [46.5% (guessed)]  count:64836105 (estimated locally) (FALLTHRU)
(code_label 213 212 214 38 1211 (nil) [0 uses])
(note 214 213 215 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 216 38 (set (reg/v/f:DI 86 [ _11 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 167 [ __x ])
                (const_int 16 [0x10])) [110 MEM[(struct _Rb_tree_node_base *)__x_1(D)]._M_left+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":780:52 74 {*movdi_internal}
     (nil))
(insn 216 215 217 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 86 [ _11 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":1860:17 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 217 216 458 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 458)
            (pc))) "/usr/include/c++/11/bits/stl_tree.h":1860:17 806 {*jcc}
     (int_list:REG_BR_PROB 837518628 (nil))
 -> 458)
;;  succ:       39 [78.0% (guessed)]  count:108687216 (estimated locally)
;;              83 [22.0% (guessed)]  count:30655368 (estimated locally) (FALLTHRU)

;; basic block 39, loop depth 0, count 108687216 (estimated locally), maybe hot
;;  prev block 38, next block 40, flags: (RTL)
;;  pred:       38 [78.0% (guessed)]  count:108687216 (estimated locally)
(code_label 458 217 457 39 1241 (nil) [1 uses])
(note 457 458 11 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 11 457 474 39 (set (reg/v/f:DI 126 [ __p ])
        (reg/f:DI 166 [ <retval> ])) "/usr/include/c++/11/bits/stl_tree.h":1860:17 74 {*movdi_internal}
     (nil))
;;  succ:       41 [always]  count:108687216 (estimated locally) (FALLTHRU)

;; basic block 40, loop depth 1, count 92624141 (estimated locally), maybe hot
;;  prev block 39, next block 41, flags: (RTL)
;;  pred:       78 [78.0% (guessed)]  count:92624141 (estimated locally)
(code_label 474 11 473 40 1245 (nil) [1 uses])
(note 473 474 10 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 10 473 221 40 (set (reg/v/f:DI 126 [ __p ])
        (reg/f:DI 125 [ _127 ])) 74 {*movdi_internal}
     (nil))
;;  succ:       41 [always]  count:92624141 (estimated locally) (FALLTHRU,DFS_BACK)

;; basic block 41, loop depth 1, count 201311356 (estimated locally), maybe hot
;;  prev block 40, next block 42, flags: (RTL)
;;  pred:       40 [always]  count:92624141 (estimated locally) (FALLTHRU,DFS_BACK)
;;              39 [always]  count:108687216 (estimated locally) (FALLTHRU)
(code_label 221 10 222 41 1217 (nil) [0 uses])
(note 222 221 223 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 41 (set (reg:DI 5 di)
        (const_int 64 [0x40])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 224 223 478 41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       79 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              42 [always (adjusted)]  count:201311356 (estimated locally) (FALLTHRU)

;; basic block 42, loop depth 1, count 201311356 (estimated locally), maybe hot
;;  prev block 41, next block 43, flags: (RTL)
;;  pred:       41 [always (adjusted)]  count:201311356 (estimated locally) (FALLTHRU)
(note 478 224 225 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 225 478 226 42 (set (reg/f:DI 195)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 195)
        (nil)))
(insn 226 225 228 42 (set (reg/f:DI 125 [ _127 ])
        (reg/f:DI 195)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(insn 228 226 229 42 (set (reg/f:DI 196)
        (mem/f:DI (plus:DI (reg/v/f:DI 86 [ _11 ])
                (const_int 40 [0x28])) [115 MEM[(const struct vector *)__x_140 + 32B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:50 74 {*movdi_internal}
     (nil))
(insn 229 228 230 42 (parallel [
            (set (reg:DI 132 [ _137 ])
                (minus:DI (reg/f:DI 196)
                    (mem/f:DI (plus:DI (reg/v/f:DI 86 [ _11 ])
                            (const_int 32 [0x20])) [115 MEM[(const struct vector *)__x_140 + 32B].D.254077._M_impl.D.253422._M_start+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 86 [ _11 ])
                    (const_int 40 [0x28])) [115 MEM[(const struct vector *)__x_140 + 32B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])
            (mem/f:DI (plus:DI (reg/v/f:DI 86 [ _11 ])
                    (const_int 32 [0x20])) [115 MEM[(const struct vector *)__x_140 + 32B].D.254077._M_impl.D.253422._M_start+0 S8 A64]))
        (nil)))
(insn 230 229 231 42 (set (reg:V2DI 197)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 231 230 232 42 (set (mem:V2DI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 32 [0x20])) [115 MEM <vector(2) long unsigned int> [(struct vector * *)_127 + 32B]+0 S16 A64])
        (reg:V2DI 197)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 232 231 233 42 (set (mem/f:DI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 48 [0x30])) [115 MEM[(struct _Vector_impl_data *)_127 + 32B]._M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 233 232 234 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 132 [ _137 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 234 233 235 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 463)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 463)
;;  succ:       43 [54.7% (guessed)]  count:110056918 (estimated locally) (FALLTHRU)
;;              49 [45.3% (guessed)]  count:91254438 (estimated locally)

;; basic block 43, loop depth 1, count 99051227 (estimated locally), maybe hot
;; Invalid sum of incoming counts 110056918 (estimated locally), should be 99051227 (estimated locally)
;;  prev block 42, next block 44, flags: (RTL)
;;  pred:       42 [54.7% (guessed)]  count:110056918 (estimated locally) (FALLTHRU)
(note 235 234 236 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 239 43 (set (reg:DI 87 [ prephitmp_14 ])
        (reg:DI 132 [ _137 ])) 74 {*movdi_internal}
     (nil))
(insn 239 236 240 43 (set (reg:DI 198)
        (const_int 9223372036854775800 [0x7ffffffffffffff8])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 240 239 241 43 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 87 [ prephitmp_14 ])
            (reg:DI 198))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 241 240 242 43 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 254)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 254)
;;  succ:       44 [10.0% (guessed)]  count:9905123 (estimated locally) (FALLTHRU)
;;              47 [90.0% (guessed)]  count:89146104 (estimated locally)

;; basic block 44, loop depth 0, count 9905123 (estimated locally), maybe hot
;;  prev block 43, next block 45, flags: (RTL)
;;  pred:       43 [10.0% (guessed)]  count:9905123 (estimated locally) (FALLTHRU)
(note 242 241 245 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 245 242 246 44 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 132 [ _137 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 246 245 247 44 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 250)
;;  succ:       45 [50.0% (guessed)]  count:4952562 (estimated locally) (FALLTHRU)
;;              46 [50.0% (guessed)]  count:4952562 (estimated locally)

;; basic block 45, loop depth 0, count 4952562 (estimated locally), maybe hot
;;  prev block 44, next block 46, flags: (RTL)
;;  pred:       44 [50.0% (guessed)]  count:4952562 (estimated locally) (FALLTHRU)
(note 247 246 248 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(call_insn 248 247 250 45 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       72 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 46, loop depth 0, count 4952562 (estimated locally), maybe hot
;;  prev block 45, next block 47, flags: (RTL)
;;  pred:       44 [50.0% (guessed)]  count:4952562 (estimated locally)
(code_label 250 248 251 46 1220 (nil) [1 uses])
(note 251 250 252 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(call_insn 252 251 254 46 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       72 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 47, loop depth 1, count 89146104 (estimated locally), maybe hot
;;  prev block 46, next block 48, flags: (RTL)
;;  pred:       43 [90.0% (guessed)]  count:89146104 (estimated locally)
(code_label 254 252 255 47 1219 (nil) [1 uses])
(note 255 254 256 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 47 (set (reg:DI 5 di)
        (reg:DI 87 [ prephitmp_14 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 257 256 479 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       72 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              48 [always (adjusted)]  count:89146104 (estimated locally) (FALLTHRU)

;; basic block 48, loop depth 1, count 89146104 (estimated locally), maybe hot
;;  prev block 47, next block 49, flags: (RTL)
;;  pred:       47 [always (adjusted)]  count:89146104 (estimated locally) (FALLTHRU)
(note 479 257 258 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 258 479 259 48 (set (reg/f:DI 199)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 199)
        (nil)))
(insn 259 258 463 48 (set (reg/f:DI 141 [ iftmp.58_152 ])
        (reg/f:DI 199)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
;;  succ:       50 [always]  count:89146104 (estimated locally) (FALLTHRU)

;; basic block 49, loop depth 1, count 82128994 (estimated locally), maybe hot
;; Invalid sum of incoming counts 91254438 (estimated locally), should be 82128994 (estimated locally)
;;  prev block 48, next block 50, flags: (RTL)
;;  pred:       42 [45.3% (guessed)]  count:91254438 (estimated locally)
(code_label 463 259 462 49 1242 (nil) [1 uses])
(note 462 463 12 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 12 462 13 49 (set (reg:DI 87 [ prephitmp_14 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 13 12 260 49 (set (reg/f:DI 141 [ iftmp.58_152 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       50 [always]  count:82128994 (estimated locally) (FALLTHRU)

;; basic block 50, loop depth 1, count 171275097 (estimated locally), maybe hot
;;  prev block 49, next block 51, flags: (RTL)
;;  pred:       49 [always]  count:82128994 (estimated locally) (FALLTHRU)
;;              48 [always]  count:89146104 (estimated locally) (FALLTHRU)
(code_label 260 13 261 50 1218 (nil) [0 uses])
(note 261 260 262 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 50 (set (reg:DI 143 [ _156 ])
        (reg/f:DI 141 [ iftmp.58_152 ])) 74 {*movdi_internal}
     (nil))
(insn 263 262 264 50 (set (reg:V2DI 200)
        (vec_duplicate:V2DI (reg:DI 143 [ _156 ]))) "/usr/include/c++/11/bits/stl_vector.h":361:25 5014 {*vec_dupv2di}
     (nil))
(insn 264 263 265 50 (set (mem:V2DI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 32 [0x20])) [115 MEM <vector(2) long unsigned int> [(struct vector * *)_127 + 32B]+0 S16 A64])
        (reg:V2DI 200)) "/usr/include/c++/11/bits/stl_vector.h":361:25 1439 {movv2di_internal}
     (nil))
(insn 265 264 266 50 (parallel [
            (set (reg:DI 201)
                (plus:DI (reg/f:DI 141 [ iftmp.58_152 ])
                    (reg:DI 87 [ prephitmp_14 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 266 265 267 50 (set (mem/f:DI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 48 [0x30])) [115 MEM[(struct _Vector_base *)_127 + 32B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])
        (reg:DI 201)) "/usr/include/c++/11/bits/stl_vector.h":363:59 74 {*movdi_internal}
     (nil))
(insn 267 266 268 50 (set (reg/f:DI 135 [ _142 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 86 [ _11 ])
                (const_int 40 [0x28])) [115 MEM[(const struct vector * const &)__x_140 + 40]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 268 267 269 50 (set (reg/f:DI 136 [ _143 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 86 [ _11 ])
                (const_int 32 [0x20])) [115 MEM[(const struct vector * const &)__x_140 + 32]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 269 268 270 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 135 [ _142 ])
            (reg/f:DI 136 [ _143 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 270 269 271 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 465)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 465)
;;  succ:       51 [89.0% (guessed)]  count:152434836 (estimated locally) (FALLTHRU)
;;              64 [11.0% (guessed)]  count:18840261 (estimated locally)

;; basic block 51, loop depth 1, count 152434836 (estimated locally), maybe hot
;;  prev block 50, next block 52, flags: (RTL)
;;  pred:       50 [89.0% (guessed)]  count:152434836 (estimated locally) (FALLTHRU)
(note 271 270 272 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 14 51 (set (reg:DI 93 [ ivtmp.2487 ])
        (reg/f:DI 136 [ _143 ])) 74 {*movdi_internal}
     (nil))
(insn 14 272 344 51 (set (reg/v/f:DI 82 [ __cur ])
        (reg/f:DI 141 [ iftmp.58_152 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 74 {*movdi_internal}
     (nil))
;;  succ:       52 [always]  count:152434836 (estimated locally) (FALLTHRU)

;; basic block 52, loop depth 2, count 960786543 (estimated locally), maybe hot
;;  prev block 51, next block 53, flags: (RTL)
;;  pred:       63 [always]  count:808351707 (estimated locally) (FALLTHRU)
;;              51 [always]  count:152434836 (estimated locally) (FALLTHRU)
(code_label 344 14 273 52 1227 (nil) [0 uses])
(note 273 344 274 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 52 (set (reg/f:DI 164 [ _245 ])
        (reg:DI 93 [ ivtmp.2487 ])) 74 {*movdi_internal}
     (nil))
(insn 275 274 276 52 (set (reg/f:DI 202)
        (mem/f:DI (plus:DI (reg/f:DI 164 [ _245 ])
                (const_int 8 [0x8])) [118 MEM[(Color * *)_245 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:50 74 {*movdi_internal}
     (nil))
(insn 276 275 277 52 (parallel [
            (set (reg:DI 149 [ _172 ])
                (minus:DI (reg/f:DI 202)
                    (mem/f:DI (reg/f:DI 164 [ _245 ]) [118 MEM[(Color * *)_245]+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 164 [ _245 ])
                    (const_int 8 [0x8])) [118 MEM[(Color * *)_245 + 8B]+0 S8 A64])
            (mem/f:DI (reg/f:DI 164 [ _245 ]) [118 MEM[(Color * *)_245]+0 S8 A64]))
        (nil)))
(insn 277 276 278 52 (set (reg:V2DI 203)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 278 277 279 52 (set (mem:V2DI (reg/v/f:DI 82 [ __cur ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__cur_47]+0 S16 A64])
        (reg:V2DI 203)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 279 278 280 52 (set (mem/f:DI (plus:DI (reg/v/f:DI 82 [ __cur ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__cur_47 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 280 279 281 52 (set (reg:DI 104 [ _74 ])
        (reg:DI 149 [ _172 ])) 74 {*movdi_internal}
     (nil))
(insn 281 280 282 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 149 [ _172 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 282 281 283 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 470)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 470)
;;  succ:       53 [54.7% (guessed)]  count:525262004 (estimated locally) (FALLTHRU)
;;              59 [45.3% (guessed)]  count:435524539 (estimated locally)

;; basic block 53, loop depth 2, count 525262003 (estimated locally), maybe hot
;;  prev block 52, next block 54, flags: (RTL)
;;  pred:       52 [54.7% (guessed)]  count:525262004 (estimated locally) (FALLTHRU)
(note 283 282 286 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 286 283 287 53 (set (reg:DI 204)
        (const_int 9223372036854775804 [0x7ffffffffffffffc])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 287 286 288 53 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 104 [ _74 ])
            (reg:DI 204))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 288 287 289 53 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 301)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 301)
;;  succ:       54 [10.0% (guessed)]  count:52526201 (estimated locally) (FALLTHRU)
;;              57 [90.0% (guessed)]  count:472735802 (estimated locally)

;; basic block 54, loop depth 0, count 52526201 (estimated locally), maybe hot
;;  prev block 53, next block 55, flags: (RTL)
;;  pred:       53 [10.0% (guessed)]  count:52526201 (estimated locally) (FALLTHRU)
(note 289 288 292 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 292 289 293 54 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 149 [ _172 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 293 292 294 54 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 297)
;;  succ:       55 [50.0% (guessed)]  count:26263101 (estimated locally) (FALLTHRU)
;;              56 [50.0% (guessed)]  count:26263101 (estimated locally)

;; basic block 55, loop depth 0, count 26263101 (estimated locally), maybe hot
;;  prev block 54, next block 56, flags: (RTL)
;;  pred:       54 [50.0% (guessed)]  count:26263101 (estimated locally) (FALLTHRU)
(note 294 293 295 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(call_insn 295 294 297 55 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 12 [0xc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       66 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 56, loop depth 0, count 26263101 (estimated locally), maybe hot
;;  prev block 55, next block 57, flags: (RTL)
;;  pred:       54 [50.0% (guessed)]  count:26263101 (estimated locally)
(code_label 297 295 298 56 1224 (nil) [1 uses])
(note 298 297 299 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(call_insn 299 298 301 56 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 12 [0xc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       66 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 57, loop depth 2, count 472735802 (estimated locally), maybe hot
;;  prev block 56, next block 58, flags: (RTL)
;;  pred:       53 [90.0% (guessed)]  count:472735802 (estimated locally)
(code_label 301 299 302 57 1223 (nil) [1 uses])
(note 302 301 303 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 57 (set (reg:DI 5 di)
        (reg:DI 104 [ _74 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 304 303 480 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 12 [0xc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       66 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              58 [always (adjusted)]  count:472735802 (estimated locally) (FALLTHRU)

;; basic block 58, loop depth 2, count 472735802 (estimated locally), maybe hot
;;  prev block 57, next block 59, flags: (RTL)
;;  pred:       57 [always (adjusted)]  count:472735802 (estimated locally) (FALLTHRU)
(note 480 304 305 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 305 480 306 58 (set (reg/f:DI 205)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 205)
        (nil)))
(insn 306 305 470 58 (set (reg/f:DI 157 [ iftmp.47_184 ])
        (reg/f:DI 205)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
;;  succ:       60 [always]  count:472735802 (estimated locally) (FALLTHRU)

;; basic block 59, loop depth 2, count 435524539 (estimated locally), maybe hot
;;  prev block 58, next block 60, flags: (RTL)
;;  pred:       52 [45.3% (guessed)]  count:435524539 (estimated locally)
(code_label 470 306 469 59 1244 (nil) [1 uses])
(note 469 470 15 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 15 469 307 59 (set (reg/f:DI 157 [ iftmp.47_184 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       60 [always]  count:435524539 (estimated locally) (FALLTHRU)

;; basic block 60, loop depth 2, count 908260342 (estimated locally), maybe hot
;;  prev block 59, next block 61, flags: (RTL)
;;  pred:       59 [always]  count:435524539 (estimated locally) (FALLTHRU)
;;              58 [always]  count:472735802 (estimated locally) (FALLTHRU)
(code_label 307 15 308 60 1222 (nil) [0 uses])
(note 308 307 309 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 60 (set (reg:DI 140 [ _149 ])
        (reg/f:DI 157 [ iftmp.47_184 ])) 74 {*movdi_internal}
     (nil))
(insn 310 309 311 60 (set (reg:V2DI 206)
        (vec_duplicate:V2DI (reg:DI 140 [ _149 ]))) "/usr/include/c++/11/bits/stl_vector.h":361:25 5014 {*vec_dupv2di}
     (nil))
(insn 311 310 312 60 (set (mem:V2DI (reg/v/f:DI 82 [ __cur ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__cur_47]+0 S16 A64])
        (reg:V2DI 206)) "/usr/include/c++/11/bits/stl_vector.h":361:25 1439 {movv2di_internal}
     (nil))
(insn 312 311 313 60 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 157 [ iftmp.47_184 ])
                    (reg:DI 104 [ _74 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 313 312 314 60 (set (mem/f:DI (plus:DI (reg/v/f:DI 82 [ __cur ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__cur_47 + 16B]+0 S8 A64])
        (reg:DI 207)) "/usr/include/c++/11/bits/stl_vector.h":363:59 74 {*movdi_internal}
     (nil))
(insn 314 313 315 60 (set (reg/f:DI 151 [ _176 ])
        (mem/f:DI (plus:DI (reg/f:DI 164 [ _245 ])
                (const_int 8 [0x8])) [118 MEM[(const Color * const &)_245 + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 315 314 316 60 (set (reg/f:DI 152 [ _177 ])
        (mem/f:DI (reg/f:DI 164 [ _245 ]) [118 MEM[(const Color * const &)_245]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 316 315 317 60 (parallel [
            (set (reg:DI 153 [ _178 ])
                (minus:DI (reg/f:DI 151 [ _176 ])
                    (reg/f:DI 152 [ _177 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":429:34 283 {*subdi_1}
     (nil))
(insn 317 316 318 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151 [ _176 ])
            (reg/f:DI 152 [ _177 ]))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 12 {*cmpdi_1}
     (nil))
(jump_insn 318 317 319 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 806 {*jcc}
     (int_list:REG_BR_PROB 574129756 (nil))
 -> 329)
;;  succ:       62 [53.5% (guessed)]  count:485646804 (estimated locally)
;;              61 [46.5% (guessed)]  count:422613538 (estimated locally) (FALLTHRU)

;; basic block 61, loop depth 2, count 422613538 (estimated locally), maybe hot
;;  prev block 60, next block 62, flags: (RTL)
;;  pred:       60 [46.5% (guessed)]  count:422613538 (estimated locally) (FALLTHRU)
(note 319 318 320 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 61 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg/f:DI 157 [ iftmp.47_184 ])
                    (reg:DI 153 [ _178 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":432:22 210 {*adddi_1}
     (nil))
(insn 321 320 322 61 (set (mem/f:DI (plus:DI (reg/v/f:DI 82 [ __cur ])
                (const_int 8 [0x8])) [118 MEM[(Color * *)__cur_47 + 8B]+0 S8 A64])
        (reg:DI 208)) "/usr/include/c++/11/bits/stl_algobase.h":432:22 74 {*movdi_internal}
     (nil))
(insn 322 321 323 61 (parallel [
            (set (reg/v/f:DI 82 [ __cur ])
                (plus:DI (reg/v/f:DI 82 [ __cur ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:45 210 {*adddi_1}
     (nil))
(insn 323 322 324 61 (parallel [
            (set (reg:DI 93 [ ivtmp.2487 ])
                (plus:DI (reg:DI 93 [ ivtmp.2487 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 210 {*adddi_1}
     (nil))
(insn 324 323 325 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 135 [ _142 ])
            (reg:DI 93 [ ivtmp.2487 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 325 324 329 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 342)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 342)
;;  succ:       63 [89.0% (guessed)]  count:376126049 (estimated locally)
;;              65 [11.0% (guessed)]  count:46487489 (estimated locally) (FALLTHRU)

;; basic block 62, loop depth 2, count 485646806 (estimated locally), maybe hot
;;  prev block 61, next block 63, flags: (RTL)
;;  pred:       60 [53.5% (guessed)]  count:485646804 (estimated locally)
(code_label 329 325 330 62 1225 (nil) [1 uses])
(note 330 329 331 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 62 (set (reg:DI 154 [ _179 ])
        (reg:DI 153 [ _178 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 332 331 333 62 (set (reg:DI 1 dx)
        (reg:DI 154 [ _179 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 333 332 334 62 (set (reg:DI 4 si)
        (reg/f:DI 152 [ _177 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 334 333 335 62 (set (reg:DI 5 di)
        (reg/f:DI 157 [ iftmp.47_184 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(call_insn 335 334 336 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_algobase.h":431:23 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 336 335 337 62 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg/f:DI 157 [ iftmp.47_184 ])
                    (reg:DI 154 [ _179 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":432:22 210 {*adddi_1}
     (nil))
(insn 337 336 338 62 (set (mem/f:DI (plus:DI (reg/v/f:DI 82 [ __cur ])
                (const_int 8 [0x8])) [118 MEM[(Color * *)__cur_47 + 8B]+0 S8 A64])
        (reg:DI 209)) "/usr/include/c++/11/bits/stl_algobase.h":432:22 74 {*movdi_internal}
     (nil))
(insn 338 337 339 62 (parallel [
            (set (reg/v/f:DI 82 [ __cur ])
                (plus:DI (reg/v/f:DI 82 [ __cur ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:45 210 {*adddi_1}
     (nil))
(insn 339 338 340 62 (parallel [
            (set (reg:DI 93 [ ivtmp.2487 ])
                (plus:DI (reg:DI 93 [ ivtmp.2487 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 210 {*adddi_1}
     (nil))
(insn 340 339 341 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 135 [ _142 ])
            (reg:DI 93 [ ivtmp.2487 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 341 340 342 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 347)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 347)
;;  succ:       63 [89.0% (guessed)]  count:432225658 (estimated locally) (FALLTHRU)
;;              65 [11.0% (guessed)]  count:53421148 (estimated locally)

;; basic block 63, loop depth 2, count 808351707 (estimated locally), maybe hot
;;  prev block 62, next block 64, flags: (RTL)
;;  pred:       62 [89.0% (guessed)]  count:432225658 (estimated locally) (FALLTHRU)
;;              61 [89.0% (guessed)]  count:376126049 (estimated locally)
(code_label 342 341 343 63 1226 (nil) [1 uses])
(note 343 342 465 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
;;  succ:       52 [always]  count:808351707 (estimated locally) (FALLTHRU)

;; basic block 64, loop depth 1, count 18840261 (estimated locally), maybe hot
;;  prev block 63, next block 65, flags: (RTL)
;;  pred:       50 [11.0% (guessed)]  count:18840261 (estimated locally)
(code_label 465 343 464 64 1243 (nil) [1 uses])
(note 464 465 16 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 16 464 347 64 (set (reg/v/f:DI 82 [ __cur ])
        (reg/f:DI 141 [ iftmp.58_152 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 74 {*movdi_internal}
     (nil))
;;  succ:       65 [always]  count:18840261 (estimated locally) (FALLTHRU)

;; basic block 65, loop depth 1, count 118748898 (estimated locally), maybe hot
;;  prev block 64, next block 66, flags: (RTL)
;;  pred:       62 [11.0% (guessed)]  count:53421148 (estimated locally)
;;              64 [always]  count:18840261 (estimated locally) (FALLTHRU)
;;              61 [11.0% (guessed)]  count:46487489 (estimated locally) (FALLTHRU)
(code_label 347 16 348 65 1221 (nil) [1 uses])
(note 348 347 349 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 65 (set (mem/f:DI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 40 [0x28])) [115 MEM[(struct vector *)_127 + 32B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])
        (reg/v/f:DI 82 [ __cur ])) "/usr/include/c++/11/bits/stl_vector.h":557:26 74 {*movdi_internal}
     (nil))
(insn 350 349 351 65 (set (reg:SI 210)
        (mem:SI (plus:DI (reg/v/f:DI 86 [ _11 ])
                (const_int 56 [0x38])) [35 MEM[(const struct pair &)__x_140 + 32].second+0 S4 A64])) "/usr/include/c++/11/bits/stl_pair.h":314:17 75 {*movsi_internal}
     (nil))
(insn 351 350 352 65 (set (mem:SI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 56 [0x38])) [35 MEM[(struct pair *)_127 + 32B].second+0 S4 A64])
        (reg:SI 210)) "/usr/include/c++/11/bits/stl_pair.h":314:17 75 {*movsi_internal}
     (nil))
(insn 352 351 353 65 (set (reg:SI 88 [ _16 ])
        (mem:SI (reg/v/f:DI 86 [ _11 ]) [112 __x_140->D.309030._M_color+0 S4 A64])) "/usr/include/c++/11/bits/stl_tree.h":646:27 75 {*movsi_internal}
     (nil))
(insn 353 352 354 65 (set (mem:SI (reg/f:DI 125 [ _127 ]) [112 _127->D.309030._M_color+0 S4 A64])
        (reg:SI 88 [ _16 ])) "/usr/include/c++/11/bits/stl_tree.h":646:20 75 {*movsi_internal}
     (nil))
(insn 354 353 355 65 (set (mem/f:DI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 16 [0x10])) [110 _127->D.309030._M_left+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":647:19 74 {*movdi_internal}
     (nil))
(insn 355 354 356 65 (set (mem/f:DI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 24 [0x18])) [110 _127->D.309030._M_right+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":648:20 74 {*movdi_internal}
     (nil))
(insn 356 355 357 65 (set (mem/f:DI (plus:DI (reg/v/f:DI 126 [ __p ])
                (const_int 16 [0x10])) [110 __p_128->_M_left+0 S8 A64])
        (reg/f:DI 125 [ _127 ])) "/usr/include/c++/11/bits/stl_tree.h":1863:16 74 {*movdi_internal}
     (nil))
(insn 357 356 358 65 (set (mem/f:DI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 8 [0x8])) [110 _127->D.309030._M_parent+0 S8 A64])
        (reg/v/f:DI 126 [ __p ])) "/usr/include/c++/11/bits/stl_tree.h":1864:18 74 {*movdi_internal}
     (nil))
(insn 358 357 359 65 (set (reg/f:DI 89 [ _18 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 86 [ _11 ])
                (const_int 24 [0x18])) [110 __x_140->D.309030._M_right+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":1865:12 74 {*movdi_internal}
     (nil))
(insn 359 358 360 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ _18 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":1865:3 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 360 359 519 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 409)
            (pc))) "/usr/include/c++/11/bits/stl_tree.h":1865:3 806 {*jcc}
     (int_list:REG_BR_PROB 574129756 (nil))
 -> 409)
;;  succ:       76 [53.5% (guessed)]  count:63495036 (estimated locally)
;;              78 [46.5% (guessed)]  count:55253862 (estimated locally) (FALLTHRU)

;; basic block 66, loop depth 0, count 0 (precise), probably never executed
;;  prev block 65, next block 67, flags: (RTL)
;;  pred:       55 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              56 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              57 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 519 360 521 66 1255 (nil) [1 uses])
(note 521 519 520 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 520 521 364 66 (set (reg:DI 211)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
;;  succ:       67 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 67, loop depth 0, count 0 (precise), probably never executed
;;  prev block 66, next block 68, flags: (RTL)
;;  pred:       66 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 364 520 365 67 1230 (nil) [0 uses])
(note 365 364 366 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 67 (set (reg/f:DI 146 [ _167 ])
        (reg:DI 211)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
(insn 367 366 368 67 (set (reg:DI 5 di)
        (reg/f:DI 146 [ _167 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
(call_insn 368 367 369 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 369 368 370 67 (set (reg:DI 4 si)
        (reg/v/f:DI 82 [ __cur ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(insn 370 369 371 67 (set (reg:DI 5 di)
        (reg/f:DI 141 [ iftmp.58_152 ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(call_insn 371 370 372 67 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5ColorSaIS3_EEEEvT_S7_") [flags 0x1]  <function_decl 0x7f1a356a6f00 __destroy>) [0 __destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_construct.h":196:11 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5ColorSaIS3_EEEEvT_S7_") [flags 0x1]  <function_decl 0x7f1a356a6f00 __destroy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(call_insn 372 371 515 67 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_uninitialized.h":98:8 813 {*call}
     (expr_list:REG_EH_REGION (const_int 11 [0xb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       68 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 68, loop depth 0, count 0 (precise), probably never executed
;;  prev block 67, next block 69, flags: (RTL)
;;  pred:       67 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 515 372 518 68 1254 (nil) [1 uses])
(note 518 515 516 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 516 518 374 68 (set (reg:DI 213)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
;;  succ:       69 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 69, loop depth 0, count 0 (precise), probably never executed
;;  prev block 68, next block 70, flags: (RTL)
;;  pred:       68 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 374 516 375 69 1231 (nil) [0 uses])
(note 375 374 376 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(call_insn 376 375 377 69 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 813 {*call}
     (expr_list:REG_EH_REGION (const_int -15 [0xfffffffffffffff1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 377 376 379 69 (set (reg:DI 212)
        (reg:DI 213)) 74 {*movdi_internal}
     (nil))
(insn 379 377 380 69 (set (reg/f:DI 138 [ _146 ])
        (mem/f:DI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 32 [0x20])) [115 MEM[(struct _Vector_base *)_127 + 32B]._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
(insn 380 379 381 69 (set (reg/f:DI 216)
        (mem/f:DI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 48 [0x30])) [115 MEM[(struct _Vector_base *)_127 + 32B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 381 380 382 69 (parallel [
            (set (reg:DI 139 [ _147 ])
                (minus:DI (reg/f:DI 216)
                    (reg/f:DI 138 [ _146 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 125 [ _127 ])
                    (const_int 48 [0x30])) [115 MEM[(struct _Vector_base *)_127 + 32B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])
            (reg/f:DI 138 [ _146 ]))
        (nil)))
(insn 382 381 383 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 138 [ _146 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 383 382 384 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 388)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 388)
;;  succ:       70 [never]  count:0 (precise) (FALLTHRU)
;;              71 [never]  count:0 (precise)

;; basic block 70, loop depth 0, count 0 (precise), probably never executed
;;  prev block 69, next block 71, flags: (RTL)
;;  pred:       69 [never]  count:0 (precise) (FALLTHRU)
(note 384 383 385 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 385 384 386 70 (set (reg:DI 4 si)
        (reg:DI 139 [ _147 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 386 385 387 70 (set (reg:DI 5 di)
        (reg/f:DI 138 [ _146 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 387 386 388 70 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       71 [never]  count:0 (precise) (FALLTHRU)

;; basic block 71, loop depth 0, count 0 (precise), probably never executed
;;  prev block 70, next block 72, flags: (RTL)
;;  pred:       69 [never]  count:0 (precise)
;;              70 [never]  count:0 (precise) (FALLTHRU)
(code_label 388 387 389 71 1232 (nil) [1 uses])
(note 389 388 390 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 505 71 (set (reg:DI 217)
        (reg:DI 212)) 74 {*movdi_internal}
     (nil))
;;  succ:       73 [always]  count:0 (precise) (FALLTHRU)

;; basic block 72, loop depth 0, count 0 (precise), probably never executed
;;  prev block 71, next block 73, flags: (RTL)
;;  pred:       45 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              46 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              47 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 505 390 510 72 1252 (nil) [1 uses])
(note 510 505 506 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 506 510 392 72 (set (reg:DI 217)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_tree.h":599:4 74 {*movdi_internal}
     (nil))
;;  succ:       73 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 73, loop depth 0, count 0 (precise), probably never executed
;;  prev block 72, next block 74, flags: (RTL)
;;  pred:       72 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              71 [always]  count:0 (precise) (FALLTHRU)
(code_label 392 506 393 73 1233 (nil) [0 uses])
(note 393 392 394 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 73 (set (reg/f:DI 129 [ _133 ])
        (reg:DI 217)) "/usr/include/c++/11/bits/stl_tree.h":599:4 74 {*movdi_internal}
     (nil))
(insn 395 394 396 73 (set (reg:DI 5 di)
        (reg/f:DI 129 [ _133 ])) "/usr/include/c++/11/bits/stl_tree.h":599:4 74 {*movdi_internal}
     (nil))
(call_insn 396 395 397 73 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":599:4 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 397 396 398 73 (set (reg:DI 4 si)
        (const_int 64 [0x40])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 398 397 399 73 (set (reg:DI 5 di)
        (reg/f:DI 125 [ _127 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 399 398 400 73 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(call_insn 400 399 511 73 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":603:8 813 {*call}
     (expr_list:REG_EH_REGION (const_int 9 [0x9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       74 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 74, loop depth 0, count 0 (precise), probably never executed
;;  prev block 73, next block 75, flags: (RTL)
;;  pred:       73 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 511 400 514 74 1253 (nil) [1 uses])
(note 514 511 512 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 512 514 402 74 (set (reg:DI 220)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_tree.h":599:4 74 {*movdi_internal}
     (nil))
;;  succ:       75 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 75, loop depth 0, count 0 (precise), probably never executed
;;  prev block 74, next block 76, flags: (RTL)
;;  pred:       74 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 402 512 403 75 1234 (nil) [0 uses])
(note 403 402 404 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(call_insn 404 403 405 75 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":599:4 813 {*call}
     (expr_list:REG_EH_REGION (const_int -13 [0xfffffffffffffff3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 405 404 409 75 (set (reg:DI 219)
        (reg:DI 220)) 74 {*movdi_internal}
     (nil))
;;  succ:       80 [always]  count:0 (precise) (FALLTHRU)

;; basic block 76, loop depth 1, count 63495036 (estimated locally), maybe hot
;;  prev block 75, next block 77, flags: (RTL)
;;  pred:       65 [53.5% (guessed)]  count:63495036 (estimated locally)
(code_label 409 405 410 76 1228 (nil) [1 uses])
(note 410 409 411 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 411 410 412 76 (set (reg:DI 4 si)
        (reg/f:DI 125 [ _127 ])) "/usr/include/c++/11/bits/stl_tree.h":1866:41 74 {*movdi_internal}
     (nil))
(insn 412 411 413 76 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _18 ])) "/usr/include/c++/11/bits/stl_tree.h":1866:41 74 {*movdi_internal}
     (nil))
(call_insn 413 412 481 76 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ea00 _M_copy.isra>) [0 _M_copy.isra S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":1866:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ea00 _M_copy.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       79 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              77 [always (adjusted)]  count:63495036 (estimated locally) (FALLTHRU)

;; basic block 77, loop depth 1, count 63495036 (estimated locally), maybe hot
;;  prev block 76, next block 78, flags: (RTL)
;;  pred:       76 [always (adjusted)]  count:63495036 (estimated locally) (FALLTHRU)
(note 481 413 414 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 414 481 416 77 (set (reg/f:DI 90 [ _19 ])
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_tree.h":1866:41 74 {*movdi_internal}
     (nil))
(insn 416 414 417 77 (set (mem/f:DI (plus:DI (reg/f:DI 125 [ _127 ])
                (const_int 24 [0x18])) [110 _127->D.309030._M_right+0 S8 A64])
        (reg/f:DI 90 [ _19 ])) "/usr/include/c++/11/bits/stl_tree.h":1866:19 74 {*movdi_internal}
     (nil))
;;  succ:       78 [always]  count:63495036 (estimated locally) (FALLTHRU)

;; basic block 78, loop depth 1, count 118748898 (estimated locally), maybe hot
;;  prev block 77, next block 79, flags: (RTL)
;;  pred:       77 [always]  count:63495036 (estimated locally) (FALLTHRU)
;;              65 [46.5% (guessed)]  count:55253862 (estimated locally) (FALLTHRU)
(code_label 417 416 418 78 1229 (nil) [0 uses])
(note 418 417 419 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 78 (set (reg/v/f:DI 86 [ _11 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 86 [ _11 ])
                (const_int 16 [0x10])) [110 MEM[(struct _Rb_tree_node_base *)__x_140]._M_left+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":780:52 74 {*movdi_internal}
     (nil))
(insn 420 419 421 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 86 [ _11 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":1860:17 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 421 420 485 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 474)
            (pc))) "/usr/include/c++/11/bits/stl_tree.h":1860:17 806 {*jcc}
     (int_list:REG_BR_PROB 837518628 (nil))
 -> 474)
;;  succ:       40 [78.0% (guessed)]  count:92624141 (estimated locally)
;;              83 [22.0% (guessed)]  count:26124757 (estimated locally) (FALLTHRU)

;; basic block 79, loop depth 0, count 0 (precise), probably never executed
;;  prev block 78, next block 80, flags: (RTL)
;;  pred:       36 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              76 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 485 421 488 79 1247 (nil) [1 uses])
(note 488 485 486 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 486 488 426 79 (set (reg:DI 219)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_tree.h":1872:2 74 {*movdi_internal}
     (nil))
;;  succ:       80 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 80, loop depth 0, count 0 (precise), probably never executed
;;  prev block 79, next block 81, flags: (RTL)
;;  pred:       75 [always]  count:0 (precise) (FALLTHRU)
;;              79 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 426 486 427 80 1235 (nil) [0 uses])
(note 427 426 428 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 428 427 429 80 (set (reg/f:DI 91 [ _21 ])
        (reg:DI 219)) "/usr/include/c++/11/bits/stl_tree.h":1872:2 74 {*movdi_internal}
     (nil))
(insn 429 428 430 80 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _21 ])) "/usr/include/c++/11/bits/stl_tree.h":1872:2 74 {*movdi_internal}
     (nil))
(call_insn 430 429 431 80 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":1872:2 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 431 430 432 80 (set (reg:DI 5 di)
        (reg/f:DI 166 [ <retval> ])) "/usr/include/c++/11/bits/stl_tree.h":1874:14 74 {*movdi_internal}
     (nil))
(call_insn 432 431 433 80 (call (mem:QI (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ed00 _M_erase.isra>) [0 _M_erase.isra S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":1874:14 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ed00 _M_erase.isra>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 433 432 482 80 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":1875:6 813 {*call}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       81 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 81, loop depth 0, count 0 (precise), probably never executed
;;  prev block 80, next block 82, flags: (RTL)
;;  pred:       80 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 482 433 484 81 1246 (nil) [1 uses])
(note 484 482 483 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 483 484 435 81 (set (reg:DI 223)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_tree.h":1872:2 74 {*movdi_internal}
     (nil))
;;  succ:       82 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 82, loop depth 0, count 0 (precise), probably never executed
;;  prev block 81, next block 83, flags: (RTL)
;;  pred:       81 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 435 483 436 82 1237 (nil) [0 uses])
(note 436 435 437 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(call_insn 437 436 438 82 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":1872:2 813 {*call}
     (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 438 437 439 82 (set (reg/f:DI 165 [ D.331081 ])
        (reg:DI 223)) 74 {*movdi_internal}
     (nil))
(insn 439 438 440 82 (set (reg:DI 5 di)
        (reg/f:DI 165 [ D.331081 ])) 74 {*movdi_internal}
     (nil))
(call_insn 440 439 442 82 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 83, loop depth 0, count 56780126 (estimated locally), maybe hot
;;  prev block 82, next block 1, flags: (RTL)
;;  pred:       38 [22.0% (guessed)]  count:30655368 (estimated locally) (FALLTHRU)
;;              78 [22.0% (guessed)]  count:26124757 (estimated locally) (FALLTHRU)
(code_label 442 440 445 83 1199 (nil) [0 uses])
(note 445 442 443 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 443 445 444 83 (set (reg/i:DI 0 ax)
        (reg/f:DI 166 [ <retval> ])) "/usr/include/c++/11/bits/stl_tree.h":1878:7 74 {*movdi_internal}
     (nil))
(insn 444 443 0 83 (use (reg/i:DI 0 ax)) "/usr/include/c++/11/bits/stl_tree.h":1878:7 -1
     (nil))
;;  succ:       EXIT [always]  count:56780126 (estimated locally) (FALLTHRU)


;; Function std::vector<std::vector<Color> >::~vector (_ZNSt6vectorIS_I5ColorSaIS0_EESaIS2_EED2Ev, funcdef_no=13134, decl_uid=254074, cgraph_uid=5045, symbol_order=5971)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 91 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/c++/11/bits/stl_vector.h":678:7 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 8 [0x8])) [115 this_3(D)->D.254077._M_impl.D.253422._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 90 [ __first ])
        (mem/f:DI (reg/f:DI 91 [ this ]) [115 this_3(D)->D.254077._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _1 ])
            (reg/v/f:DI 90 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 9 8 33 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 39)
;;  succ:       3 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
;;              8 [11.0% (guessed)]  count:118111600 (estimated locally)

;; basic block 3, loop depth 1, count 8687547547 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       6 [always]  count:7731917322 (estimated locally) (FALLTHRU)
;;              2 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
(code_label 33 9 10 3 1279 (nil) [0 uses])
(note 10 33 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 85 [ _17 ])
        (mem/f:DI (reg/v/f:DI 90 [ __first ]) [118 MEM[(Color * *)__first_10]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ _17 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 26)
;;  succ:       4 [53.5% (guessed)]  count:4645231663 (estimated locally) (FALLTHRU)
;;              5 [46.5% (guessed)]  count:4042315884 (estimated locally)

;; basic block 4, loop depth 1, count 4645231662 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [53.5% (guessed)]  count:4645231663 (estimated locally) (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f:DI (plus:DI (reg/v/f:DI 90 [ __first ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__first_10 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 92)
                (minus:DI (reg/f:DI 93)
                    (reg/f:DI 85 [ _17 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 90 [ __first ])
                    (const_int 16 [0x10])) [118 MEM[(Color * *)__first_10 + 16B]+0 S8 A64])
            (reg/f:DI 85 [ _17 ]))
        (nil)))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 92)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _17 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 19 18 20 4 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 20 19 21 4 (parallel [
            (set (reg/v/f:DI 90 [ __first ])
                (plus:DI (reg/v/f:DI 90 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _1 ])
            (reg/v/f:DI 90 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 22 21 26 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 31)
;;  succ:       6 [89.0% (guessed)]  count:4134256182 (estimated locally)
;;              7 [11.0% (guessed)]  count:510975480 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 1, count 4042315885 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3 [46.5% (guessed)]  count:4042315884 (estimated locally)
(code_label 26 22 27 5 1276 (nil) [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (parallel [
            (set (reg/v/f:DI 90 [ __first ])
                (plus:DI (reg/v/f:DI 90 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _1 ])
            (reg/v/f:DI 90 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 36)
;;  succ:       6 [89.0% (guessed)]  count:3597661140 (estimated locally) (FALLTHRU)
;;              7 [11.0% (guessed)]  count:444654745 (estimated locally)

;; basic block 6, loop depth 1, count 7731917322 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [89.0% (guessed)]  count:3597661140 (estimated locally) (FALLTHRU)
;;              4 [89.0% (guessed)]  count:4134256182 (estimated locally)
(code_label 31 30 32 6 1277 (nil) [1 uses])
(note 32 31 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       3 [always]  count:7731917322 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 955630225 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5 [11.0% (guessed)]  count:444654745 (estimated locally)
;;              4 [11.0% (guessed)]  count:510975480 (estimated locally) (FALLTHRU)
(code_label 36 32 37 7 1278 (nil) [1 uses])
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg/v/f:DI 90 [ __first ])
        (mem/f:DI (reg/f:DI 91 [ this ]) [115 MEM[(struct _Vector_base *)this_3(D)]._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:955630225 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always]  count:955630225 (estimated locally) (FALLTHRU)
;;              2 [11.0% (guessed)]  count:118111600 (estimated locally)
(code_label 39 38 40 8 1275 (nil) [1 uses])
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 90 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 42 41 43 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 52)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 52)
;;  succ:       9 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
;;              10 [46.5% (guessed)]  count:499612072 (estimated locally)

;; basic block 9, loop depth 0, count 574129749 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (reg/f:DI 95)
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 16 [0x10])) [115 MEM[(struct _Vector_base *)this_3(D)]._M_impl.D.253422._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 45 44 46 9 (parallel [
            (set (reg:DI 94)
                (minus:DI (reg/f:DI 95)
                    (reg/v/f:DI 90 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                    (const_int 16 [0x10])) [115 MEM[(struct _Vector_base *)this_3(D)]._M_impl.D.253422._M_end_of_storage+0 S8 A64])
            (reg/v/f:DI 90 [ __first ]))
        (nil)))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 94)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn/j 48 47 52 9 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:574129749 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 10, loop depth 0, count 499612075 (estimated locally), maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       8 [46.5% (guessed)]  count:499612072 (estimated locally)
(code_label 52 48 53 10 1274 (nil) [1 uses])
(note 53 52 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:499612075 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<std::vector<std::vector<Color> > (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<std::vector<std::vector<Color> >, ChineseCheckers&> > >::operator() (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_I5ColorSaIS7_EESaIS9_EEvENS0_21default_call_policiesENS_3mpl7vector2ISB_RS5_EEEEEclEP7_objectSM_, funcdef_no=13483, decl_uid=294438, cgraph_uid=5394, symbol_order=7121)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/f:DI 109 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(insn 3 2 5 2 (set (reg/v/f:DI 110 [ args ])
        (reg:DI 4 si [ args ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(note 5 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 7 2 (set (reg/f:DI 112)
        (const_int 40 [0x28])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.331172+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 112) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object/py_function.hpp":36:15 1159 {stack_protect_set_1_di}
     (nil))
(insn 10 7 11 2 (set (reg/f:DI 113)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ args ])
                (const_int 8 [0x8])) [9 args_4(D)->ob_type+0 S8 A64])) "/usr/include/python3.10/object.h":729:11 74 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 115)
        (mem:DI (plus:DI (reg/f:DI 113)
                (const_int 168 [0xa8])) [7 _18->tp_flags+0 S8 A64])) "/usr/include/python3.10/object.h":731:20 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 114)
                (and:DI (reg:DI 115)
                    (const_int 67108864 [0x4000000])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":731:20 486 {*anddi_1}
     (expr_list:REG_EQUAL (and:DI (mem:DI (plus:DI (reg/f:DI 113)
                    (const_int 168 [0xa8])) [7 _18->tp_flags+0 S8 A64])
            (const_int 67108864 [0x4000000]))
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 114)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":48:12 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":48:12 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 25)
;;  succ:       4 [100.0% (guessed)]  count:1073312328 (estimated locally)
;;              3 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 429494 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 116)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 2 cx)
        (reg:DI 116)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)
        (nil)))
(insn 18 17 19 3 (set (reg:SI 1 dx)
        (const_int 48 [0x30])) "/usr/include/boost/python/detail/caller.hpp":48:12 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 117)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 4 si)
        (reg:DI 117)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)
        (nil)))
(insn 21 20 22 3 (set (reg:DI 118)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 118)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)
        (nil)))
(call_insn 23 22 25 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":48:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 4, loop depth 0, count 1073312330 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:1073312328 (estimated locally)
(code_label 25 23 26 4 1283 (nil) [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:DI 119)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:DI 120)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ args ])
                (const_int 24 [0x18])) [31 MEM[(struct PyTupleObject *)args_4(D)].ob_item[0]+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 119) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (reg:DI 120)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(call_insn 31 30 32 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>) [0 get_lvalue_from_python S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 4 (set (reg/f:DI 108 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 108 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 119)
            (pc))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 806 {*jcc}
     (int_list:REG_BR_PROB 166107868 (nil))
 -> 119)
;;  succ:       18 [15.5% (guessed)]  count:166041421 (estimated locally)
;;              5 [84.5% (guessed)]  count:907270909 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 907270906 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [84.5% (guessed)]  count:907270909 (estimated locally) (FALLTHRU)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg/f:DI 84 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 109 [ this ])
                (const_int 8 [0x8])) [0 MEM <struct vector ChineseCheckers::<T285c0> (struct ChineseCheckers *) *> [(struct  &)this_2(D) + 8]+0 S8 A64])) 74 {*movdi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:DI 90 [ _24 ])
        (reg/f:DI 84 [ _15 ])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:DI 121)
        (mem:DI (plus:DI (reg/f:DI 109 [ this ])
                (const_int 16 [0x10])) [0 MEM <long int> [(struct  &)this_2(D) + 16]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg/f:DI 82 [ _7 ])
                (plus:DI (reg/f:DI 108 [ <retval> ])
                    (reg:DI 121)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:25 210 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 108 [ <retval> ])
            (mem:DI (plus:DI (reg/f:DI 109 [ this ])
                    (const_int 16 [0x10])) [0 MEM <long int> [(struct  &)this_2(D) + 16]+0 S8 A64]))
        (nil)))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 122)
                (and:DI (reg:DI 90 [ _24 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:25 486 {*anddi_1}
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 122)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/invoke.hpp":86:25 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "/usr/include/boost/python/detail/invoke.hpp":86:25 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 46)
;;  succ:       6 [50.0% (guessed)]  count:453635453 (estimated locally) (FALLTHRU)
;;              7 [50.0% (guessed)]  count:453635453 (estimated locally)

;; basic block 6, loop depth 0, count 453635453 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [50.0% (guessed)]  count:453635453 (estimated locally) (FALLTHRU)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg/f:DI 123)
        (mem/f:DI (reg/f:DI 82 [ _7 ]) [5 MEM[(int (*) () * *)_7]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 45 44 46 6 (set (reg/f:DI 84 [ _15 ])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 123)
                    (reg:DI 90 [ _24 ]))
                (const_int -1 [0xffffffffffffffff])) [38 *_32+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
;;  succ:       7 [always]  count:453635453 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 907270906 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5 [50.0% (guessed)]  count:453635453 (estimated locally)
;;              6 [always]  count:453635453 (estimated locally) (FALLTHRU)
(code_label 46 45 47 7 1285 (nil) [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:14 210 {*adddi_1}
     (nil))
(insn 49 48 50 7 (set (reg:DI 4 si)
        (reg/f:DI 82 [ _7 ])) "/usr/include/boost/python/detail/invoke.hpp":86:14 74 {*movdi_internal}
     (nil))
(insn 50 49 51 7 (set (reg:DI 5 di)
        (reg:DI 124)) "/usr/include/boost/python/detail/invoke.hpp":86:14 74 {*movdi_internal}
     (nil))
(call_insn 51 50 52 7 (call (mem:QI (reg/f:DI 84 [ _15 ]) [0 *iftmp.148_37 S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/invoke.hpp":86:14 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 52 51 53 7 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/to_python_value.hpp":156:72 210 {*adddi_1}
     (nil))
(insn 53 52 54 7 (set (reg/f:DI 126)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_I5ColorSaIS5_EESaIS7_EEE10convertersE")  <var_decl 0x7f1a34c9fea0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
(insn 54 53 55 7 (set (reg:DI 4 si)
        (reg:DI 125)) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
(insn 55 54 56 7 (set (reg:DI 5 di)
        (mem/f/c:DI (reg/f:DI 126) [42 converters+0 S8 A64])) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
(call_insn 56 55 129 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration9to_pythonEPVKv") [flags 0x41]  <function_decl 0x7f1a3a992100 to_python>) [0 to_python S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/to_python_value.hpp":156:72 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration9to_pythonEPVKv") [flags 0x41]  <function_decl 0x7f1a3a992100 to_python>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       16 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 [always (adjusted)]  count:907270906 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 907270906 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always (adjusted)]  count:907270906 (estimated locally) (FALLTHRU)
(note 129 56 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 129 59 8 (set (reg/f:DI 108 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
(insn 59 57 60 8 (set (reg/f:DI 97 [ _41 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [115 D.331147.D.254077._M_impl.D.253422._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 60 59 61 8 (set (reg/v/f:DI 105 [ __first ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [115 D.331147.D.254077._M_impl.D.253422._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 61 60 62 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ _41 ])
            (reg/v/f:DI 105 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 62 61 86 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 92)
;;  succ:       9 [89.0% (guessed)]  count:807471107 (estimated locally) (FALLTHRU)
;;              14 [11.0% (guessed)]  count:99799799 (estimated locally)

;; basic block 9, loop depth 1, count 7340646476 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       12 [always]  count:6533175368 (estimated locally) (FALLTHRU)
;;              8 [89.0% (guessed)]  count:807471107 (estimated locally) (FALLTHRU)
(code_label 86 62 63 9 1290 (nil) [0 uses])
(note 63 86 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (reg/f:DI 100 [ _50 ])
        (mem/f:DI (reg/v/f:DI 105 [ __first ]) [118 MEM[(Color * *)__first_47]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 65 64 66 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ _50 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 66 65 67 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 79)
;;  succ:       10 [53.5% (guessed)]  count:3925043662 (estimated locally) (FALLTHRU)
;;              11 [46.5% (guessed)]  count:3415602814 (estimated locally)

;; basic block 10, loop depth 1, count 3925043661 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [53.5% (guessed)]  count:3925043662 (estimated locally) (FALLTHRU)
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 10 (set (reg/f:DI 128)
        (mem/f:DI (plus:DI (reg/v/f:DI 105 [ __first ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__first_47 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 69 68 70 10 (parallel [
            (set (reg:DI 127)
                (minus:DI (reg/f:DI 128)
                    (reg/f:DI 100 [ _50 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 105 [ __first ])
                    (const_int 16 [0x10])) [118 MEM[(Color * *)__first_47 + 16B]+0 S8 A64])
            (reg/f:DI 100 [ _50 ]))
        (nil)))
(insn 70 69 71 10 (set (reg:DI 4 si)
        (reg:DI 127)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 71 70 72 10 (set (reg:DI 5 di)
        (reg/f:DI 100 [ _50 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 72 71 73 10 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 73 72 74 10 (parallel [
            (set (reg/v/f:DI 105 [ __first ])
                (plus:DI (reg/v/f:DI 105 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 74 73 75 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ _41 ])
            (reg/v/f:DI 105 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 75 74 79 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 84)
;;  succ:       12 [89.0% (guessed)]  count:3493288861 (estimated locally)
;;              13 [11.0% (guessed)]  count:431754800 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 1, count 3415602815 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9 [46.5% (guessed)]  count:3415602814 (estimated locally)
(code_label 79 75 80 11 1287 (nil) [1 uses])
(note 80 79 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 11 (parallel [
            (set (reg/v/f:DI 105 [ __first ])
                (plus:DI (reg/v/f:DI 105 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 82 81 83 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ _41 ])
            (reg/v/f:DI 105 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 83 82 84 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 89)
;;  succ:       12 [89.0% (guessed)]  count:3039886507 (estimated locally) (FALLTHRU)
;;              13 [11.0% (guessed)]  count:375716308 (estimated locally)

;; basic block 12, loop depth 1, count 6533175368 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [89.0% (guessed)]  count:3039886507 (estimated locally) (FALLTHRU)
;;              10 [89.0% (guessed)]  count:3493288861 (estimated locally)
(code_label 84 83 85 12 1288 (nil) [1 uses])
(note 85 84 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       9 [always]  count:6533175368 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 807471108 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       11 [11.0% (guessed)]  count:375716308 (estimated locally)
;;              10 [11.0% (guessed)]  count:431754800 (estimated locally) (FALLTHRU)
(code_label 89 85 90 13 1289 (nil) [1 uses])
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (reg/v/f:DI 105 [ __first ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [115 MEM[(struct _Vector_base *)&D.331147]._M_impl.D.253422._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       14 [always]  count:807471108 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 907270906 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [always]  count:807471108 (estimated locally) (FALLTHRU)
;;              8 [11.0% (guessed)]  count:99799799 (estimated locally)
(code_label 92 91 93 14 1286 (nil) [1 uses])
(note 93 92 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 105 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 95 94 96 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 119)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 119)
;;  succ:       15 [53.5% (guessed)]  count:485117752 (estimated locally) (FALLTHRU)
;;              18 [46.5% (guessed)]  count:422153154 (estimated locally)

;; basic block 15, loop depth 0, count 485117750 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [53.5% (guessed)]  count:485117752 (estimated locally) (FALLTHRU)
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 15 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [115 MEM[(struct _Vector_base *)&D.331147]._M_impl.D.253422._M_end_of_storage+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 98 97 99 15 (parallel [
            (set (reg:DI 129)
                (minus:DI (reg/f:DI 130)
                    (reg/v/f:DI 105 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [115 MEM[(struct _Vector_base *)&D.331147]._M_impl.D.253422._M_end_of_storage+0 S8 A128])
            (reg/v/f:DI 105 [ __first ]))
        (nil)))
(insn 99 98 100 15 (set (reg:DI 4 si)
        (reg:DI 129)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 100 99 101 15 (set (reg:DI 5 di)
        (reg/v/f:DI 105 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 101 100 132 15 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       18 [always]  count:485117750 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 0, count 0 (precise), probably never executed
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       7 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 132 101 134 16 1294 (nil) [1 uses])
(note 134 132 133 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 133 134 106 16 (set (reg:DI 132)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/invoke.hpp":86:14 74 {*movdi_internal}
     (nil))
;;  succ:       17 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 17, loop depth 0, count 0 (precise), probably never executed
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 106 133 107 17 1292 (nil) [0 uses])
(note 107 106 108 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 17 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:14 210 {*adddi_1}
     (nil))
(insn 109 108 110 17 (set (reg:DI 5 di)
        (reg:DI 131)) "/usr/include/boost/python/detail/invoke.hpp":86:14 74 {*movdi_internal}
     (nil))
(call_insn 110 109 111 17 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIS_I5ColorSaIS0_EESaIS2_EED1Ev") [flags 0x1]  <function_decl 0x7f1a37149300 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/invoke.hpp":86:14 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIS_I5ColorSaIS0_EESaIS2_EED1Ev") [flags 0x1]  <function_decl 0x7f1a37149300 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 111 110 112 17 (set (reg/f:DI 106 [ D.331171 ])
        (reg:DI 132)) 74 {*movdi_internal}
     (nil))
(insn 112 111 113 17 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.331171 ])) 74 {*movdi_internal}
     (nil))
(call_insn 113 112 119 17 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 18, loop depth 0, count 1073312330 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       15 [always]  count:485117750 (estimated locally) (FALLTHRU)
;;              4 [15.5% (guessed)]  count:166041421 (estimated locally)
;;              14 [46.5% (guessed)]  count:422153154 (estimated locally)
(code_label 119 113 128 18 1282 (nil) [2 uses])
(note 128 119 120 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 120 128 121 18 (set (reg/f:DI 134)
        (const_int 40 [0x28])) "/usr/include/boost/python/object/py_function.hpp":39:5 74 {*movdi_internal}
     (nil))
(insn 121 120 122 18 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.331172+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 134) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/boost/python/object/py_function.hpp":39:5 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 122 121 130 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "/usr/include/boost/python/object/py_function.hpp":39:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 125)
;;  succ:       20 [100.0% (guessed)]  count:1072883006 (estimated locally)
;;              19 [0.0% (guessed)]  count:429324 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 0, count 429324 (estimated locally)
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [0.0% (guessed)]  count:429324 (estimated locally) (FALLTHRU)
(note 130 122 123 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(call_insn 123 130 125 19 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":39:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 20, loop depth 0, count 1072883006 (estimated locally), maybe hot
;;  prev block 19, next block 1, flags: (RTL)
;;  pred:       18 [100.0% (guessed)]  count:1072883006 (estimated locally)
(code_label 125 123 131 20 1293 (nil) [1 uses])
(note 131 125 126 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 126 131 127 20 (set (reg/i:DI 0 ax)
        (reg/f:DI 108 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":39:5 74 {*movdi_internal}
     (nil))
(insn 127 126 0 20 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":39:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1072883006 (estimated locally) (FALLTHRU)


;; Function std::vector<std::vector<std::vector<int> > >::~vector (_ZNSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EED2Ev, funcdef_no=13137, decl_uid=255075, cgraph_uid=5048, symbol_order=5974)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:118111600 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 96 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/c++/11/bits/stl_vector.h":678:7 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 96 [ this ])
                (const_int 8 [0x8])) [121 this_3(D)->D.255078._M_impl.D.254423._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 95 [ __first ])
        (mem/f:DI (reg/f:DI 96 [ this ]) [121 this_3(D)->D.255078._M_impl.D.254423._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _1 ])
            (reg/v/f:DI 95 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 9 8 67 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 73)
;;  succ:       3 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
;;              14 [11.0% (guessed)]  count:12992276 (estimated locally)

;; basic block 3, loop depth 1, count 955630213 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       12 [always]  count:850510890 (estimated locally) (FALLTHRU)
;;              2 [89.0% (guessed)]  count:105119324 (estimated locally) (FALLTHRU)
(code_label 67 9 10 3 1318 (nil) [0 uses])
(note 10 67 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 85 [ _19 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 95 [ __first ])
                (const_int 8 [0x8])) [124 MEM[(struct vector * *)__first_24 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/v/f:DI 94 [ __first ])
        (mem/f:DI (reg/v/f:DI 95 [ __first ]) [124 MEM[(struct vector * *)__first_24]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ _19 ])
            (reg/v/f:DI 94 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 14 13 38 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 44)
;;  succ:       4 [89.0% (guessed)]  count:850510890 (estimated locally) (FALLTHRU)
;;              9 [11.0% (guessed)]  count:105119323 (estimated locally)

;; basic block 4, loop depth 2, count 7731917233 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       7 [always]  count:6881406357 (estimated locally) (FALLTHRU)
;;              3 [89.0% (guessed)]  count:850510890 (estimated locally) (FALLTHRU)
(code_label 38 14 15 4 1314 (nil) [0 uses])
(note 15 38 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:DI 88 [ _28 ])
        (mem/f:DI (reg/v/f:DI 94 [ __first ]) [142 MEM[(int * *)__first_31]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _28 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 31)
;;  succ:       5 [53.5% (guessed)]  count:4134256135 (estimated locally) (FALLTHRU)
;;              6 [46.5% (guessed)]  count:3597661098 (estimated locally)

;; basic block 5, loop depth 2, count 4134256134 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [53.5% (guessed)]  count:4134256135 (estimated locally) (FALLTHRU)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:DI 98)
        (mem/f:DI (plus:DI (reg/v/f:DI 94 [ __first ])
                (const_int 16 [0x10])) [142 MEM[(int * *)__first_31 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg:DI 97)
                (minus:DI (reg/f:DI 98)
                    (reg/f:DI 88 [ _28 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 94 [ __first ])
                    (const_int 16 [0x10])) [142 MEM[(int * *)__first_31 + 16B]+0 S8 A64])
            (reg/f:DI 88 [ _28 ]))
        (nil)))
(insn 22 21 23 5 (set (reg:DI 4 si)
        (reg:DI 97)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _28 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 24 23 25 5 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 25 24 26 5 (parallel [
            (set (reg/v/f:DI 94 [ __first ])
                (plus:DI (reg/v/f:DI 94 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ _19 ])
            (reg/v/f:DI 94 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 27 26 31 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 36)
;;  succ:       7 [89.0% (guessed)]  count:3679487962 (estimated locally)
;;              8 [11.0% (guessed)]  count:454768172 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 2, count 3597661116 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [46.5% (guessed)]  count:3597661098 (estimated locally)
(code_label 31 27 32 6 1311 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (parallel [
            (set (reg/v/f:DI 94 [ __first ])
                (plus:DI (reg/v/f:DI 94 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ _19 ])
            (reg/v/f:DI 94 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 41)
;;  succ:       7 [89.0% (guessed)]  count:3201918395 (estimated locally) (FALLTHRU)
;;              8 [11.0% (guessed)]  count:395742721 (estimated locally)

;; basic block 7, loop depth 2, count 6881406357 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [89.0% (guessed)]  count:3201918395 (estimated locally) (FALLTHRU)
;;              5 [89.0% (guessed)]  count:3679487962 (estimated locally)
(code_label 36 35 37 7 1312 (nil) [1 uses])
(note 37 36 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       4 [always]  count:6881406357 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 1, count 850510893 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6 [11.0% (guessed)]  count:395742721 (estimated locally)
;;              5 [11.0% (guessed)]  count:454768172 (estimated locally) (FALLTHRU)
(code_label 41 37 42 8 1313 (nil) [1 uses])
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 8 (set (reg/v/f:DI 94 [ __first ])
        (mem/f:DI (reg/v/f:DI 95 [ __first ]) [124 MEM[(struct vector * *)__first_24]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       9 [always]  count:850510893 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 1, count 955630213 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [always]  count:850510893 (estimated locally) (FALLTHRU)
;;              3 [11.0% (guessed)]  count:105119323 (estimated locally)
(code_label 44 43 45 9 1310 (nil) [1 uses])
(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 47 46 48 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 60)
;;  succ:       10 [53.5% (guessed)]  count:510975474 (estimated locally) (FALLTHRU)
;;              11 [46.5% (guessed)]  count:444654739 (estimated locally)

;; basic block 10, loop depth 1, count 510975471 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [53.5% (guessed)]  count:510975474 (estimated locally) (FALLTHRU)
(note 48 47 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 10 (set (reg/f:DI 100)
        (mem/f:DI (plus:DI (reg/v/f:DI 95 [ __first ])
                (const_int 16 [0x10])) [124 MEM[(struct vector * *)__first_24 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 50 49 51 10 (parallel [
            (set (reg:DI 99)
                (minus:DI (reg/f:DI 100)
                    (reg/v/f:DI 94 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 95 [ __first ])
                    (const_int 16 [0x10])) [124 MEM[(struct vector * *)__first_24 + 16B]+0 S8 A64])
            (reg/v/f:DI 94 [ __first ]))
        (nil)))
(insn 51 50 52 10 (set (reg:DI 4 si)
        (reg:DI 99)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 52 51 53 10 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 53 52 54 10 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 54 53 55 10 (parallel [
            (set (reg/v/f:DI 95 [ __first ])
                (plus:DI (reg/v/f:DI 95 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 55 54 56 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _1 ])
            (reg/v/f:DI 95 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 56 55 60 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 65)
;;  succ:       12 [89.0% (guessed)]  count:454768169 (estimated locally)
;;              13 [11.0% (guessed)]  count:56207302 (estimated locally) (FALLTHRU)

;; basic block 11, loop depth 1, count 444654742 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9 [46.5% (guessed)]  count:444654739 (estimated locally)
(code_label 60 56 61 11 1315 (nil) [1 uses])
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 11 (parallel [
            (set (reg/v/f:DI 95 [ __first ])
                (plus:DI (reg/v/f:DI 95 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 63 62 64 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _1 ])
            (reg/v/f:DI 95 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 64 63 65 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 70)
;;  succ:       12 [89.0% (guessed)]  count:395742721 (estimated locally) (FALLTHRU)
;;              13 [11.0% (guessed)]  count:48912021 (estimated locally)

;; basic block 12, loop depth 1, count 850510890 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [89.0% (guessed)]  count:395742721 (estimated locally) (FALLTHRU)
;;              10 [89.0% (guessed)]  count:454768169 (estimated locally)
(code_label 65 64 66 12 1316 (nil) [1 uses])
(note 66 65 70 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       3 [always]  count:850510890 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 105119323 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       11 [11.0% (guessed)]  count:48912021 (estimated locally)
;;              10 [11.0% (guessed)]  count:56207302 (estimated locally) (FALLTHRU)
(code_label 70 66 71 13 1317 (nil) [1 uses])
(note 71 70 72 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 13 (set (reg/v/f:DI 95 [ __first ])
        (mem/f:DI (reg/f:DI 96 [ this ]) [121 MEM[(struct _Vector_base *)this_3(D)]._M_impl.D.254423._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       14 [always]  count:105119323 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 118111600 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [always]  count:105119323 (estimated locally) (FALLTHRU)
;;              2 [11.0% (guessed)]  count:12992276 (estimated locally)
(code_label 73 72 74 14 1309 (nil) [1 uses])
(note 74 73 75 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 95 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 76 75 77 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 86)
;;  succ:       15 [53.5% (guessed)]  count:63154272 (estimated locally) (FALLTHRU)
;;              16 [46.5% (guessed)]  count:54957328 (estimated locally)

;; basic block 15, loop depth 0, count 63154270 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [53.5% (guessed)]  count:63154272 (estimated locally) (FALLTHRU)
(note 77 76 78 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 15 (set (reg/f:DI 102)
        (mem/f:DI (plus:DI (reg/f:DI 96 [ this ])
                (const_int 16 [0x10])) [121 MEM[(struct _Vector_base *)this_3(D)]._M_impl.D.254423._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 79 78 80 15 (parallel [
            (set (reg:DI 101)
                (minus:DI (reg/f:DI 102)
                    (reg/v/f:DI 95 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 96 [ this ])
                    (const_int 16 [0x10])) [121 MEM[(struct _Vector_base *)this_3(D)]._M_impl.D.254423._M_end_of_storage+0 S8 A64])
            (reg/v/f:DI 95 [ __first ]))
        (nil)))
(insn 80 79 81 15 (set (reg:DI 4 si)
        (reg:DI 101)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 81 80 82 15 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn/j 82 81 86 15 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:63154270 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 16, loop depth 0, count 54957330 (estimated locally), maybe hot
;;  prev block 15, next block 1, flags: (RTL)
;;  pred:       14 [46.5% (guessed)]  count:54957328 (estimated locally)
(code_label 86 82 87 16 1308 (nil) [1 uses])
(note 87 86 0 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:54957330 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<std::vector<std::vector<std::vector<int> > > (ChineseCheckers::*)(), boost::python::default_call_policies, boost::mpl::vector2<std::vector<std::vector<std::vector<int> > >, ChineseCheckers&> > >::operator() (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFSt6vectorIS6_IS6_IiSaIiEESaIS8_EESaISA_EEvENS0_21default_call_policiesENS_3mpl7vector2ISC_RS5_EEEEEclEP7_objectSN_, funcdef_no=13480, decl_uid=294507, cgraph_uid=5391, symbol_order=7118)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/f:DI 114 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(insn 3 2 5 2 (set (reg/v/f:DI 115 [ args ])
        (reg:DI 4 si [ args ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(note 5 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 7 2 (set (reg/f:DI 117)
        (const_int 40 [0x28])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.331288+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 117) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object/py_function.hpp":36:15 1159 {stack_protect_set_1_di}
     (nil))
(insn 10 7 11 2 (set (reg/f:DI 118)
        (mem/f:DI (plus:DI (reg/v/f:DI 115 [ args ])
                (const_int 8 [0x8])) [9 args_4(D)->ob_type+0 S8 A64])) "/usr/include/python3.10/object.h":729:11 74 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 120)
        (mem:DI (plus:DI (reg/f:DI 118)
                (const_int 168 [0xa8])) [7 _18->tp_flags+0 S8 A64])) "/usr/include/python3.10/object.h":731:20 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 119)
                (and:DI (reg:DI 120)
                    (const_int 67108864 [0x4000000])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":731:20 486 {*anddi_1}
     (expr_list:REG_EQUAL (and:DI (mem:DI (plus:DI (reg/f:DI 118)
                    (const_int 168 [0xa8])) [7 _18->tp_flags+0 S8 A64])
            (const_int 67108864 [0x4000000]))
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 119)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":48:12 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":48:12 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 25)
;;  succ:       4 [100.0% (guessed)]  count:1073312328 (estimated locally)
;;              3 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 429519 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 121)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 2 cx)
        (reg:DI 121)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)
        (nil)))
(insn 18 17 19 3 (set (reg:SI 1 dx)
        (const_int 48 [0x30])) "/usr/include/boost/python/detail/caller.hpp":48:12 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 122)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 4 si)
        (reg:DI 122)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)
        (nil)))
(insn 21 20 22 3 (set (reg:DI 123)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 123)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)
        (nil)))
(call_insn 23 22 25 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":48:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 4, loop depth 0, count 1073312367 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:1073312328 (estimated locally)
(code_label 25 23 26 4 1322 (nil) [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:DI 124)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:DI 125)
        (mem/f:DI (plus:DI (reg/v/f:DI 115 [ args ])
                (const_int 24 [0x18])) [31 MEM[(struct PyTupleObject *)args_4(D)].ob_item[0]+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 124) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (reg:DI 125)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(call_insn 31 30 32 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>) [0 get_lvalue_from_python S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 4 (set (reg/f:DI 113 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 113 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 153)
            (pc))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 806 {*jcc}
     (int_list:REG_BR_PROB 166107868 (nil))
 -> 153)
;;  succ:       24 [15.5% (guessed)]  count:166041427 (estimated locally)
;;              5 [84.5% (guessed)]  count:907270940 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 907270941 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [84.5% (guessed)]  count:907270940 (estimated locally) (FALLTHRU)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg/f:DI 83 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 114 [ this ])
                (const_int 8 [0x8])) [0 MEM <struct vector ChineseCheckers::<T285c2> (struct ChineseCheckers *) *> [(struct  &)this_2(D) + 8]+0 S8 A64])) 74 {*movdi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:DI 89 [ _24 ])
        (reg/f:DI 83 [ _15 ])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:DI 126)
        (mem:DI (plus:DI (reg/f:DI 114 [ this ])
                (const_int 16 [0x10])) [0 MEM <long int> [(struct  &)this_2(D) + 16]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg/f:DI 112 [ _113 ])
                (plus:DI (reg/f:DI 113 [ <retval> ])
                    (reg:DI 126)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:25 210 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 113 [ <retval> ])
            (mem:DI (plus:DI (reg/f:DI 114 [ this ])
                    (const_int 16 [0x10])) [0 MEM <long int> [(struct  &)this_2(D) + 16]+0 S8 A64]))
        (nil)))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 127)
                (and:DI (reg:DI 89 [ _24 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:25 486 {*anddi_1}
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 127)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/invoke.hpp":86:25 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "/usr/include/boost/python/detail/invoke.hpp":86:25 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 46)
;;  succ:       6 [50.0% (guessed)]  count:453635471 (estimated locally) (FALLTHRU)
;;              7 [50.0% (guessed)]  count:453635471 (estimated locally)

;; basic block 6, loop depth 0, count 453635440 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [50.0% (guessed)]  count:453635471 (estimated locally) (FALLTHRU)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg/f:DI 128)
        (mem/f:DI (reg/f:DI 112 [ _113 ]) [5 MEM[(int (*) () * *)_113]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 45 44 46 6 (set (reg/f:DI 83 [ _15 ])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 128)
                    (reg:DI 89 [ _24 ]))
                (const_int -1 [0xffffffffffffffff])) [38 *_32+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
;;  succ:       7 [always]  count:453635440 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 907270941 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5 [50.0% (guessed)]  count:453635471 (estimated locally)
;;              6 [always]  count:453635440 (estimated locally) (FALLTHRU)
(code_label 46 45 47 7 1324 (nil) [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:14 210 {*adddi_1}
     (nil))
(insn 49 48 50 7 (set (reg:DI 4 si)
        (reg/f:DI 112 [ _113 ])) "/usr/include/boost/python/detail/invoke.hpp":86:14 74 {*movdi_internal}
     (nil))
(insn 50 49 51 7 (set (reg:DI 5 di)
        (reg:DI 129)) "/usr/include/boost/python/detail/invoke.hpp":86:14 74 {*movdi_internal}
     (nil))
(call_insn 51 50 52 7 (call (mem:QI (reg/f:DI 83 [ _15 ]) [0 *iftmp.136_37 S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/invoke.hpp":86:14 813 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 52 51 53 7 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/to_python_value.hpp":156:72 210 {*adddi_1}
     (nil))
(insn 53 52 54 7 (set (reg/f:DI 131)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IS4_IiSaIiEESaIS6_EESaIS8_EEE10convertersE")  <var_decl 0x7f1a34c9fa20 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
(insn 54 53 55 7 (set (reg:DI 4 si)
        (reg:DI 130)) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
(insn 55 54 56 7 (set (reg:DI 5 di)
        (mem/f/c:DI (reg/f:DI 131) [42 converters+0 S8 A64])) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
(call_insn 56 55 163 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration9to_pythonEPVKv") [flags 0x41]  <function_decl 0x7f1a3a992100 to_python>) [0 to_python S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/to_python_value.hpp":156:72 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration9to_pythonEPVKv") [flags 0x41]  <function_decl 0x7f1a3a992100 to_python>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       22 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 [always (adjusted)]  count:907270941 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 907270941 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always (adjusted)]  count:907270941 (estimated locally) (FALLTHRU)
(note 163 56 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 163 59 8 (set (reg/f:DI 113 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/to_python_value.hpp":156:72 74 {*movdi_internal}
     (nil))
(insn 59 57 60 8 (set (reg/f:DI 96 [ _41 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [121 D.331251.D.255078._M_impl.D.254423._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 60 59 61 8 (set (reg/v/f:DI 110 [ __first ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [121 D.331251.D.255078._M_impl.D.254423._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 61 60 62 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ _41 ])
            (reg/v/f:DI 110 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 62 61 120 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 126)
;;  succ:       9 [89.0% (guessed)]  count:807471138 (estimated locally) (FALLTHRU)
;;              20 [11.0% (guessed)]  count:99799803 (estimated locally)

;; basic block 9, loop depth 1, count 7340646667 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       18 [always]  count:6533175538 (estimated locally) (FALLTHRU)
;;              8 [89.0% (guessed)]  count:807471138 (estimated locally) (FALLTHRU)
(code_label 120 62 63 9 1334 (nil) [0 uses])
(note 63 120 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (reg/f:DI 99 [ _51 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ __first ])
                (const_int 8 [0x8])) [124 MEM[(struct vector * *)__first_56 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 65 64 66 9 (set (reg/v/f:DI 109 [ __first ])
        (mem/f:DI (reg/v/f:DI 110 [ __first ]) [124 MEM[(struct vector * *)__first_56]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 66 65 67 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ _51 ])
            (reg/v/f:DI 109 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 67 66 91 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 97)
;;  succ:       10 [89.0% (guessed)]  count:6533175538 (estimated locally) (FALLTHRU)
;;              15 [11.0% (guessed)]  count:807471129 (estimated locally)

;; basic block 10, loop depth 2, count 59392505336 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       13 [always]  count:52859329784 (estimated locally) (FALLTHRU)
;;              9 [89.0% (guessed)]  count:6533175538 (estimated locally) (FALLTHRU)
(code_label 91 67 68 10 1330 (nil) [0 uses])
(note 68 91 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (set (reg/f:DI 102 [ _60 ])
        (mem/f:DI (reg/v/f:DI 109 [ __first ]) [142 MEM[(int * *)__first_57]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 70 69 71 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 102 [ _60 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 71 70 72 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 84)
;;  succ:       11 [53.5% (guessed)]  count:31757172532 (estimated locally) (FALLTHRU)
;;              12 [46.5% (guessed)]  count:27635332804 (estimated locally)

;; basic block 11, loop depth 2, count 31757172488 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [53.5% (guessed)]  count:31757172532 (estimated locally) (FALLTHRU)
(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 11 (set (reg/f:DI 133)
        (mem/f:DI (plus:DI (reg/v/f:DI 109 [ __first ])
                (const_int 16 [0x10])) [142 MEM[(int * *)__first_57 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 74 73 75 11 (parallel [
            (set (reg:DI 132)
                (minus:DI (reg/f:DI 133)
                    (reg/f:DI 102 [ _60 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 109 [ __first ])
                    (const_int 16 [0x10])) [142 MEM[(int * *)__first_57 + 16B]+0 S8 A64])
            (reg/f:DI 102 [ _60 ]))
        (nil)))
(insn 75 74 76 11 (set (reg:DI 4 si)
        (reg:DI 132)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 76 75 77 11 (set (reg:DI 5 di)
        (reg/f:DI 102 [ _60 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 77 76 78 11 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 78 77 79 11 (parallel [
            (set (reg/v/f:DI 109 [ __first ])
                (plus:DI (reg/v/f:DI 109 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 79 78 80 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ _51 ])
            (reg/v/f:DI 109 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 80 79 84 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 89)
;;  succ:       13 [89.0% (guessed)]  count:28263883533 (estimated locally)
;;              14 [11.0% (guessed)]  count:3493288955 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 2, count 27635332848 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       10 [46.5% (guessed)]  count:27635332804 (estimated locally)
(code_label 84 80 85 12 1327 (nil) [1 uses])
(note 85 84 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 12 (parallel [
            (set (reg/v/f:DI 109 [ __first ])
                (plus:DI (reg/v/f:DI 109 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 87 86 88 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ _51 ])
            (reg/v/f:DI 109 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 88 87 89 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 94)
;;  succ:       13 [89.0% (guessed)]  count:24595446251 (estimated locally) (FALLTHRU)
;;              14 [11.0% (guessed)]  count:3039886597 (estimated locally)

;; basic block 13, loop depth 2, count 52859329784 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [89.0% (guessed)]  count:24595446251 (estimated locally) (FALLTHRU)
;;              11 [89.0% (guessed)]  count:28263883533 (estimated locally)
(code_label 89 88 90 13 1328 (nil) [1 uses])
(note 90 89 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
;;  succ:       10 [always]  count:52859329784 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 1, count 6533175552 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       12 [11.0% (guessed)]  count:3039886597 (estimated locally)
;;              11 [11.0% (guessed)]  count:3493288955 (estimated locally) (FALLTHRU)
(code_label 94 90 95 14 1329 (nil) [1 uses])
(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 14 (set (reg/v/f:DI 109 [ __first ])
        (mem/f:DI (reg/v/f:DI 110 [ __first ]) [124 MEM[(struct vector * *)__first_56]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       15 [always]  count:6533175552 (estimated locally) (FALLTHRU)

;; basic block 15, loop depth 1, count 7340646667 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [always]  count:6533175552 (estimated locally) (FALLTHRU)
;;              9 [11.0% (guessed)]  count:807471129 (estimated locally)
(code_label 97 96 98 15 1326 (nil) [1 uses])
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 109 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 100 99 101 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 113)
;;  succ:       16 [53.5% (guessed)]  count:3925043764 (estimated locally) (FALLTHRU)
;;              17 [46.5% (guessed)]  count:3415602903 (estimated locally)

;; basic block 16, loop depth 1, count 3925043740 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [53.5% (guessed)]  count:3925043764 (estimated locally) (FALLTHRU)
(note 101 100 102 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 16 (set (reg/f:DI 135)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ __first ])
                (const_int 16 [0x10])) [124 MEM[(struct vector * *)__first_56 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 103 102 104 16 (parallel [
            (set (reg:DI 134)
                (minus:DI (reg/f:DI 135)
                    (reg/v/f:DI 109 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 110 [ __first ])
                    (const_int 16 [0x10])) [124 MEM[(struct vector * *)__first_56 + 16B]+0 S8 A64])
            (reg/v/f:DI 109 [ __first ]))
        (nil)))
(insn 104 103 105 16 (set (reg:DI 4 si)
        (reg:DI 134)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 105 104 106 16 (set (reg:DI 5 di)
        (reg/v/f:DI 109 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 106 105 107 16 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 107 106 108 16 (parallel [
            (set (reg/v/f:DI 110 [ __first ])
                (plus:DI (reg/v/f:DI 110 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 108 107 109 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ _41 ])
            (reg/v/f:DI 110 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 109 108 113 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 118)
;;  succ:       18 [89.0% (guessed)]  count:3493288931 (estimated locally)
;;              19 [11.0% (guessed)]  count:431754809 (estimated locally) (FALLTHRU)

;; basic block 17, loop depth 1, count 3415602927 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       15 [46.5% (guessed)]  count:3415602903 (estimated locally)
(code_label 113 109 114 17 1331 (nil) [1 uses])
(note 114 113 115 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 17 (parallel [
            (set (reg/v/f:DI 110 [ __first ])
                (plus:DI (reg/v/f:DI 110 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 116 115 117 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ _41 ])
            (reg/v/f:DI 110 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 117 116 118 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 123)
;;  succ:       18 [89.0% (guessed)]  count:3039886607 (estimated locally) (FALLTHRU)
;;              19 [11.0% (guessed)]  count:375716320 (estimated locally)

;; basic block 18, loop depth 1, count 6533175538 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [89.0% (guessed)]  count:3039886607 (estimated locally) (FALLTHRU)
;;              16 [89.0% (guessed)]  count:3493288931 (estimated locally)
(code_label 118 117 119 18 1332 (nil) [1 uses])
(note 119 118 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
;;  succ:       9 [always]  count:6533175538 (estimated locally) (FALLTHRU)

;; basic block 19, loop depth 0, count 807471129 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       17 [11.0% (guessed)]  count:375716320 (estimated locally)
;;              16 [11.0% (guessed)]  count:431754809 (estimated locally) (FALLTHRU)
(code_label 123 119 124 19 1333 (nil) [1 uses])
(note 124 123 125 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 19 (set (reg/v/f:DI 110 [ __first ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [121 MEM[(struct _Vector_base *)&D.331251]._M_impl.D.254423._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       20 [always]  count:807471129 (estimated locally) (FALLTHRU)

;; basic block 20, loop depth 0, count 907270941 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [always]  count:807471129 (estimated locally) (FALLTHRU)
;;              8 [11.0% (guessed)]  count:99799803 (estimated locally)
(code_label 126 125 127 20 1325 (nil) [1 uses])
(note 127 126 128 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 110 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 129 128 130 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 153)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 153)
;;  succ:       21 [53.5% (guessed)]  count:485117771 (estimated locally) (FALLTHRU)
;;              24 [46.5% (guessed)]  count:422153170 (estimated locally)

;; basic block 21, loop depth 0, count 485117754 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [53.5% (guessed)]  count:485117771 (estimated locally) (FALLTHRU)
(note 130 129 131 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 21 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [121 MEM[(struct _Vector_base *)&D.331251]._M_impl.D.254423._M_end_of_storage+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 132 131 133 21 (parallel [
            (set (reg:DI 136)
                (minus:DI (reg/f:DI 137)
                    (reg/v/f:DI 110 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [121 MEM[(struct _Vector_base *)&D.331251]._M_impl.D.254423._M_end_of_storage+0 S8 A128])
            (reg/v/f:DI 110 [ __first ]))
        (nil)))
(insn 133 132 134 21 (set (reg:DI 4 si)
        (reg:DI 136)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 134 133 135 21 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 135 134 166 21 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       24 [always]  count:485117754 (estimated locally) (FALLTHRU)

;; basic block 22, loop depth 0, count 0 (precise), probably never executed
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       7 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 166 135 168 22 1338 (nil) [1 uses])
(note 168 166 167 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 167 168 140 22 (set (reg:DI 139)
        (reg:DI 0 ax)) "/usr/include/boost/python/detail/invoke.hpp":86:14 74 {*movdi_internal}
     (nil))
;;  succ:       23 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 23, loop depth 0, count 0 (precise), probably never executed
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 140 167 141 23 1336 (nil) [0 uses])
(note 141 140 142 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 23 (parallel [
            (set (reg:DI 138)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:14 210 {*adddi_1}
     (nil))
(insn 143 142 144 23 (set (reg:DI 5 di)
        (reg:DI 138)) "/usr/include/boost/python/detail/invoke.hpp":86:14 74 {*movdi_internal}
     (nil))
(call_insn 144 143 145 23 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EED1Ev") [flags 0x1]  <function_decl 0x7f1a371b4700 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/invoke.hpp":86:14 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EED1Ev") [flags 0x1]  <function_decl 0x7f1a371b4700 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 145 144 146 23 (set (reg/f:DI 108 [ D.331287 ])
        (reg:DI 139)) 74 {*movdi_internal}
     (nil))
(insn 146 145 147 23 (set (reg:DI 5 di)
        (reg/f:DI 108 [ D.331287 ])) 74 {*movdi_internal}
     (nil))
(call_insn 147 146 153 23 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 24, loop depth 0, count 1073312367 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       21 [always]  count:485117754 (estimated locally) (FALLTHRU)
;;              4 [15.5% (guessed)]  count:166041427 (estimated locally)
;;              20 [46.5% (guessed)]  count:422153170 (estimated locally)
(code_label 153 147 162 24 1321 (nil) [2 uses])
(note 162 153 154 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 154 162 155 24 (set (reg/f:DI 141)
        (const_int 40 [0x28])) "/usr/include/boost/python/object/py_function.hpp":39:5 74 {*movdi_internal}
     (nil))
(insn 155 154 156 24 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.331288+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 141) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/boost/python/object/py_function.hpp":39:5 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 156 155 164 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) "/usr/include/boost/python/object/py_function.hpp":39:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 159)
;;  succ:       26 [100.0% (guessed)]  count:1072883043 (estimated locally)
;;              25 [0.0% (guessed)]  count:429324 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 0, count 429324 (estimated locally)
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [0.0% (guessed)]  count:429324 (estimated locally) (FALLTHRU)
(note 164 156 157 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(call_insn 157 164 159 25 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":39:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 26, loop depth 0, count 1072883043 (estimated locally), maybe hot
;;  prev block 25, next block 1, flags: (RTL)
;;  pred:       24 [100.0% (guessed)]  count:1072883043 (estimated locally)
(code_label 159 157 165 26 1337 (nil) [1 uses])
(note 165 159 160 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 160 165 161 26 (set (reg/i:DI 0 ax)
        (reg/f:DI 113 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":39:5 74 {*movdi_internal}
     (nil))
(insn 161 160 0 26 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":39:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1072883043 (estimated locally) (FALLTHRU)


;; Function std::vector<std::vector<int> >::~vector (_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev, funcdef_no=13369, decl_uid=262941, cgraph_uid=5280, symbol_order=6209)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 91 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/c++/11/bits/stl_vector.h":678:7 74 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 8 [0x8])) [124 this_3(D)->D.262944._M_impl.D.262289._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 90 [ __first ])
        (mem/f:DI (reg/f:DI 91 [ this ]) [124 this_3(D)->D.262944._M_impl.D.262289._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _1 ])
            (reg/v/f:DI 90 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 9 8 33 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 39)
;;  succ:       3 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
;;              8 [11.0% (guessed)]  count:118111600 (estimated locally)

;; basic block 3, loop depth 1, count 8687547547 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       6 [always]  count:7731917322 (estimated locally) (FALLTHRU)
;;              2 [89.0% (guessed)]  count:955630224 (estimated locally) (FALLTHRU)
(code_label 33 9 10 3 1357 (nil) [0 uses])
(note 10 33 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 85 [ _17 ])
        (mem/f:DI (reg/v/f:DI 90 [ __first ]) [142 MEM[(int * *)__first_10]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ _17 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 26)
;;  succ:       4 [53.5% (guessed)]  count:4645231663 (estimated locally) (FALLTHRU)
;;              5 [46.5% (guessed)]  count:4042315884 (estimated locally)

;; basic block 4, loop depth 1, count 4645231662 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [53.5% (guessed)]  count:4645231663 (estimated locally) (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f:DI (plus:DI (reg/v/f:DI 90 [ __first ])
                (const_int 16 [0x10])) [142 MEM[(int * *)__first_10 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 92)
                (minus:DI (reg/f:DI 93)
                    (reg/f:DI 85 [ _17 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 90 [ __first ])
                    (const_int 16 [0x10])) [142 MEM[(int * *)__first_10 + 16B]+0 S8 A64])
            (reg/f:DI 85 [ _17 ]))
        (nil)))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 92)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _17 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 19 18 20 4 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 20 19 21 4 (parallel [
            (set (reg/v/f:DI 90 [ __first ])
                (plus:DI (reg/v/f:DI 90 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _1 ])
            (reg/v/f:DI 90 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 22 21 26 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 31)
;;  succ:       6 [89.0% (guessed)]  count:4134256182 (estimated locally)
;;              7 [11.0% (guessed)]  count:510975480 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 1, count 4042315885 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3 [46.5% (guessed)]  count:4042315884 (estimated locally)
(code_label 26 22 27 5 1354 (nil) [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (parallel [
            (set (reg/v/f:DI 90 [ __first ])
                (plus:DI (reg/v/f:DI 90 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _1 ])
            (reg/v/f:DI 90 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 36)
;;  succ:       6 [89.0% (guessed)]  count:3597661140 (estimated locally) (FALLTHRU)
;;              7 [11.0% (guessed)]  count:444654745 (estimated locally)

;; basic block 6, loop depth 1, count 7731917322 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [89.0% (guessed)]  count:3597661140 (estimated locally) (FALLTHRU)
;;              4 [89.0% (guessed)]  count:4134256182 (estimated locally)
(code_label 31 30 32 6 1355 (nil) [1 uses])
(note 32 31 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       3 [always]  count:7731917322 (estimated locally) (FALLTHRU)

;; basic block 7, loop depth 0, count 955630225 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5 [11.0% (guessed)]  count:444654745 (estimated locally)
;;              4 [11.0% (guessed)]  count:510975480 (estimated locally) (FALLTHRU)
(code_label 36 32 37 7 1356 (nil) [1 uses])
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg/v/f:DI 90 [ __first ])
        (mem/f:DI (reg/f:DI 91 [ this ]) [124 MEM[(struct _Vector_base *)this_3(D)]._M_impl.D.262289._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:955630225 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [always]  count:955630225 (estimated locally) (FALLTHRU)
;;              2 [11.0% (guessed)]  count:118111600 (estimated locally)
(code_label 39 38 40 8 1353 (nil) [1 uses])
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 90 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 42 41 43 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 52)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 52)
;;  succ:       9 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
;;              10 [46.5% (guessed)]  count:499612072 (estimated locally)

;; basic block 9, loop depth 0, count 574129749 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [53.5% (guessed)]  count:574129752 (estimated locally) (FALLTHRU)
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (reg/f:DI 95)
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 16 [0x10])) [124 MEM[(struct _Vector_base *)this_3(D)]._M_impl.D.262289._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 45 44 46 9 (parallel [
            (set (reg:DI 94)
                (minus:DI (reg/f:DI 95)
                    (reg/v/f:DI 90 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                    (const_int 16 [0x10])) [124 MEM[(struct _Vector_base *)this_3(D)]._M_impl.D.262289._M_end_of_storage+0 S8 A64])
            (reg/v/f:DI 90 [ __first ]))
        (nil)))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 94)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn/j 48 47 52 9 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 817 {*sibcall}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [always]  count:574129749 (estimated locally) (ABNORMAL,SIBCALL)

;; basic block 10, loop depth 0, count 499612075 (estimated locally), maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       8 [46.5% (guessed)]  count:499612072 (estimated locally)
(code_label 52 48 53 10 1352 (nil) [1 uses])
(note 53 52 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:499612075 (estimated locally) (FALLTHRU)


;; Function boost::python::converter::as_to_python_function<ChineseCheckers, boost::python::objects::class_cref_wrapper<ChineseCheckers, boost::python::objects::make_instance<ChineseCheckers, boost::python::objects::value_holder<ChineseCheckers> > > >::convert (_ZN5boost6python9converter21as_to_python_functionI15ChineseCheckersNS0_7objects18class_cref_wrapperIS3_NS4_13make_instanceIS3_NS4_12value_holderIS3_EEEEEEE7convertEPKv, funcdef_no=12844, decl_uid=298877, cgraph_uid=4755, symbol_order=5680)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 22 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 22 3 2 (set (reg/v/f:DI 207 [ x ])
        (reg:DI 5 di [ x ])) "/usr/include/boost/python/converter/as_to_python_function.hpp":25:22 74 {*movdi_internal}
     (nil))
(note 3 2 24 2 NOTE_INSN_FUNCTION_BEG)
(insn 24 3 25 2 (set (reg/f:DI 209)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/make_instance.hpp":67:69 74 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (mem/f/c:DI (reg/f:DI 209) [42 converters+0 S8 A64])) "/usr/include/boost/python/object/make_instance.hpp":67:69 74 {*movdi_internal}
     (nil))
(call_insn 26 25 27 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK5boost6python9converter12registration16get_class_objectEv") [flags 0x41]  <function_decl 0x7f1a3a992200 get_class_object>) [0 get_class_object S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/make_instance.hpp":67:69 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK5boost6python9converter12registration16get_class_objectEv") [flags 0x41]  <function_decl 0x7f1a3a992200 get_class_object>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 2 (set (reg/f:DI 84 [ _8 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/object/make_instance.hpp":67:69 74 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 84 [ _8 ])
            (const_int 0 [0]))) "/usr/include/boost/python/object/make_instance.hpp":32:9 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 29 28 30 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "/usr/include/boost/python/object/make_instance.hpp":32:9 806 {*jcc}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 41)
;;  succ:       3 [30.0% (guessed)]  count:322122544 (estimated locally) (FALLTHRU)
;;              4 [70.0% (guessed)]  count:751619280 (estimated locally)

;; basic block 3, loop depth 0, count 322122543 (estimated locally), maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [30.0% (guessed)]  count:322122544 (estimated locally) (FALLTHRU)
(note 30 29 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 3 (set (reg/f:DI 210)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 32 31 36 3 (set (reg/f:DI 211)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 36 32 37 3 (set (reg:DI 215)
        (mem/c:DI (reg/f:DI 211) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 37 36 38 3 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg:DI 215)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (reg/f:DI 211) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 38 37 20 3 (set (mem/c:DI (reg/f:DI 210) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])
        (reg:DI 214)) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 20 38 21 3 (set (reg:DI 208)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/make_instance.hpp":33:40 74 {*movdi_internal}
     (nil))
(insn 21 20 41 3 (set (reg/f:DI 206 [ <retval> ])
        (reg:DI 208)) "/usr/include/boost/python/object/make_instance.hpp":33:40 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
        (nil)))
;;  succ:       117 [always]  count:322122543 (estimated locally) (FALLTHRU)

;; basic block 4, loop depth 0, count 751619278 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [70.0% (guessed)]  count:751619280 (estimated locally)
(code_label 41 21 42 4 1361 (nil) [1 uses])
(note 42 41 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 4 (set (reg/f:DI 216)
        (mem/f:DI (plus:DI (reg/f:DI 84 [ _8 ])
                (const_int 304 [0x130])) [32 _8->tp_alloc+0 S8 A64])) "/usr/include/boost/python/object/make_instance.hpp":35:38 74 {*movdi_internal}
     (nil))
(insn 44 43 45 4 (set (reg:DI 4 si)
        (const_int 144 [0x90])) "/usr/include/boost/python/object/make_instance.hpp":35:38 74 {*movdi_internal}
     (nil))
(insn 45 44 46 4 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _8 ])) "/usr/include/boost/python/object/make_instance.hpp":35:38 74 {*movdi_internal}
     (nil))
(call_insn 46 45 47 4 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 216) [0 *_11 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/object/make_instance.hpp":35:38 824 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 47 46 48 4 (set (reg/f:DI 206 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/object/make_instance.hpp":35:38 74 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 206 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/python/object/make_instance.hpp":38:9 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 49 48 50 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 616)
            (pc))) "/usr/include/boost/python/object/make_instance.hpp":38:9 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 616)
;;  succ:       5 [53.5% (guessed)]  count:401890827 (estimated locally) (FALLTHRU)
;;              117 [46.5% (guessed)]  count:349728451 (estimated locally)

;; basic block 5, loop depth 0, count 401890828 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [53.5% (guessed)]  count:401890827 (estimated locally) (FALLTHRU)
(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 5 (parallel [
            (set (reg/f:DI 88 [ _13 ])
                (plus:DI (reg/f:DI 206 [ <retval> ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object/make_instance.hpp":46:43 210 {*adddi_1}
     (nil))
(insn 52 51 53 5 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _13 ])) "/usr/include/boost/python/object/value_holder.hpp":133:13 74 {*movdi_internal}
     (nil))
(call_insn 53 52 54 5 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python15instance_holderC2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70700 __ct_base >) [0 __ct_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/value_holder.hpp":133:13 813 {*call}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python15instance_holderC2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70700 __ct_base >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 [always]  count:401890828 (estimated locally) (FALLTHRU)
;;              113 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 6, loop depth 0, count 401890828 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [always]  count:401890828 (estimated locally) (FALLTHRU)
(note 54 53 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 6 (set (reg:DI 218)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE")  <var_decl 0x7f1a3642d900 _ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object/value_holder.hpp":133:13 74 {*movdi_internal}
     (nil))
(insn 56 55 57 6 (set (reg/f:DI 217)
        (plus:DI (reg:DI 218)
            (const_int 16 [0x10]))) "/usr/include/boost/python/object/value_holder.hpp":133:13 206 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE")  <var_decl 0x7f1a3642d900 _ZTVN5boost6python7objects12value_holderI15ChineseCheckersEE>)
                (const_int 16 [0x10])))
        (nil)))
(insn 57 56 58 6 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 48 [0x30])) [5 MEM[(struct value_holder *)_12 + 48B].D.281570._vptr.instance_holder+0 S8 A64])
        (reg/f:DI 217)) "/usr/include/boost/python/object/value_holder.hpp":133:13 74 {*movdi_internal}
     (nil))
(insn 58 57 59 6 (set (reg/f:DI 219)
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                (const_int 8 [0x8])) [115 MEM[(const struct vector *)x_3(D)].D.254077._M_impl.D.253422._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:50 74 {*movdi_internal}
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg:DI 97 [ _33 ])
                (minus:DI (reg/f:DI 219)
                    (mem/f:DI (reg/v/f:DI 207 [ x ]) [115 MEM[(const struct vector *)x_3(D)].D.254077._M_impl.D.253422._M_start+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                    (const_int 8 [0x8])) [115 MEM[(const struct vector *)x_3(D)].D.254077._M_impl.D.253422._M_finish+0 S8 A64])
            (mem/f:DI (reg/v/f:DI 207 [ x ]) [115 MEM[(const struct vector *)x_3(D)].D.254077._M_impl.D.253422._M_start+0 S8 A64]))
        (nil)))
(insn 60 59 61 6 (parallel [
            (set (reg/f:DI 139 [ vectp.2573 ])
                (plus:DI (reg/f:DI 206 [ <retval> ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 61 60 62 6 (set (reg:V2DI 220)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 62 61 63 6 (set (mem:V2DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 64 [0x40])) [115 MEM <vector(2) long unsigned int> [(struct vector * *)_12 + 64B]+0 S16 A64])
        (reg:V2DI 220)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 63 62 64 6 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 80 [0x50])) [115 MEM[(struct _Vector_impl_data *)_12 + 64B]._M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 64 63 65 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 97 [ _33 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 65 64 66 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 624)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 624)
;;  succ:       7 [54.7% (guessed)]  count:219713716 (estimated locally) (FALLTHRU)
;;              13 [45.3% (guessed)]  count:182177112 (estimated locally)

;; basic block 7, loop depth 0, count 219713717 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [54.7% (guessed)]  count:219713716 (estimated locally) (FALLTHRU)
(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 70 7 (set (reg:DI 145 [ prephitmp_130 ])
        (reg:DI 97 [ _33 ])) 74 {*movdi_internal}
     (nil))
(insn 70 67 71 7 (set (reg:DI 221)
        (const_int 9223372036854775800 [0x7ffffffffffffff8])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 71 70 72 7 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 145 [ prephitmp_130 ])
            (reg:DI 221))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 72 71 73 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 85)
;;  succ:       8 [10.0% (guessed)]  count:21971372 (estimated locally) (FALLTHRU)
;;              11 [90.0% (guessed)]  count:197742345 (estimated locally)

;; basic block 8, loop depth 0, count 21971372 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [10.0% (guessed)]  count:21971372 (estimated locally) (FALLTHRU)
(note 73 72 76 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 76 73 77 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 97 [ _33 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 77 76 78 8 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 81)
;;  succ:       9 [50.0% (guessed)]  count:10985686 (estimated locally) (FALLTHRU)
;;              10 [50.0% (guessed)]  count:10985686 (estimated locally)

;; basic block 9, loop depth 0, count 10985686 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [50.0% (guessed)]  count:10985686 (estimated locally) (FALLTHRU)
(note 78 77 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 79 78 81 9 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       111 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 10, loop depth 0, count 10985686 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8 [50.0% (guessed)]  count:10985686 (estimated locally)
(code_label 81 79 82 10 1365 (nil) [1 uses])
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 83 82 85 10 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       111 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 11, loop depth 0, count 197742345 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       7 [90.0% (guessed)]  count:197742345 (estimated locally)
(code_label 85 83 86 11 1364 (nil) [1 uses])
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 11 (set (reg:DI 5 di)
        (reg:DI 145 [ prephitmp_130 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 88 87 652 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       111 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [always (adjusted)]  count:197742345 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 197742345 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [always (adjusted)]  count:197742345 (estimated locally) (FALLTHRU)
(note 652 88 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 652 90 12 (set (reg/f:DI 222)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 222)
        (nil)))
(insn 90 89 624 12 (set (reg/f:DI 105 [ iftmp.58_48 ])
        (reg/f:DI 222)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
;;  succ:       14 [always]  count:197742345 (estimated locally) (FALLTHRU)

;; basic block 13, loop depth 0, count 182177112 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       6 [45.3% (guessed)]  count:182177112 (estimated locally)
(code_label 624 90 623 13 1415 (nil) [1 uses])
(note 623 624 4 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 4 623 5 13 (set (reg:DI 145 [ prephitmp_130 ])
        (const_int 0 [0])) 74 {*movdi_internal}
     (nil))
(insn 5 4 91 13 (set (reg/f:DI 105 [ iftmp.58_48 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       14 [always]  count:182177112 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 379919456 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [always]  count:182177112 (estimated locally) (FALLTHRU)
;;              12 [always]  count:197742345 (estimated locally) (FALLTHRU)
(code_label 91 5 92 14 1363 (nil) [0 uses])
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (set (reg:DI 138 [ _110 ])
        (reg/f:DI 105 [ iftmp.58_48 ])) 74 {*movdi_internal}
     (nil))
(insn 94 93 95 14 (set (reg:V2DI 223)
        (vec_duplicate:V2DI (reg:DI 138 [ _110 ]))) "/usr/include/c++/11/bits/stl_vector.h":361:25 5014 {*vec_dupv2di}
     (nil))
(insn 95 94 96 14 (set (mem:V2DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 64 [0x40])) [115 MEM <vector(2) long unsigned int> [(struct vector * *)_12 + 64B]+0 S16 A64])
        (reg:V2DI 223)) "/usr/include/c++/11/bits/stl_vector.h":361:25 1439 {movv2di_internal}
     (nil))
(insn 96 95 97 14 (parallel [
            (set (reg:DI 224)
                (plus:DI (reg/f:DI 105 [ iftmp.58_48 ])
                    (reg:DI 145 [ prephitmp_130 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 97 96 98 14 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 80 [0x50])) [115 MEM[(struct _Vector_base *)_12 + 64B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])
        (reg:DI 224)) "/usr/include/c++/11/bits/stl_vector.h":363:59 74 {*movdi_internal}
     (nil))
(insn 98 97 99 14 (set (reg/f:DI 99 [ _38 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                (const_int 8 [0x8])) [115 MEM[(const struct vector * const &)x_3(D) + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 99 98 100 14 (set (reg/f:DI 100 [ _39 ])
        (mem/f:DI (reg/v/f:DI 207 [ x ]) [115 MEM[(const struct vector * const &)x_3(D)]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 100 99 101 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ _38 ])
            (reg/f:DI 100 [ _39 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 101 100 102 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 626)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 626)
;;  succ:       15 [89.0% (guessed)]  count:338128316 (estimated locally) (FALLTHRU)
;;              28 [11.0% (guessed)]  count:41791140 (estimated locally)

;; basic block 15, loop depth 0, count 338128316 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [89.0% (guessed)]  count:338128316 (estimated locally) (FALLTHRU)
(note 102 101 103 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 6 15 (set (reg:DI 184 [ ivtmp.2635 ])
        (reg/f:DI 100 [ _39 ])) 74 {*movdi_internal}
     (nil))
(insn 6 103 175 15 (set (reg/v/f:DI 109 [ __cur ])
        (reg/f:DI 105 [ iftmp.58_48 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":88:21 74 {*movdi_internal}
     (nil))
;;  succ:       16 [always]  count:338128316 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 1, count 2131200072 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       27 [always]  count:1793071754 (estimated locally) (FALLTHRU)
;;              15 [always]  count:338128316 (estimated locally) (FALLTHRU)
(code_label 175 6 104 16 1372 (nil) [0 uses])
(note 104 175 105 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 16 (set (reg/f:DI 165 [ _172 ])
        (reg:DI 184 [ ivtmp.2635 ])) 74 {*movdi_internal}
     (nil))
(insn 106 105 107 16 (set (reg/f:DI 225)
        (mem/f:DI (plus:DI (reg/f:DI 165 [ _172 ])
                (const_int 8 [0x8])) [118 MEM[(Color * *)_172 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:50 74 {*movdi_internal}
     (nil))
(insn 107 106 108 16 (parallel [
            (set (reg:DI 113 [ _68 ])
                (minus:DI (reg/f:DI 225)
                    (mem/f:DI (reg/f:DI 165 [ _172 ]) [118 MEM[(Color * *)_172]+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 165 [ _172 ])
                    (const_int 8 [0x8])) [118 MEM[(Color * *)_172 + 8B]+0 S8 A64])
            (mem/f:DI (reg/f:DI 165 [ _172 ]) [118 MEM[(Color * *)_172]+0 S8 A64]))
        (nil)))
(insn 108 107 109 16 (set (reg:V2DI 226)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 109 108 110 16 (set (mem:V2DI (reg/v/f:DI 109 [ __cur ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__cur_19]+0 S16 A64])
        (reg:V2DI 226)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 110 109 111 16 (set (mem/f:DI (plus:DI (reg/v/f:DI 109 [ __cur ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__cur_19 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 111 110 112 16 (set (reg:DI 140 [ _115 ])
        (reg:DI 113 [ _68 ])) 74 {*movdi_internal}
     (nil))
(insn 112 111 113 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 113 [ _68 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 113 112 114 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 631)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 631)
;;  succ:       17 [54.7% (guessed)]  count:1165127081 (estimated locally) (FALLTHRU)
;;              23 [45.3% (guessed)]  count:966072991 (estimated locally)

;; basic block 17, loop depth 1, count 1165127080 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [54.7% (guessed)]  count:1165127081 (estimated locally) (FALLTHRU)
(note 114 113 117 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 117 114 118 17 (set (reg:DI 227)
        (const_int 9223372036854775804 [0x7ffffffffffffffc])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 118 117 119 17 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 140 [ _115 ])
            (reg:DI 227))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 119 118 120 17 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 132)
;;  succ:       18 [10.0% (guessed)]  count:116512710 (estimated locally) (FALLTHRU)
;;              21 [90.0% (guessed)]  count:1048614370 (estimated locally)

;; basic block 18, loop depth 0, count 116512709 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [10.0% (guessed)]  count:116512710 (estimated locally) (FALLTHRU)
(note 120 119 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 123 120 124 18 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 113 [ _68 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 124 123 125 18 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 128)
;;  succ:       19 [50.0% (guessed)]  count:58256355 (estimated locally) (FALLTHRU)
;;              20 [50.0% (guessed)]  count:58256355 (estimated locally)

;; basic block 19, loop depth 0, count 58256356 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [50.0% (guessed)]  count:58256355 (estimated locally) (FALLTHRU)
(note 125 124 126 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(call_insn 126 125 128 19 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       31 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 20, loop depth 0, count 58256356 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       18 [50.0% (guessed)]  count:58256355 (estimated locally)
(code_label 128 126 129 20 1369 (nil) [1 uses])
(note 129 128 130 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 130 129 132 20 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       31 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 21, loop depth 1, count 1048614368 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       17 [90.0% (guessed)]  count:1048614370 (estimated locally)
(code_label 132 130 133 21 1368 (nil) [1 uses])
(note 133 132 134 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 21 (set (reg:DI 5 di)
        (reg:DI 140 [ _115 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 135 134 653 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       31 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 [always (adjusted)]  count:1048614368 (estimated locally) (FALLTHRU)

;; basic block 22, loop depth 1, count 1048614368 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 [always (adjusted)]  count:1048614368 (estimated locally) (FALLTHRU)
(note 653 135 136 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 136 653 137 22 (set (reg/f:DI 228)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 228)
        (nil)))
(insn 137 136 631 22 (set (reg/f:DI 120 [ iftmp.47_80 ])
        (reg/f:DI 228)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
;;  succ:       24 [always]  count:1048614368 (estimated locally) (FALLTHRU)

;; basic block 23, loop depth 1, count 966072991 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       16 [45.3% (guessed)]  count:966072991 (estimated locally)
(code_label 631 137 630 23 1417 (nil) [1 uses])
(note 630 631 7 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 7 630 138 23 (set (reg/f:DI 120 [ iftmp.47_80 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       24 [always]  count:966072991 (estimated locally) (FALLTHRU)

;; basic block 24, loop depth 1, count 2014687363 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 [always]  count:966072991 (estimated locally) (FALLTHRU)
;;              22 [always]  count:1048614368 (estimated locally) (FALLTHRU)
(code_label 138 7 139 24 1367 (nil) [0 uses])
(note 139 138 140 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 24 (set (reg:DI 123 [ _84 ])
        (reg/f:DI 120 [ iftmp.47_80 ])) 74 {*movdi_internal}
     (nil))
(insn 141 140 142 24 (set (reg:V2DI 229)
        (vec_duplicate:V2DI (reg:DI 123 [ _84 ]))) "/usr/include/c++/11/bits/stl_vector.h":361:25 5014 {*vec_dupv2di}
     (nil))
(insn 142 141 143 24 (set (mem:V2DI (reg/v/f:DI 109 [ __cur ]) [118 MEM <vector(2) long unsigned int> [(Color * *)__cur_19]+0 S16 A64])
        (reg:V2DI 229)) "/usr/include/c++/11/bits/stl_vector.h":361:25 1439 {movv2di_internal}
     (nil))
(insn 143 142 144 24 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg/f:DI 120 [ iftmp.47_80 ])
                    (reg:DI 140 [ _115 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 144 143 145 24 (set (mem/f:DI (plus:DI (reg/v/f:DI 109 [ __cur ])
                (const_int 16 [0x10])) [118 MEM[(Color * *)__cur_19 + 16B]+0 S8 A64])
        (reg:DI 230)) "/usr/include/c++/11/bits/stl_vector.h":363:59 74 {*movdi_internal}
     (nil))
(insn 145 144 146 24 (set (reg/f:DI 115 [ _72 ])
        (mem/f:DI (plus:DI (reg/f:DI 165 [ _172 ])
                (const_int 8 [0x8])) [118 MEM[(const Color * const &)_172 + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 146 145 147 24 (set (reg/f:DI 116 [ _73 ])
        (mem/f:DI (reg/f:DI 165 [ _172 ]) [118 MEM[(const Color * const &)_172]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 147 146 148 24 (parallel [
            (set (reg:DI 117 [ _74 ])
                (minus:DI (reg/f:DI 115 [ _72 ])
                    (reg/f:DI 116 [ _73 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":429:34 283 {*subdi_1}
     (nil))
(insn 148 147 149 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 115 [ _72 ])
            (reg/f:DI 116 [ _73 ]))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 12 {*cmpdi_1}
     (nil))
(jump_insn 149 148 150 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 806 {*jcc}
     (int_list:REG_BR_PROB 574129756 (nil))
 -> 160)
;;  succ:       26 [53.5% (guessed)]  count:1077253331 (estimated locally)
;;              25 [46.5% (guessed)]  count:937434032 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 1, count 937434032 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [46.5% (guessed)]  count:937434032 (estimated locally) (FALLTHRU)
(note 150 149 151 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 25 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 120 [ iftmp.47_80 ])
                    (reg:DI 117 [ _74 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":432:22 210 {*adddi_1}
     (nil))
(insn 152 151 153 25 (set (mem/f:DI (plus:DI (reg/v/f:DI 109 [ __cur ])
                (const_int 8 [0x8])) [118 MEM[(Color * *)__cur_19 + 8B]+0 S8 A64])
        (reg:DI 231)) "/usr/include/c++/11/bits/stl_algobase.h":432:22 74 {*movdi_internal}
     (nil))
(insn 153 152 154 25 (parallel [
            (set (reg/v/f:DI 109 [ __cur ])
                (plus:DI (reg/v/f:DI 109 [ __cur ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:45 210 {*adddi_1}
     (nil))
(insn 154 153 155 25 (parallel [
            (set (reg:DI 184 [ ivtmp.2635 ])
                (plus:DI (reg:DI 184 [ ivtmp.2635 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 210 {*adddi_1}
     (nil))
(insn 155 154 156 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ _38 ])
            (reg:DI 184 [ ivtmp.2635 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 156 155 160 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 173)
;;  succ:       27 [89.0% (guessed)]  count:834316289 (estimated locally)
;;              29 [11.0% (guessed)]  count:103117743 (estimated locally) (FALLTHRU)

;; basic block 26, loop depth 1, count 1077253331 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       24 [53.5% (guessed)]  count:1077253331 (estimated locally)
(code_label 160 156 161 26 1370 (nil) [1 uses])
(note 161 160 162 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 26 (set (reg:DI 118 [ _75 ])
        (reg:DI 117 [ _74 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 163 162 164 26 (set (reg:DI 1 dx)
        (reg:DI 118 [ _75 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 164 163 165 26 (set (reg:DI 4 si)
        (reg/f:DI 116 [ _73 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 165 164 166 26 (set (reg:DI 5 di)
        (reg/f:DI 120 [ iftmp.47_80 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(call_insn 166 165 167 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_algobase.h":431:23 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 167 166 168 26 (parallel [
            (set (reg:DI 232)
                (plus:DI (reg/f:DI 120 [ iftmp.47_80 ])
                    (reg:DI 118 [ _75 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":432:22 210 {*adddi_1}
     (nil))
(insn 168 167 169 26 (set (mem/f:DI (plus:DI (reg/v/f:DI 109 [ __cur ])
                (const_int 8 [0x8])) [118 MEM[(Color * *)__cur_19 + 8B]+0 S8 A64])
        (reg:DI 232)) "/usr/include/c++/11/bits/stl_algobase.h":432:22 74 {*movdi_internal}
     (nil))
(insn 169 168 170 26 (parallel [
            (set (reg/v/f:DI 109 [ __cur ])
                (plus:DI (reg/v/f:DI 109 [ __cur ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:45 210 {*adddi_1}
     (nil))
(insn 170 169 171 26 (parallel [
            (set (reg:DI 184 [ ivtmp.2635 ])
                (plus:DI (reg:DI 184 [ ivtmp.2635 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 210 {*adddi_1}
     (nil))
(insn 171 170 172 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ _38 ])
            (reg:DI 184 [ ivtmp.2635 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 172 171 173 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 178)
;;  succ:       27 [89.0% (guessed)]  count:958755465 (estimated locally) (FALLTHRU)
;;              29 [11.0% (guessed)]  count:118497866 (estimated locally)

;; basic block 27, loop depth 1, count 1793071754 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [89.0% (guessed)]  count:958755465 (estimated locally) (FALLTHRU)
;;              25 [89.0% (guessed)]  count:834316289 (estimated locally)
(code_label 173 172 174 27 1371 (nil) [1 uses])
(note 174 173 626 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
;;  succ:       16 [always]  count:1793071754 (estimated locally) (FALLTHRU)

;; basic block 28, loop depth 0, count 41791140 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       14 [11.0% (guessed)]  count:41791140 (estimated locally)
(code_label 626 174 625 28 1416 (nil) [1 uses])
(note 625 626 8 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 8 625 178 28 (set (reg/v/f:DI 109 [ __cur ])
        (reg/f:DI 105 [ iftmp.58_48 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":88:21 74 {*movdi_internal}
     (nil))
;;  succ:       29 [always]  count:41791140 (estimated locally) (FALLTHRU)

;; basic block 29, loop depth 0, count 263406747 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       26 [11.0% (guessed)]  count:118497866 (estimated locally)
;;              28 [always]  count:41791140 (estimated locally) (FALLTHRU)
;;              25 [11.0% (guessed)]  count:103117743 (estimated locally) (FALLTHRU)
(code_label 178 8 179 29 1366 (nil) [1 uses])
(note 179 178 180 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 29 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 72 [0x48])) [115 MEM[(struct vector *)_12 + 64B].D.254077._M_impl.D.253422._M_finish+0 S8 A64])
        (reg/v/f:DI 109 [ __cur ])) "/usr/include/c++/11/bits/stl_vector.h":557:26 74 {*movdi_internal}
     (nil))
(insn 181 180 182 29 (set (reg/f:DI 233)
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                (const_int 32 [0x20])) [121 MEM[(const struct vector *)x_3(D) + 24B].D.255078._M_impl.D.254423._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:50 74 {*movdi_internal}
     (nil))
(insn 182 181 183 29 (parallel [
            (set (reg:DI 127 [ _92 ])
                (minus:DI (reg/f:DI 233)
                    (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                            (const_int 24 [0x18])) [121 MEM[(const struct vector *)x_3(D) + 24B].D.255078._M_impl.D.254423._M_start+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                    (const_int 32 [0x20])) [121 MEM[(const struct vector *)x_3(D) + 24B].D.255078._M_impl.D.254423._M_finish+0 S8 A64])
            (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                    (const_int 24 [0x18])) [121 MEM[(const struct vector *)x_3(D) + 24B].D.255078._M_impl.D.254423._M_start+0 S8 A64]))
        (nil)))
(insn 183 182 184 29 (parallel [
            (set (reg/f:DI 108 [ vectp.2581 ])
                (plus:DI (reg/f:DI 206 [ <retval> ])
                    (const_int 88 [0x58])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(insn 184 183 185 29 (set (reg:V2DI 234)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 185 184 186 29 (set (mem:V2DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 88 [0x58])) [121 MEM <vector(2) long unsigned int> [(struct vector * *)_12 + 88B]+0 S16 A64])
        (reg:V2DI 234)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 186 185 187 29 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 104 [0x68])) [121 MEM[(struct _Vector_impl_data *)_12 + 88B]._M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 187 186 188 29 (set (reg:DI 194 [ _326 ])
        (reg:DI 127 [ _92 ])) 74 {*movdi_internal}
     (nil))
(insn 188 187 189 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 127 [ _92 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 189 188 192 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 587014660 (nil))
 -> 223)
;;  succ:       37 [54.7% (guessed)]  count:144004469 (estimated locally)
;;              30 [45.3% (guessed)]  count:119402278 (estimated locally) (FALLTHRU)

;; basic block 30, loop depth 0, count 119402278 (estimated locally), maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 [45.3% (guessed)]  count:119402278 (estimated locally) (FALLTHRU)
(note 192 189 9 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 9 192 689 30 (set (reg/v/f:DI 135 [ __first ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       43 [always]  count:119402278 (estimated locally) (FALLTHRU)

;; basic block 31, loop depth 0, count 0 (precise), probably never executed
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       19 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 689 9 691 31 1429 (nil) [1 uses])
(note 691 689 690 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 690 691 193 31 (set (reg:DI 235)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
;;  succ:       32 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 32, loop depth 0, count 0 (precise), probably never executed
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       31 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 193 690 194 32 1375 (nil) [0 uses])
(note 194 193 195 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 32 (set (reg/f:DI 110 [ _63 ])
        (reg:DI 235)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
(insn 196 195 197 32 (set (reg:DI 5 di)
        (reg/f:DI 110 [ _63 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
(call_insn 197 196 198 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 198 197 199 32 (set (reg:DI 4 si)
        (reg/v/f:DI 109 [ __cur ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(insn 199 198 200 32 (set (reg:DI 5 di)
        (reg/f:DI 105 [ iftmp.58_48 ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(call_insn 200 199 201 32 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5ColorSaIS3_EEEEvT_S7_") [flags 0x1]  <function_decl 0x7f1a356a6f00 __destroy>) [0 __destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_construct.h":196:11 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5ColorSaIS3_EEEEvT_S7_") [flags 0x1]  <function_decl 0x7f1a356a6f00 __destroy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(call_insn 201 200 685 32 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_uninitialized.h":98:8 813 {*call}
     (expr_list:REG_EH_REGION (const_int 7 [0x7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       33 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 33, loop depth 0, count 0 (precise), probably never executed
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 685 201 688 33 1428 (nil) [1 uses])
(note 688 685 686 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 686 688 203 33 (set (reg:DI 237)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
;;  succ:       34 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 34, loop depth 0, count 0 (precise), probably never executed
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 203 686 204 34 1376 (nil) [0 uses])
(note 204 203 205 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(call_insn 205 204 206 34 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 813 {*call}
     (expr_list:REG_EH_REGION (const_int -7 [0xfffffffffffffff9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 206 205 208 34 (set (reg:DI 236)
        (reg:DI 237)) 74 {*movdi_internal}
     (nil))
(insn 208 206 209 34 (set (reg/f:DI 102 [ _42 ])
        (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 64 [0x40])) [115 MEM[(struct _Vector_base *)_12 + 64B]._M_impl.D.253422._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
(insn 209 208 210 34 (set (reg/f:DI 240)
        (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 80 [0x50])) [115 MEM[(struct _Vector_base *)_12 + 64B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 210 209 211 34 (parallel [
            (set (reg:DI 103 [ _43 ])
                (minus:DI (reg/f:DI 240)
                    (reg/f:DI 102 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                    (const_int 80 [0x50])) [115 MEM[(struct _Vector_base *)_12 + 64B]._M_impl.D.253422._M_end_of_storage+0 S8 A64])
            (reg/f:DI 102 [ _42 ]))
        (nil)))
(insn 211 210 212 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 102 [ _42 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 212 211 213 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 217)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 217)
;;  succ:       35 [never]  count:0 (precise) (FALLTHRU)
;;              36 [never]  count:0 (precise)

;; basic block 35, loop depth 0, count 0 (precise), probably never executed
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       34 [never]  count:0 (precise) (FALLTHRU)
(note 213 212 214 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 35 (set (reg:DI 4 si)
        (reg:DI 103 [ _43 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 215 214 216 35 (set (reg:DI 5 di)
        (reg/f:DI 102 [ _42 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 216 215 217 35 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       36 [never]  count:0 (precise) (FALLTHRU)

;; basic block 36, loop depth 0, count 0 (precise), probably never executed
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       34 [never]  count:0 (precise)
;;              35 [never]  count:0 (precise) (FALLTHRU)
(code_label 217 216 218 36 1377 (nil) [1 uses])
(note 218 217 219 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 223 36 (set (reg:DI 241)
        (reg:DI 236)) 74 {*movdi_internal}
     (nil))
;;  succ:       112 [always]  count:0 (precise) (FALLTHRU)

;; basic block 37, loop depth 0, count 144004471 (estimated locally), maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       29 [54.7% (guessed)]  count:144004469 (estimated locally)
(code_label 223 219 224 37 1373 (nil) [1 uses])
(note 224 223 227 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 227 224 228 37 (set (reg:DI 243)
        (const_int 9223372036854775800 [0x7ffffffffffffff8])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 228 227 229 37 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 194 [ _326 ])
            (reg:DI 243))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 229 228 230 37 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 242)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 242)
;;  succ:       38 [10.0% (guessed)]  count:14400447 (estimated locally) (FALLTHRU)
;;              41 [90.0% (guessed)]  count:129604024 (estimated locally)

;; basic block 38, loop depth 0, count 14400448 (estimated locally), maybe hot
;;  prev block 37, next block 39, flags: (RTL)
;;  pred:       37 [10.0% (guessed)]  count:14400447 (estimated locally) (FALLTHRU)
(note 230 229 233 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 233 230 234 38 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 127 [ _92 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 234 233 235 38 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 238)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 238)
;;  succ:       39 [50.0% (guessed)]  count:7200224 (estimated locally) (FALLTHRU)
;;              40 [50.0% (guessed)]  count:7200224 (estimated locally)

;; basic block 39, loop depth 0, count 7200224 (estimated locally), maybe hot
;;  prev block 38, next block 40, flags: (RTL)
;;  pred:       38 [50.0% (guessed)]  count:7200224 (estimated locally) (FALLTHRU)
(note 235 234 236 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(call_insn 236 235 238 39 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       109 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 40, loop depth 0, count 7200224 (estimated locally), maybe hot
;;  prev block 39, next block 41, flags: (RTL)
;;  pred:       38 [50.0% (guessed)]  count:7200224 (estimated locally)
(code_label 238 236 239 40 1380 (nil) [1 uses])
(note 239 238 240 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(call_insn 240 239 242 40 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       109 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 41, loop depth 0, count 129604023 (estimated locally), maybe hot
;;  prev block 40, next block 42, flags: (RTL)
;;  pred:       37 [90.0% (guessed)]  count:129604024 (estimated locally)
(code_label 242 240 243 41 1379 (nil) [1 uses])
(note 243 242 244 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 41 (set (reg:DI 5 di)
        (reg:DI 194 [ _326 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 245 244 654 41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       109 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              42 [always (adjusted)]  count:129604023 (estimated locally) (FALLTHRU)

;; basic block 42, loop depth 0, count 129604023 (estimated locally), maybe hot
;;  prev block 41, next block 43, flags: (RTL)
;;  pred:       41 [always (adjusted)]  count:129604023 (estimated locally) (FALLTHRU)
(note 654 245 246 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 246 654 247 42 (set (reg/f:DI 244)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 244)
        (nil)))
(insn 247 246 248 42 (set (reg/v/f:DI 135 [ __first ])
        (reg/f:DI 244)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
;;  succ:       43 [always]  count:129604023 (estimated locally) (FALLTHRU)

;; basic block 43, loop depth 0, count 249006302 (estimated locally), maybe hot
;;  prev block 42, next block 44, flags: (RTL)
;;  pred:       42 [always]  count:129604023 (estimated locally) (FALLTHRU)
;;              30 [always]  count:119402278 (estimated locally) (FALLTHRU)
(code_label 248 247 249 43 1374 (nil) [0 uses])
(note 249 248 250 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 43 (set (reg:DI 107 [ _56 ])
        (reg/v/f:DI 135 [ __first ])) 74 {*movdi_internal}
     (nil))
(insn 251 250 252 43 (set (reg:V2DI 245)
        (vec_duplicate:V2DI (reg:DI 107 [ _56 ]))) "/usr/include/c++/11/bits/stl_vector.h":361:25 5014 {*vec_dupv2di}
     (nil))
(insn 252 251 253 43 (set (mem:V2DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 88 [0x58])) [121 MEM <vector(2) long unsigned int> [(struct vector * *)_12 + 88B]+0 S16 A64])
        (reg:V2DI 245)) "/usr/include/c++/11/bits/stl_vector.h":361:25 1439 {movv2di_internal}
     (nil))
(insn 253 252 254 43 (parallel [
            (set (reg:DI 246)
                (plus:DI (reg/v/f:DI 135 [ __first ])
                    (reg:DI 194 [ _326 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 254 253 255 43 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 104 [0x68])) [121 MEM[(struct _Vector_base *)_12 + 88B]._M_impl.D.254423._M_end_of_storage+0 S8 A64])
        (reg:DI 246)) "/usr/include/c++/11/bits/stl_vector.h":363:59 74 {*movdi_internal}
     (nil))
(insn 255 254 256 43 (set (reg/f:DI 128 [ _97 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                (const_int 32 [0x20])) [121 MEM[(const struct vector * const &)x_3(D) + 32]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 256 255 257 43 (set (reg/f:DI 129 [ _98 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                (const_int 24 [0x18])) [121 MEM[(const struct vector * const &)x_3(D) + 24]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 257 256 258 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 128 [ _97 ])
            (reg/f:DI 129 [ _98 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 258 257 259 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 633)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 633)
;;  succ:       44 [89.0% (guessed)]  count:221615609 (estimated locally) (FALLTHRU)
;;              75 [11.0% (guessed)]  count:27390693 (estimated locally)

;; basic block 44, loop depth 0, count 221615609 (estimated locally), maybe hot
;;  prev block 43, next block 45, flags: (RTL)
;;  pred:       43 [89.0% (guessed)]  count:221615609 (estimated locally) (FALLTHRU)
(note 259 258 260 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 10 44 (set (reg:DI 191 [ ivtmp.2627 ])
        (reg/f:DI 129 [ _98 ])) 74 {*movdi_internal}
     (nil))
(insn 10 260 387 44 (set (reg/v/f:DI 94 [ __cur ])
        (reg/v/f:DI 135 [ __first ])) "/usr/include/c++/11/bits/stl_uninitialized.h":88:21 74 {*movdi_internal}
     (nil))
;;  succ:       45 [always]  count:221615609 (estimated locally) (FALLTHRU)

;; basic block 45, loop depth 1, count 531863772 (estimated locally), maybe hot
;;  prev block 44, next block 46, flags: (RTL)
;;  pred:       68 [89.0% (guessed)]  count:310248164 (estimated locally) (DFS_BACK)
;;              44 [always]  count:221615609 (estimated locally) (FALLTHRU)
(code_label 387 10 261 45 1392 (nil) [1 uses])
(note 261 387 262 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 45 (set (reg/f:DI 204 [ _406 ])
        (reg:DI 191 [ ivtmp.2627 ])) 74 {*movdi_internal}
     (nil))
(insn 263 262 264 45 (set (reg/f:DI 247)
        (mem/f:DI (plus:DI (reg/f:DI 204 [ _406 ])
                (const_int 8 [0x8])) [124 MEM[(struct vector * *)_406 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:50 74 {*movdi_internal}
     (nil))
(insn 264 263 265 45 (parallel [
            (set (reg:DI 144 [ _129 ])
                (minus:DI (reg/f:DI 247)
                    (mem/f:DI (reg/f:DI 204 [ _406 ]) [124 MEM[(struct vector * *)_406]+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 204 [ _406 ])
                    (const_int 8 [0x8])) [124 MEM[(struct vector * *)_406 + 8B]+0 S8 A64])
            (mem/f:DI (reg/f:DI 204 [ _406 ]) [124 MEM[(struct vector * *)_406]+0 S8 A64]))
        (nil)))
(insn 265 264 266 45 (set (reg:V2DI 248)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 266 265 267 45 (set (mem:V2DI (reg/v/f:DI 94 [ __cur ]) [124 MEM <vector(2) long unsigned int> [(struct vector * *)__cur_30]+0 S16 A64])
        (reg:V2DI 248)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 267 266 268 45 (set (mem/f:DI (plus:DI (reg/v/f:DI 94 [ __cur ])
                (const_int 16 [0x10])) [124 MEM[(struct vector * *)__cur_30 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 268 267 269 45 (set (reg:DI 173 [ _188 ])
        (reg:DI 144 [ _129 ])) 74 {*movdi_internal}
     (nil))
(insn 269 268 270 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 144 [ _129 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 270 269 271 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 638)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 638)
;;  succ:       46 [54.7% (guessed)]  count:290769925 (estimated locally) (FALLTHRU)
;;              52 [45.3% (guessed)]  count:241093847 (estimated locally)

;; basic block 46, loop depth 1, count 290769926 (estimated locally), maybe hot
;;  prev block 45, next block 47, flags: (RTL)
;;  pred:       45 [54.7% (guessed)]  count:290769925 (estimated locally) (FALLTHRU)
(note 271 270 274 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 274 271 275 46 (set (reg:DI 249)
        (const_int 9223372036854775800 [0x7ffffffffffffff8])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 275 274 276 46 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 173 [ _188 ])
            (reg:DI 249))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 276 275 277 46 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 289)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 289)
;;  succ:       47 [10.0% (guessed)]  count:29076993 (estimated locally) (FALLTHRU)
;;              50 [90.0% (guessed)]  count:261692933 (estimated locally)

;; basic block 47, loop depth 0, count 29076992 (estimated locally), maybe hot
;;  prev block 46, next block 48, flags: (RTL)
;;  pred:       46 [10.0% (guessed)]  count:29076993 (estimated locally) (FALLTHRU)
(note 277 276 280 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 280 277 281 47 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 144 [ _129 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 281 280 282 47 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 285)
;;  succ:       48 [50.0% (guessed)]  count:14538496 (estimated locally) (FALLTHRU)
;;              49 [50.0% (guessed)]  count:14538496 (estimated locally)

;; basic block 48, loop depth 0, count 14538496 (estimated locally), maybe hot
;;  prev block 47, next block 49, flags: (RTL)
;;  pred:       47 [50.0% (guessed)]  count:14538496 (estimated locally) (FALLTHRU)
(note 282 281 283 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(call_insn 283 282 285 48 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 11 [0xb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       77 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 49, loop depth 0, count 14538496 (estimated locally), maybe hot
;;  prev block 48, next block 50, flags: (RTL)
;;  pred:       47 [50.0% (guessed)]  count:14538496 (estimated locally)
(code_label 285 283 286 49 1384 (nil) [1 uses])
(note 286 285 287 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(call_insn 287 286 289 49 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 11 [0xb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       77 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 50, loop depth 1, count 261692934 (estimated locally), maybe hot
;;  prev block 49, next block 51, flags: (RTL)
;;  pred:       46 [90.0% (guessed)]  count:261692933 (estimated locally)
(code_label 289 287 290 50 1383 (nil) [1 uses])
(note 290 289 291 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 50 (set (reg:DI 5 di)
        (reg:DI 173 [ _188 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 292 291 655 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 11 [0xb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       77 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              51 [always (adjusted)]  count:261692934 (estimated locally) (FALLTHRU)

;; basic block 51, loop depth 1, count 261692934 (estimated locally), maybe hot
;;  prev block 50, next block 52, flags: (RTL)
;;  pred:       50 [always (adjusted)]  count:261692934 (estimated locally) (FALLTHRU)
(note 655 292 293 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 293 655 294 51 (set (reg/f:DI 250)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 250)
        (nil)))
(insn 294 293 638 51 (set (reg/f:DI 151 [ iftmp.37_144 ])
        (reg/f:DI 250)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
;;  succ:       53 [always]  count:261692934 (estimated locally) (FALLTHRU)

;; basic block 52, loop depth 1, count 241093847 (estimated locally), maybe hot
;;  prev block 51, next block 53, flags: (RTL)
;;  pred:       45 [45.3% (guessed)]  count:241093847 (estimated locally)
(code_label 638 294 637 52 1419 (nil) [1 uses])
(note 637 638 11 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 11 637 295 52 (set (reg/f:DI 151 [ iftmp.37_144 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       53 [always]  count:241093847 (estimated locally) (FALLTHRU)

;; basic block 53, loop depth 1, count 502786780 (estimated locally), maybe hot
;;  prev block 52, next block 54, flags: (RTL)
;;  pred:       52 [always]  count:241093847 (estimated locally) (FALLTHRU)
;;              51 [always]  count:261692934 (estimated locally) (FALLTHRU)
(code_label 295 11 296 53 1382 (nil) [0 uses])
(note 296 295 297 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 53 (set (reg:DI 91 [ _20 ])
        (reg/f:DI 151 [ iftmp.37_144 ])) 74 {*movdi_internal}
     (nil))
(insn 298 297 299 53 (set (reg:V2DI 251)
        (vec_duplicate:V2DI (reg:DI 91 [ _20 ]))) "/usr/include/c++/11/bits/stl_vector.h":361:25 5014 {*vec_dupv2di}
     (nil))
(insn 299 298 300 53 (set (mem:V2DI (reg/v/f:DI 94 [ __cur ]) [124 MEM <vector(2) long unsigned int> [(struct vector * *)__cur_30]+0 S16 A64])
        (reg:V2DI 251)) "/usr/include/c++/11/bits/stl_vector.h":361:25 1439 {movv2di_internal}
     (nil))
(insn 300 299 301 53 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 151 [ iftmp.37_144 ])
                    (reg:DI 173 [ _188 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 301 300 302 53 (set (mem/f:DI (plus:DI (reg/v/f:DI 94 [ __cur ])
                (const_int 16 [0x10])) [124 MEM[(struct vector * *)__cur_30 + 16B]+0 S8 A64])
        (reg:DI 252)) "/usr/include/c++/11/bits/stl_vector.h":363:59 74 {*movdi_internal}
     (nil))
(insn 302 301 303 53 (set (reg/f:DI 146 [ _134 ])
        (mem/f:DI (plus:DI (reg/f:DI 204 [ _406 ])
                (const_int 8 [0x8])) [124 MEM[(const struct vector * const &)_406 + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 303 302 304 53 (set (reg/f:DI 147 [ _135 ])
        (mem/f:DI (reg/f:DI 204 [ _406 ]) [124 MEM[(const struct vector * const &)_406]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 304 303 305 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 146 [ _134 ])
            (reg/f:DI 147 [ _135 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 305 304 306 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 640)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 640)
;;  succ:       54 [89.0% (guessed)]  count:447480234 (estimated locally) (FALLTHRU)
;;              67 [11.0% (guessed)]  count:55306546 (estimated locally)

;; basic block 54, loop depth 1, count 447480234 (estimated locally), maybe hot
;;  prev block 53, next block 55, flags: (RTL)
;;  pred:       53 [89.0% (guessed)]  count:447480234 (estimated locally) (FALLTHRU)
(note 306 305 307 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 12 54 (set (reg:DI 183 [ ivtmp.2619 ])
        (reg/f:DI 147 [ _135 ])) 74 {*movdi_internal}
     (nil))
(insn 12 307 379 54 (set (reg/v/f:DI 155 [ __cur ])
        (reg/f:DI 151 [ iftmp.37_144 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 74 {*movdi_internal}
     (nil))
;;  succ:       55 [always]  count:447480234 (estimated locally) (FALLTHRU)

;; basic block 55, loop depth 2, count 2820437871 (estimated locally), maybe hot
;;  prev block 54, next block 56, flags: (RTL)
;;  pred:       66 [always]  count:2372957636 (estimated locally) (FALLTHRU)
;;              54 [always]  count:447480234 (estimated locally) (FALLTHRU)
(code_label 379 12 308 55 1391 (nil) [0 uses])
(note 308 379 309 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 55 (set (reg/f:DI 199 [ _355 ])
        (reg:DI 183 [ ivtmp.2619 ])) 74 {*movdi_internal}
     (nil))
(insn 310 309 311 55 (set (reg/f:DI 253)
        (mem/f:DI (plus:DI (reg/f:DI 199 [ _355 ])
                (const_int 8 [0x8])) [142 MEM[(int * *)_355 + 8B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:50 74 {*movdi_internal}
     (nil))
(insn 311 310 312 55 (parallel [
            (set (reg:DI 159 [ _164 ])
                (minus:DI (reg/f:DI 253)
                    (mem/f:DI (reg/f:DI 199 [ _355 ]) [142 MEM[(int * *)_355]+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 199 [ _355 ])
                    (const_int 8 [0x8])) [142 MEM[(int * *)_355 + 8B]+0 S8 A64])
            (mem/f:DI (reg/f:DI 199 [ _355 ]) [142 MEM[(int * *)_355]+0 S8 A64]))
        (nil)))
(insn 312 311 313 55 (set (reg:V2DI 254)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 313 312 314 55 (set (mem:V2DI (reg/v/f:DI 155 [ __cur ]) [142 MEM <vector(2) long unsigned int> [(int * *)__cur_226]+0 S16 A64])
        (reg:V2DI 254)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 314 313 315 55 (set (mem/f:DI (plus:DI (reg/v/f:DI 155 [ __cur ])
                (const_int 16 [0x10])) [142 MEM[(int * *)__cur_226 + 16B]+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 315 314 316 55 (set (reg:DI 202 [ _379 ])
        (reg:DI 159 [ _164 ])) 74 {*movdi_internal}
     (nil))
(insn 316 315 317 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 159 [ _164 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 317 316 318 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 645)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 645)
;;  succ:       56 [54.7% (guessed)]  count:1541933386 (estimated locally) (FALLTHRU)
;;              62 [45.3% (guessed)]  count:1278504485 (estimated locally)

;; basic block 56, loop depth 2, count 1541933386 (estimated locally), maybe hot
;;  prev block 55, next block 57, flags: (RTL)
;;  pred:       55 [54.7% (guessed)]  count:1541933386 (estimated locally) (FALLTHRU)
(note 318 317 321 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 321 318 322 56 (set (reg:DI 255)
        (const_int 9223372036854775804 [0x7ffffffffffffffc])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 322 321 323 56 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 202 [ _379 ])
            (reg:DI 255))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 323 322 324 56 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 336)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 336)
;;  succ:       57 [10.0% (guessed)]  count:154193341 (estimated locally) (FALLTHRU)
;;              60 [90.0% (guessed)]  count:1387740045 (estimated locally)

;; basic block 57, loop depth 0, count 154193340 (estimated locally), maybe hot
;;  prev block 56, next block 58, flags: (RTL)
;;  pred:       56 [10.0% (guessed)]  count:154193341 (estimated locally) (FALLTHRU)
(note 324 323 327 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 327 324 328 57 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 159 [ _164 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 328 327 329 57 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 332)
;;  succ:       58 [50.0% (guessed)]  count:77096670 (estimated locally) (FALLTHRU)
;;              59 [50.0% (guessed)]  count:77096670 (estimated locally)

;; basic block 58, loop depth 0, count 77096672 (estimated locally), maybe hot
;;  prev block 57, next block 59, flags: (RTL)
;;  pred:       57 [50.0% (guessed)]  count:77096670 (estimated locally) (FALLTHRU)
(note 329 328 330 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(call_insn 330 329 332 58 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 14 [0xe])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       69 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 59, loop depth 0, count 77096672 (estimated locally), maybe hot
;;  prev block 58, next block 60, flags: (RTL)
;;  pred:       57 [50.0% (guessed)]  count:77096670 (estimated locally)
(code_label 332 330 333 59 1388 (nil) [1 uses])
(note 333 332 334 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(call_insn 334 333 336 59 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 14 [0xe])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       69 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 60, loop depth 2, count 1387740045 (estimated locally), maybe hot
;;  prev block 59, next block 61, flags: (RTL)
;;  pred:       56 [90.0% (guessed)]  count:1387740045 (estimated locally)
(code_label 336 334 337 60 1387 (nil) [1 uses])
(note 337 336 338 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 60 (set (reg:DI 5 di)
        (reg:DI 202 [ _379 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 339 338 656 60 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 14 [0xe])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       69 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              61 [always (adjusted)]  count:1387740045 (estimated locally) (FALLTHRU)

;; basic block 61, loop depth 2, count 1387740045 (estimated locally), maybe hot
;;  prev block 60, next block 62, flags: (RTL)
;;  pred:       60 [always (adjusted)]  count:1387740045 (estimated locally) (FALLTHRU)
(note 656 339 340 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 340 656 341 61 (set (reg/f:DI 256)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 256)
        (nil)))
(insn 341 340 645 61 (set (reg/f:DI 167 [ iftmp.9_176 ])
        (reg/f:DI 256)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
;;  succ:       63 [always]  count:1387740045 (estimated locally) (FALLTHRU)

;; basic block 62, loop depth 2, count 1278504485 (estimated locally), maybe hot
;;  prev block 61, next block 63, flags: (RTL)
;;  pred:       55 [45.3% (guessed)]  count:1278504485 (estimated locally)
(code_label 645 341 644 62 1421 (nil) [1 uses])
(note 644 645 13 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 13 644 342 62 (set (reg/f:DI 167 [ iftmp.9_176 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       63 [always]  count:1278504485 (estimated locally) (FALLTHRU)

;; basic block 63, loop depth 2, count 2666244530 (estimated locally), maybe hot
;;  prev block 62, next block 64, flags: (RTL)
;;  pred:       62 [always]  count:1278504485 (estimated locally) (FALLTHRU)
;;              61 [always]  count:1387740045 (estimated locally) (FALLTHRU)
(code_label 342 13 343 63 1386 (nil) [0 uses])
(note 343 342 344 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 63 (set (reg:DI 121 [ _81 ])
        (reg/f:DI 167 [ iftmp.9_176 ])) 74 {*movdi_internal}
     (nil))
(insn 345 344 346 63 (set (reg:V2DI 257)
        (vec_duplicate:V2DI (reg:DI 121 [ _81 ]))) "/usr/include/c++/11/bits/stl_vector.h":361:25 5014 {*vec_dupv2di}
     (nil))
(insn 346 345 347 63 (set (mem:V2DI (reg/v/f:DI 155 [ __cur ]) [142 MEM <vector(2) long unsigned int> [(int * *)__cur_226]+0 S16 A64])
        (reg:V2DI 257)) "/usr/include/c++/11/bits/stl_vector.h":361:25 1439 {movv2di_internal}
     (nil))
(insn 347 346 348 63 (parallel [
            (set (reg:DI 258)
                (plus:DI (reg/f:DI 167 [ iftmp.9_176 ])
                    (reg:DI 202 [ _379 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 348 347 349 63 (set (mem/f:DI (plus:DI (reg/v/f:DI 155 [ __cur ])
                (const_int 16 [0x10])) [142 MEM[(int * *)__cur_226 + 16B]+0 S8 A64])
        (reg:DI 258)) "/usr/include/c++/11/bits/stl_vector.h":363:59 74 {*movdi_internal}
     (nil))
(insn 349 348 350 63 (set (reg/f:DI 161 [ _168 ])
        (mem/f:DI (plus:DI (reg/f:DI 199 [ _355 ])
                (const_int 8 [0x8])) [142 MEM[(const int * const &)_355 + 8]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 350 349 351 63 (set (reg/f:DI 162 [ _169 ])
        (mem/f:DI (reg/f:DI 199 [ _355 ]) [142 MEM[(const int * const &)_355]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 351 350 352 63 (parallel [
            (set (reg:DI 163 [ _170 ])
                (minus:DI (reg/f:DI 161 [ _168 ])
                    (reg/f:DI 162 [ _169 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":429:34 283 {*subdi_1}
     (nil))
(insn 352 351 353 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 161 [ _168 ])
            (reg/f:DI 162 [ _169 ]))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 12 {*cmpdi_1}
     (nil))
(jump_insn 353 352 354 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 364)
            (pc))) "/usr/include/c++/11/bits/stl_algobase.h":430:4 806 {*jcc}
     (int_list:REG_BR_PROB 574129756 (nil))
 -> 364)
;;  succ:       65 [53.5% (guessed)]  count:1425640947 (estimated locally)
;;              64 [46.5% (guessed)]  count:1240603583 (estimated locally) (FALLTHRU)

;; basic block 64, loop depth 2, count 1240603583 (estimated locally), maybe hot
;;  prev block 63, next block 65, flags: (RTL)
;;  pred:       63 [46.5% (guessed)]  count:1240603583 (estimated locally) (FALLTHRU)
(note 354 353 355 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 64 (parallel [
            (set (reg:DI 259)
                (plus:DI (reg/f:DI 167 [ iftmp.9_176 ])
                    (reg:DI 163 [ _170 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":432:22 210 {*adddi_1}
     (nil))
(insn 356 355 357 64 (set (mem/f:DI (plus:DI (reg/v/f:DI 155 [ __cur ])
                (const_int 8 [0x8])) [142 MEM[(int * *)__cur_226 + 8B]+0 S8 A64])
        (reg:DI 259)) "/usr/include/c++/11/bits/stl_algobase.h":432:22 74 {*movdi_internal}
     (nil))
(insn 357 356 358 64 (parallel [
            (set (reg/v/f:DI 155 [ __cur ])
                (plus:DI (reg/v/f:DI 155 [ __cur ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:45 210 {*adddi_1}
     (nil))
(insn 358 357 359 64 (parallel [
            (set (reg:DI 183 [ ivtmp.2619 ])
                (plus:DI (reg:DI 183 [ ivtmp.2619 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 210 {*adddi_1}
     (nil))
(insn 359 358 360 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 146 [ _134 ])
            (reg:DI 183 [ ivtmp.2619 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 360 359 364 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 377)
;;  succ:       66 [89.0% (guessed)]  count:1104137190 (estimated locally)
;;              68 [11.0% (guessed)]  count:136466393 (estimated locally) (FALLTHRU)

;; basic block 65, loop depth 2, count 1425640950 (estimated locally), maybe hot
;;  prev block 64, next block 66, flags: (RTL)
;;  pred:       63 [53.5% (guessed)]  count:1425640947 (estimated locally)
(code_label 364 360 365 65 1389 (nil) [1 uses])
(note 365 364 366 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 65 (set (reg:DI 164 [ _171 ])
        (reg:DI 163 [ _170 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 367 366 368 65 (set (reg:DI 1 dx)
        (reg:DI 164 [ _171 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 368 367 369 65 (set (reg:DI 4 si)
        (reg/f:DI 162 [ _169 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(insn 369 368 370 65 (set (reg:DI 5 di)
        (reg/f:DI 167 [ iftmp.9_176 ])) "/usr/include/c++/11/bits/stl_algobase.h":431:23 74 {*movdi_internal}
     (nil))
(call_insn 370 369 371 65 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_algobase.h":431:23 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7f1a5189df00 __builtin_memmove>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 371 370 372 65 (parallel [
            (set (reg:DI 260)
                (plus:DI (reg/f:DI 167 [ iftmp.9_176 ])
                    (reg:DI 164 [ _171 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_algobase.h":432:22 210 {*adddi_1}
     (nil))
(insn 372 371 373 65 (set (mem/f:DI (plus:DI (reg/v/f:DI 155 [ __cur ])
                (const_int 8 [0x8])) [142 MEM[(int * *)__cur_226 + 8B]+0 S8 A64])
        (reg:DI 260)) "/usr/include/c++/11/bits/stl_algobase.h":432:22 74 {*movdi_internal}
     (nil))
(insn 373 372 374 65 (parallel [
            (set (reg/v/f:DI 155 [ __cur ])
                (plus:DI (reg/v/f:DI 155 [ __cur ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:45 210 {*adddi_1}
     (nil))
(insn 374 373 375 65 (parallel [
            (set (reg:DI 183 [ ivtmp.2619 ])
                (plus:DI (reg:DI 183 [ ivtmp.2619 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 210 {*adddi_1}
     (nil))
(insn 375 374 376 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 146 [ _134 ])
            (reg:DI 183 [ ivtmp.2619 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 376 375 377 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 382)
;;  succ:       66 [89.0% (guessed)]  count:1268820446 (estimated locally) (FALLTHRU)
;;              68 [11.0% (guessed)]  count:156820504 (estimated locally)

;; basic block 66, loop depth 2, count 2372957636 (estimated locally), maybe hot
;;  prev block 65, next block 67, flags: (RTL)
;;  pred:       65 [89.0% (guessed)]  count:1268820446 (estimated locally) (FALLTHRU)
;;              64 [89.0% (guessed)]  count:1104137190 (estimated locally)
(code_label 377 376 378 66 1390 (nil) [1 uses])
(note 378 377 640 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
;;  succ:       55 [always]  count:2372957636 (estimated locally) (FALLTHRU)

;; basic block 67, loop depth 1, count 55306546 (estimated locally), maybe hot
;;  prev block 66, next block 68, flags: (RTL)
;;  pred:       53 [11.0% (guessed)]  count:55306546 (estimated locally)
(code_label 640 378 639 67 1420 (nil) [1 uses])
(note 639 640 14 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 14 639 382 67 (set (reg/v/f:DI 155 [ __cur ])
        (reg/f:DI 151 [ iftmp.37_144 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 74 {*movdi_internal}
     (nil))
;;  succ:       68 [always]  count:55306546 (estimated locally) (FALLTHRU)

;; basic block 68, loop depth 1, count 348593443 (estimated locally), maybe hot
;;  prev block 67, next block 69, flags: (RTL)
;;  pred:       65 [11.0% (guessed)]  count:156820504 (estimated locally)
;;              67 [always]  count:55306546 (estimated locally) (FALLTHRU)
;;              64 [11.0% (guessed)]  count:136466393 (estimated locally) (FALLTHRU)
(code_label 382 14 383 68 1385 (nil) [1 uses])
(note 383 382 384 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 384 383 385 68 (set (mem/f:DI (plus:DI (reg/v/f:DI 94 [ __cur ])
                (const_int 8 [0x8])) [124 MEM[(struct vector * *)__cur_30 + 8B]+0 S8 A64])
        (reg/v/f:DI 155 [ __cur ])) "/usr/include/c++/11/bits/stl_vector.h":557:26 74 {*movdi_internal}
     (nil))
(insn 385 384 386 68 (parallel [
            (set (reg/v/f:DI 94 [ __cur ])
                (plus:DI (reg/v/f:DI 94 [ __cur ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:45 210 {*adddi_1}
     (nil))
(insn 386 385 388 68 (parallel [
            (set (reg:DI 191 [ ivtmp.2627 ])
                (plus:DI (reg:DI 191 [ ivtmp.2627 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 210 {*adddi_1}
     (nil))
(insn 388 386 389 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 128 [ _97 ])
            (reg:DI 191 [ ivtmp.2627 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 389 388 704 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 387)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 387)
;;  succ:       45 [89.0% (guessed)]  count:310248164 (estimated locally) (DFS_BACK)
;;              76 [11.0% (guessed)]  count:38345279 (estimated locally) (FALLTHRU)

;; basic block 69, loop depth 0, count 0 (precise), probably never executed
;;  prev block 68, next block 70, flags: (RTL)
;;  pred:       58 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              59 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              60 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 704 389 706 69 1433 (nil) [1 uses])
(note 706 704 705 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 705 706 393 69 (set (reg:DI 261)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
;;  succ:       70 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 70, loop depth 0, count 0 (precise), probably never executed
;;  prev block 69, next block 71, flags: (RTL)
;;  pred:       69 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 393 705 394 70 1393 (nil) [0 uses])
(note 394 393 395 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 396 70 (set (reg/f:DI 156 [ _159 ])
        (reg:DI 261)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
(insn 396 395 397 70 (set (reg:DI 5 di)
        (reg/f:DI 156 [ _159 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
(call_insn 397 396 398 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 398 397 399 70 (set (reg:DI 4 si)
        (reg/v/f:DI 155 [ __cur ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(insn 399 398 400 70 (set (reg:DI 5 di)
        (reg/f:DI 151 [ iftmp.37_144 ])) "/usr/include/c++/11/bits/stl_construct.h":196:11 74 {*movdi_internal}
     (nil))
(call_insn 400 399 401 70 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_") [flags 0x1]  <function_decl 0x7f1a35a90100 __destroy>) [0 __destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_construct.h":196:11 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_") [flags 0x1]  <function_decl 0x7f1a35a90100 __destroy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(call_insn 401 400 700 70 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_uninitialized.h":98:8 813 {*call}
     (expr_list:REG_EH_REGION (const_int 13 [0xd])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       71 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 71, loop depth 0, count 0 (precise), probably never executed
;;  prev block 70, next block 72, flags: (RTL)
;;  pred:       70 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 700 401 703 71 1432 (nil) [1 uses])
(note 703 700 701 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 701 703 403 71 (set (reg:DI 263)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
;;  succ:       72 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 72, loop depth 0, count 0 (precise), probably never executed
;;  prev block 71, next block 73, flags: (RTL)
;;  pred:       71 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 403 701 404 72 1394 (nil) [0 uses])
(note 404 403 405 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(call_insn 405 404 406 72 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 813 {*call}
     (expr_list:REG_EH_REGION (const_int -15 [0xfffffffffffffff1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 406 405 408 72 (set (reg:DI 262)
        (reg:DI 263)) 74 {*movdi_internal}
     (nil))
(insn 408 406 409 72 (set (reg/f:DI 149 [ _138 ])
        (mem/f:DI (reg/v/f:DI 94 [ __cur ]) [124 MEM[(struct _Vector_base *)__cur_30]._M_impl.D.262289._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
(insn 409 408 410 72 (set (reg/f:DI 266)
        (mem/f:DI (plus:DI (reg/v/f:DI 94 [ __cur ])
                (const_int 16 [0x10])) [124 MEM[(struct _Vector_base *)__cur_30]._M_impl.D.262289._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 410 409 411 72 (parallel [
            (set (reg:DI 150 [ _139 ])
                (minus:DI (reg/f:DI 266)
                    (reg/f:DI 149 [ _138 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 94 [ __cur ])
                    (const_int 16 [0x10])) [124 MEM[(struct _Vector_base *)__cur_30]._M_impl.D.262289._M_end_of_storage+0 S8 A64])
            (reg/f:DI 149 [ _138 ]))
        (nil)))
(insn 411 410 412 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 149 [ _138 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 412 411 413 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 417)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 417)
;;  succ:       73 [never]  count:0 (precise) (FALLTHRU)
;;              74 [never]  count:0 (precise)

;; basic block 73, loop depth 0, count 0 (precise), probably never executed
;;  prev block 72, next block 74, flags: (RTL)
;;  pred:       72 [never]  count:0 (precise) (FALLTHRU)
(note 413 412 414 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 73 (set (reg:DI 4 si)
        (reg:DI 150 [ _139 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 415 414 416 73 (set (reg:DI 5 di)
        (reg/f:DI 149 [ _138 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 416 415 417 73 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       74 [never]  count:0 (precise) (FALLTHRU)

;; basic block 74, loop depth 0, count 0 (precise), probably never executed
;;  prev block 73, next block 75, flags: (RTL)
;;  pred:       72 [never]  count:0 (precise)
;;              73 [never]  count:0 (precise) (FALLTHRU)
(code_label 417 416 418 74 1395 (nil) [1 uses])
(note 418 417 419 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 633 74 (set (reg:DI 267)
        (reg:DI 262)) 74 {*movdi_internal}
     (nil))
;;  succ:       78 [always]  count:0 (precise) (FALLTHRU)

;; basic block 75, loop depth 0, count 27390693 (estimated locally), maybe hot
;;  prev block 74, next block 76, flags: (RTL)
;;  pred:       43 [11.0% (guessed)]  count:27390693 (estimated locally)
(code_label 633 419 632 75 1418 (nil) [1 uses])
(note 632 633 15 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 15 632 423 75 (set (reg/v/f:DI 94 [ __cur ])
        (reg/v/f:DI 135 [ __first ])) "/usr/include/c++/11/bits/stl_uninitialized.h":88:21 74 {*movdi_internal}
     (nil))
;;  succ:       76 [always]  count:27390693 (estimated locally) (FALLTHRU)

;; basic block 76, loop depth 0, count 65735970 (estimated locally), maybe hot
;;  prev block 75, next block 77, flags: (RTL)
;;  pred:       75 [always]  count:27390693 (estimated locally) (FALLTHRU)
;;              68 [11.0% (guessed)]  count:38345279 (estimated locally) (FALLTHRU)
(code_label 423 15 424 76 1381 (nil) [0 uses])
(note 424 423 425 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 425 424 426 76 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 96 [0x60])) [121 MEM[(struct vector *)_12 + 88B].D.255078._M_impl.D.254423._M_finish+0 S8 A64])
        (reg/v/f:DI 94 [ __cur ])) "/usr/include/c++/11/bits/stl_vector.h":557:26 74 {*movdi_internal}
     (nil))
(insn 426 425 427 76 (set (reg:SI 269)
        (mem:SI (plus:DI (reg/v/f:DI 207 [ x ])
                (const_int 48 [0x30])) [35 MEM[(const struct ChineseCheckers &)x_3(D)].who_is_to_play_+0 S4 A64])) "src/../include/ChineseCheckers.hpp":35:7 75 {*movsi_internal}
     (nil))
(insn 427 426 428 76 (set (mem:SI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 112 [0x70])) [35 MEM[(struct ChineseCheckers *)_12 + 64B].who_is_to_play_+0 S4 A64])
        (reg:SI 269)) "src/../include/ChineseCheckers.hpp":35:7 75 {*movsi_internal}
     (nil))
(insn 428 427 429 76 (set (mem:SI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 128 [0x80])) [112 MEM[(struct _Rb_tree_header *)_12 + 128B]._M_header._M_color+0 S4 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":175:26 75 {*movsi_internal}
     (nil))
(insn 429 428 430 76 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 136 [0x88])) [110 MEM[(struct _Rb_tree_header *)_12 + 128B]._M_header._M_parent+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":208:27 74 {*movdi_internal}
     (nil))
(insn 430 429 431 76 (parallel [
            (set (reg/f:DI 171 [ _186 ])
                (plus:DI (reg/f:DI 206 [ <retval> ])
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_tree.h":209:27 210 {*adddi_1}
     (nil))
(insn 431 430 432 76 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 144 [0x90])) [110 MEM[(struct _Rb_tree_header *)_12 + 128B]._M_header._M_left+0 S8 A64])
        (reg/f:DI 171 [ _186 ])) "/usr/include/c++/11/bits/stl_tree.h":209:25 74 {*movdi_internal}
     (nil))
(insn 432 431 433 76 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 152 [0x98])) [110 MEM[(struct _Rb_tree_header *)_12 + 128B]._M_header._M_right+0 S8 A64])
        (reg/f:DI 171 [ _186 ])) "/usr/include/c++/11/bits/stl_tree.h":210:26 74 {*movdi_internal}
     (nil))
(insn 433 432 434 76 (set (mem:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 160 [0xa0])) [7 MEM[(struct _Rb_tree_header *)_12 + 128B]._M_node_count+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":211:21 74 {*movdi_internal}
     (nil))
(insn 434 433 435 76 (set (reg/f:DI 172 [ _187 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                (const_int 72 [0x48])) [110 MEM[(const struct _Rb_tree *)x_3(D) + 56B]._M_impl.D.255745._M_header._M_parent+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":715:40 74 {*movdi_internal}
     (nil))
(insn 435 434 436 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 172 [ _187 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":938:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 436 435 696 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 479)
            (pc))) "/usr/include/c++/11/bits/stl_tree.h":938:2 806 {*jcc}
     (int_list:REG_BR_PROB 574129756 (nil))
 -> 479)
;;  succ:       86 [53.5% (guessed)]  count:35149023 (estimated locally)
;;              92 [46.5% (guessed)]  count:30586947 (estimated locally) (FALLTHRU)

;; basic block 77, loop depth 0, count 0 (precise), probably never executed
;;  prev block 76, next block 78, flags: (RTL)
;;  pred:       48 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 696 436 699 77 1431 (nil) [1 uses])
(note 699 696 697 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 697 699 440 77 (set (reg:DI 267)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
;;  succ:       78 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 78, loop depth 0, count 0 (precise), probably never executed
;;  prev block 77, next block 79, flags: (RTL)
;;  pred:       77 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              74 [always]  count:0 (precise) (FALLTHRU)
(code_label 440 697 441 78 1396 (nil) [0 uses])
(note 441 440 442 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 78 (set (reg/f:DI 141 [ _122 ])
        (reg:DI 267)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
(insn 443 442 444 78 (set (reg:DI 5 di)
        (reg/f:DI 141 [ _122 ])) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
(call_insn 444 443 453 78 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f1a3f69a400 __cxa_begin_catch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       80 [always]  count:0 (precise) (FALLTHRU)

;; basic block 79, loop depth 1, count 0 (precise), probably never executed
;;  prev block 78, next block 80, flags: (RTL)
;;  pred:       80 [never]  count:0 (precise)
(code_label 453 444 447 79 1400 (nil) [1 uses])
(note 447 453 448 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 448 447 449 79 (set (reg:DI 5 di)
        (reg/v/f:DI 135 [ __first ])) "/usr/include/c++/11/bits/stl_construct.h":88:18 74 {*movdi_internal}
     (nil))
(call_insn 449 448 450 79 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIS_IiSaIiEESaIS1_EED1Ev") [flags 0x1]  <function_decl 0x7f1a36d8b900 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_construct.h":88:18 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIS_IiSaIiEESaIS1_EED1Ev") [flags 0x1]  <function_decl 0x7f1a36d8b900 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 450 449 451 79 (parallel [
            (set (reg/v/f:DI 135 [ __first ])
                (plus:DI (reg/v/f:DI 135 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
;;  succ:       80 [never]  count:0 (precise) (FALLTHRU,DFS_BACK)

;; basic block 80, loop depth 1, count 0 (precise), probably never executed
;;  prev block 79, next block 81, flags: (RTL)
;;  pred:       78 [always]  count:0 (precise) (FALLTHRU)
;;              79 [never]  count:0 (precise) (FALLTHRU,DFS_BACK)
(code_label 451 450 452 80 1399 (nil) [0 uses])
(note 452 451 454 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 454 452 455 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ __cur ])
            (reg/v/f:DI 135 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 455 454 456 80 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 453)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 453)
;;  succ:       79 [never]  count:0 (precise)
;;              81 [never]  count:0 (precise) (FALLTHRU)

;; basic block 81, loop depth 0, count 0 (precise), probably never executed
;;  prev block 80, next block 82, flags: (RTL)
;;  pred:       80 [never]  count:0 (precise) (FALLTHRU)
(note 456 455 457 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(call_insn 457 456 692 81 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_uninitialized.h":98:8 813 {*call}
     (expr_list:REG_EH_REGION (const_int 10 [0xa])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f1a3afff900 __cxa_rethrow>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       82 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 82, loop depth 0, count 0 (precise), probably never executed
;;  prev block 81, next block 83, flags: (RTL)
;;  pred:       81 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 692 457 695 82 1430 (nil) [1 uses])
(note 695 692 693 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 693 695 459 82 (set (reg:DI 271)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 74 {*movdi_internal}
     (nil))
;;  succ:       83 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 83, loop depth 0, count 0 (precise), probably never executed
;;  prev block 82, next block 84, flags: (RTL)
;;  pred:       82 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 459 693 460 83 1401 (nil) [0 uses])
(note 460 459 461 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(call_insn 461 460 462 83 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_uninitialized.h":95:4 813 {*call}
     (expr_list:REG_EH_REGION (const_int -11 [0xfffffffffffffff5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f1a3f677800 __cxa_end_catch>)
            (nil)))
    (nil))
(insn 462 461 464 83 (set (reg:DI 270)
        (reg:DI 271)) 74 {*movdi_internal}
     (nil))
(insn 464 462 465 83 (set (reg/f:DI 131 [ _101 ])
        (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 88 [0x58])) [121 MEM[(struct _Vector_base *)_12 + 88B]._M_impl.D.254423._M_start+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
(insn 465 464 466 83 (set (reg/f:DI 274)
        (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 104 [0x68])) [121 MEM[(struct _Vector_base *)_12 + 88B]._M_impl.D.254423._M_end_of_storage+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 466 465 467 83 (parallel [
            (set (reg:DI 132 [ _102 ])
                (minus:DI (reg/f:DI 274)
                    (reg/f:DI 131 [ _101 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                    (const_int 104 [0x68])) [121 MEM[(struct _Vector_base *)_12 + 88B]._M_impl.D.254423._M_end_of_storage+0 S8 A64])
            (reg/f:DI 131 [ _101 ]))
        (nil)))
(insn 467 466 468 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 131 [ _101 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 468 467 469 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 473)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 473)
;;  succ:       84 [never]  count:0 (precise) (FALLTHRU)
;;              85 [never]  count:0 (precise)

;; basic block 84, loop depth 0, count 0 (precise), probably never executed
;;  prev block 83, next block 85, flags: (RTL)
;;  pred:       83 [never]  count:0 (precise) (FALLTHRU)
(note 469 468 470 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 470 469 471 84 (set (reg:DI 4 si)
        (reg:DI 132 [ _102 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 471 470 472 84 (set (reg:DI 5 di)
        (reg/f:DI 131 [ _101 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 472 471 473 84 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       85 [never]  count:0 (precise) (FALLTHRU)

;; basic block 85, loop depth 0, count 0 (precise), probably never executed
;;  prev block 84, next block 86, flags: (RTL)
;;  pred:       83 [never]  count:0 (precise)
;;              84 [never]  count:0 (precise) (FALLTHRU)
(code_label 473 472 474 85 1402 (nil) [1 uses])
(note 474 473 475 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 479 85 (set (reg:DI 275)
        (reg:DI 270)) 74 {*movdi_internal}
     (nil))
;;  succ:       110 [always]  count:0 (precise) (FALLTHRU)

;; basic block 86, loop depth 0, count 35149023 (estimated locally), maybe hot
;;  prev block 85, next block 87, flags: (RTL)
;;  pred:       76 [53.5% (guessed)]  count:35149023 (estimated locally)
(code_label 479 475 480 86 1397 (nil) [1 uses])
(note 480 479 481 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 481 480 482 86 (set (reg:DI 4 si)
        (reg/f:DI 171 [ _186 ])) "/usr/include/c++/11/bits/stl_tree.h":890:26 74 {*movdi_internal}
     (nil))
(insn 482 481 483 86 (set (reg:DI 5 di)
        (reg/f:DI 172 [ _187 ])) "/usr/include/c++/11/bits/stl_tree.h":890:26 74 {*movdi_internal}
     (nil))
(call_insn 483 482 657 86 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ea00 _M_copy.isra>) [0 _M_copy.isra S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":890:26 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ea00 _M_copy.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       107 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              87 [always (adjusted)]  count:35149023 (estimated locally) (FALLTHRU)

;; basic block 87, loop depth 0, count 35149023 (estimated locally), maybe hot
;;  prev block 86, next block 88, flags: (RTL)
;;  pred:       86 [always (adjusted)]  count:35149023 (estimated locally) (FALLTHRU)
(note 657 483 484 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 484 657 16 87 (set (reg/f:DI 174 [ _192 ])
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_tree.h":890:26 74 {*movdi_internal}
     (nil))
(insn 16 484 488 87 (set (reg/v/f:DI 175 [ __x ])
        (reg/f:DI 174 [ _192 ])) "/usr/include/c++/11/bits/stl_tree.h":890:26 74 {*movdi_internal}
     (nil))
;;  succ:       88 [always]  count:35149023 (estimated locally) (FALLTHRU)

;; basic block 88, loop depth 1, count 319536582 (estimated locally), maybe hot
;;  prev block 87, next block 89, flags: (RTL)
;;  pred:       87 [always]  count:35149023 (estimated locally) (FALLTHRU)
;;              88 [89.0% (guessed)]  count:284387558 (estimated locally) (DFS_BACK)
(code_label 488 16 485 88 1404 (nil) [1 uses])
(note 485 488 486 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 487 88 (set (reg/v/f:DI 205 [ __x ])
        (reg/v/f:DI 175 [ __x ])) 74 {*movdi_internal}
     (nil))
(insn 487 486 489 88 (set (reg/v/f:DI 175 [ __x ])
        (mem/f:DI (plus:DI (reg/v/f:DI 175 [ __x ])
                (const_int 16 [0x10])) [110 __x_193->_M_left+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":114:19 74 {*movdi_internal}
     (nil))
(insn 489 487 490 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 175 [ __x ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":114:27 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 490 489 491 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 488)
            (pc))) "/usr/include/c++/11/bits/stl_tree.h":114:27 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 488)
;;  succ:       88 [89.0% (guessed)]  count:284387558 (estimated locally) (DFS_BACK)
;;              89 [11.0% (guessed)]  count:35149024 (estimated locally) (FALLTHRU)

;; basic block 89, loop depth 0, count 35149023 (estimated locally), maybe hot
;;  prev block 88, next block 90, flags: (RTL)
;;  pred:       88 [11.0% (guessed)]  count:35149024 (estimated locally) (FALLTHRU)
(note 491 490 492 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 17 89 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 144 [0x90])) [110 MEM[(struct _Rb_tree_node_base * &)_12 + 144]+0 S8 A64])
        (reg/v/f:DI 205 [ __x ])) "/usr/include/c++/11/bits/stl_tree.h":891:18 74 {*movdi_internal}
     (nil))
(insn 17 492 496 89 (set (reg/v/f:DI 176 [ __x ])
        (reg/f:DI 174 [ _192 ])) "/usr/include/c++/11/bits/stl_tree.h":891:18 74 {*movdi_internal}
     (nil))
;;  succ:       90 [always]  count:35149023 (estimated locally) (FALLTHRU)

;; basic block 90, loop depth 1, count 319536582 (estimated locally), maybe hot
;;  prev block 89, next block 91, flags: (RTL)
;;  pred:       89 [always]  count:35149023 (estimated locally) (FALLTHRU)
;;              90 [89.0% (guessed)]  count:284387558 (estimated locally) (DFS_BACK)
(code_label 496 17 493 90 1405 (nil) [1 uses])
(note 493 496 494 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 494 493 495 90 (set (reg/v/f:DI 82 [ __x ])
        (reg/v/f:DI 176 [ __x ])) 74 {*movdi_internal}
     (nil))
(insn 495 494 497 90 (set (reg/v/f:DI 176 [ __x ])
        (mem/f:DI (plus:DI (reg/v/f:DI 176 [ __x ])
                (const_int 24 [0x18])) [110 __x_196->_M_right+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":128:19 74 {*movdi_internal}
     (nil))
(insn 497 495 498 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 176 [ __x ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_tree.h":128:28 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 498 497 499 90 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 496)
            (pc))) "/usr/include/c++/11/bits/stl_tree.h":128:28 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 496)
;;  succ:       90 [89.0% (guessed)]  count:284387558 (estimated locally) (DFS_BACK)
;;              91 [11.0% (guessed)]  count:35149024 (estimated locally) (FALLTHRU)

;; basic block 91, loop depth 0, count 35149023 (estimated locally), maybe hot
;;  prev block 90, next block 92, flags: (RTL)
;;  pred:       90 [11.0% (guessed)]  count:35149024 (estimated locally) (FALLTHRU)
(note 499 498 500 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 91 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 152 [0x98])) [110 MEM[(struct _Rb_tree_node_base * &)_12 + 152]+0 S8 A64])
        (reg/v/f:DI 82 [ __x ])) "/usr/include/c++/11/bits/stl_tree.h":892:19 74 {*movdi_internal}
     (nil))
(insn 501 500 502 91 (set (reg:DI 177 [ _199 ])
        (mem:DI (plus:DI (reg/v/f:DI 207 [ x ])
                (const_int 96 [0x60])) [7 MEM[(const struct _Rb_tree &)x_3(D) + 56]._M_impl.D.255745._M_node_count+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":893:40 74 {*movdi_internal}
     (nil))
(insn 502 501 503 91 (set (mem:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 160 [0xa0])) [7 MEM[(struct _Rb_tree *)_12 + 120B]._M_impl.D.255745._M_node_count+0 S8 A64])
        (reg:DI 177 [ _199 ])) "/usr/include/c++/11/bits/stl_tree.h":893:26 74 {*movdi_internal}
     (nil))
(insn 503 502 504 91 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 136 [0x88])) [110 MEM[(struct _Rb_tree_node_base * &)_12 + 136]+0 S8 A64])
        (reg/f:DI 174 [ _192 ])) "/usr/include/c++/11/bits/stl_tree.h":939:14 74 {*movdi_internal}
     (nil))
;;  succ:       92 [always]  count:35149023 (estimated locally) (FALLTHRU)

;; basic block 92, loop depth 0, count 65735970 (estimated locally), maybe hot
;;  prev block 91, next block 93, flags: (RTL)
;;  pred:       91 [always]  count:35149023 (estimated locally) (FALLTHRU)
;;              76 [46.5% (guessed)]  count:30586947 (estimated locally) (FALLTHRU)
(code_label 504 503 505 92 1398 (nil) [0 uses])
(note 505 504 506 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 92 (set (reg/f:DI 277)
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                (const_int 112 [0x70])) [140 MEM[(const struct vector *)x_3(D) + 104B].D.257921._M_impl.D.257266._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":919:50 74 {*movdi_internal}
     (nil))
(insn 507 506 508 92 (parallel [
            (set (reg:DI 180 [ _203 ])
                (minus:DI (reg/f:DI 277)
                    (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                            (const_int 104 [0x68])) [140 MEM[(const struct vector *)x_3(D) + 104B].D.257921._M_impl.D.257266._M_start+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":919:50 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                    (const_int 112 [0x70])) [140 MEM[(const struct vector *)x_3(D) + 104B].D.257921._M_impl.D.257266._M_finish+0 S8 A64])
            (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                    (const_int 104 [0x68])) [140 MEM[(const struct vector *)x_3(D) + 104B].D.257921._M_impl.D.257266._M_start+0 S8 A64]))
        (nil)))
(insn 508 507 509 92 (set (reg:V2DI 278)
        (const_vector:V2DI [
                (const_int 0 [0]) repeated x2
            ])) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 509 508 510 92 (set (mem:V2DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 168 [0xa8])) [140 MEM <vector(2) long unsigned int> [(struct pair * *)_12 + 168B]+0 S16 A64])
        (reg:V2DI 278)) "/usr/include/c++/11/bits/stl_vector.h":98:4 1439 {movv2di_internal}
     (nil))
(insn 510 509 511 92 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 184 [0xb8])) [140 MEM[(struct _Vector_impl_data *)_12 + 168B]._M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":98:29 74 {*movdi_internal}
     (nil))
(insn 511 510 512 92 (set (reg:DI 90 [ _15 ])
        (reg:DI 180 [ _203 ])) 74 {*movdi_internal}
     (nil))
(insn 512 511 513 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 180 [ _203 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":346:18 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 513 512 514 92 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 651)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":346:18 806 {*jcc}
     (int_list:REG_BR_PROB 486727172 (nil))
 -> 651)
;;  succ:       93 [54.7% (guessed)]  count:35937855 (estimated locally) (FALLTHRU)
;;              99 [45.3% (guessed)]  count:29798115 (estimated locally)

;; basic block 93, loop depth 0, count 35937856 (estimated locally), maybe hot
;;  prev block 92, next block 94, flags: (RTL)
;;  pred:       92 [54.7% (guessed)]  count:35937855 (estimated locally) (FALLTHRU)
(note 514 513 517 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 517 514 518 93 (set (reg:DI 279)
        (const_int 9223372036854775800 [0x7ffffffffffffff8])) "/usr/include/c++/11/ext/new_allocator.h":111:2 74 {*movdi_internal}
     (nil))
(insn 518 517 519 93 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 90 [ _15 ])
            (reg:DI 279))) "/usr/include/c++/11/ext/new_allocator.h":111:2 12 {*cmpdi_1}
     (nil))
(jump_insn 519 518 520 93 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 532)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":111:2 806 {*jcc}
     (int_list:REG_BR_PROB 966367644 (nil))
 -> 532)
;;  succ:       94 [10.0% (guessed)]  count:3593786 (estimated locally) (FALLTHRU)
;;              97 [90.0% (guessed)]  count:32344070 (estimated locally)

;; basic block 94, loop depth 0, count 3593787 (estimated locally), maybe hot
;;  prev block 93, next block 95, flags: (RTL)
;;  pred:       93 [10.0% (guessed)]  count:3593786 (estimated locally) (FALLTHRU)
(note 520 519 523 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 523 520 524 94 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 180 [ _203 ])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":115:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 524 523 525 94 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 528)
            (pc))) "/usr/include/c++/11/ext/new_allocator.h":115:6 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 528)
;;  succ:       95 [50.0% (guessed)]  count:1796894 (estimated locally) (FALLTHRU)
;;              96 [50.0% (guessed)]  count:1796894 (estimated locally)

;; basic block 95, loop depth 0, count 1796892 (estimated locally), maybe hot
;;  prev block 94, next block 96, flags: (RTL)
;;  pred:       94 [50.0% (guessed)]  count:1796894 (estimated locally) (FALLTHRU)
(note 525 524 526 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(call_insn 526 525 528 95 (call (mem:QI (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>) [0 __throw_bad_array_new_length S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":116:41 813 {*call}
     (expr_list:REG_EH_REGION (const_int 5 [0x5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt28__throw_bad_array_new_lengthv") [flags 0x41]  <function_decl 0x7f1a40e40c00 __throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       105 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 96, loop depth 0, count 1796892 (estimated locally), maybe hot
;;  prev block 95, next block 97, flags: (RTL)
;;  pred:       94 [50.0% (guessed)]  count:1796894 (estimated locally)
(code_label 528 526 529 96 1408 (nil) [1 uses])
(note 529 528 530 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(call_insn 530 529 532 96 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":117:28 813 {*call}
     (expr_list:REG_EH_REGION (const_int 5 [0x5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f1a40e40b00 __throw_bad_alloc>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       105 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 97, loop depth 0, count 32344069 (estimated locally), maybe hot
;;  prev block 96, next block 98, flags: (RTL)
;;  pred:       93 [90.0% (guessed)]  count:32344070 (estimated locally)
(code_label 532 530 533 97 1407 (nil) [1 uses])
(note 533 532 534 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 534 533 535 97 (set (reg:DI 5 di)
        (reg:DI 90 [ _15 ])) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
(call_insn 535 534 658 97 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ext/new_allocator.h":127:41 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 5 [0x5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f1a51926800 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       105 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              98 [always (adjusted)]  count:32344069 (estimated locally) (FALLTHRU)

;; basic block 98, loop depth 0, count 32344069 (estimated locally), maybe hot
;;  prev block 97, next block 99, flags: (RTL)
;;  pred:       97 [always (adjusted)]  count:32344069 (estimated locally) (FALLTHRU)
(note 658 535 536 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 536 658 537 98 (set (reg/f:DI 280)
        (reg:DI 0 ax)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 280)
        (nil)))
(insn 537 536 651 98 (set (reg/v/f:DI 98 [ __cur ])
        (reg/f:DI 280)) "/usr/include/c++/11/ext/new_allocator.h":127:41 74 {*movdi_internal}
     (nil))
;;  succ:       100 [always]  count:32344069 (estimated locally) (FALLTHRU)

;; basic block 99, loop depth 0, count 29798115 (estimated locally), maybe hot
;;  prev block 98, next block 100, flags: (RTL)
;;  pred:       92 [45.3% (guessed)]  count:29798115 (estimated locally)
(code_label 651 537 650 99 1422 (nil) [1 uses])
(note 650 651 18 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 18 650 538 99 (set (reg/v/f:DI 98 [ __cur ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_vector.h":346:18 74 {*movdi_internal}
     (nil))
;;  succ:       100 [always]  count:29798115 (estimated locally) (FALLTHRU)

;; basic block 100, loop depth 0, count 62142186 (estimated locally), maybe hot
;;  prev block 99, next block 101, flags: (RTL)
;;  pred:       99 [always]  count:29798115 (estimated locally) (FALLTHRU)
;;              98 [always]  count:32344069 (estimated locally) (FALLTHRU)
(code_label 538 18 539 100 1406 (nil) [0 uses])
(note 539 538 540 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 540 539 541 100 (set (reg:DI 134 [ _106 ])
        (reg/v/f:DI 98 [ __cur ])) 74 {*movdi_internal}
     (nil))
(insn 541 540 542 100 (set (reg:V2DI 281)
        (vec_duplicate:V2DI (reg:DI 134 [ _106 ]))) "/usr/include/c++/11/bits/stl_vector.h":361:25 5014 {*vec_dupv2di}
     (nil))
(insn 542 541 543 100 (set (mem:V2DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 168 [0xa8])) [140 MEM <vector(2) long unsigned int> [(struct pair * *)_12 + 168B]+0 S16 A64])
        (reg:V2DI 281)) "/usr/include/c++/11/bits/stl_vector.h":361:25 1439 {movv2di_internal}
     (nil))
(insn 543 542 544 100 (parallel [
            (set (reg:DI 282)
                (plus:DI (reg/v/f:DI 98 [ __cur ])
                    (reg:DI 90 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":363:59 210 {*adddi_1}
     (nil))
(insn 544 543 545 100 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 184 [0xb8])) [140 MEM[(struct _Vector_base *)_12 + 168B]._M_impl.D.257266._M_end_of_storage+0 S8 A64])
        (reg:DI 282)) "/usr/include/c++/11/bits/stl_vector.h":363:59 74 {*movdi_internal}
     (nil))
(insn 545 544 546 100 (set (reg/f:DI 181 [ _207 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                (const_int 112 [0x70])) [140 MEM[(const struct pair * const &)x_3(D) + 112]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 546 545 547 100 (set (reg/f:DI 182 [ _208 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ x ])
                (const_int 104 [0x68])) [140 MEM[(const struct pair * const &)x_3(D) + 104]+0 S8 A64])) "/usr/include/c++/11/bits/stl_iterator.h":1011:9 74 {*movdi_internal}
     (nil))
(insn 547 546 548 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 181 [ _207 ])
            (reg/f:DI 182 [ _208 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 548 547 549 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 560)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 560)
;;  succ:       101 [89.0% (guessed)]  count:55306546 (estimated locally) (FALLTHRU)
;;              104 [11.0% (guessed)]  count:6835640 (estimated locally)

;; basic block 101, loop depth 0, count 55306546 (estimated locally), maybe hot
;;  prev block 100, next block 102, flags: (RTL)
;;  pred:       100 [89.0% (guessed)]  count:55306546 (estimated locally) (FALLTHRU)
(note 549 548 550 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 550 549 19 101 (parallel [
            (set (reg:DI 203 [ _389 ])
                (minus:DI (reg/f:DI 181 [ _207 ])
                    (reg/f:DI 182 [ _208 ])))
            (clobber (reg:CC 17 flags))
        ]) 283 {*subdi_1}
     (nil))
(insn 19 550 555 101 (set (reg:DI 198 [ ivtmp.2609 ])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 74 {*movdi_internal}
     (nil))
;;  succ:       102 [always]  count:55306546 (estimated locally) (FALLTHRU)

;; basic block 102, loop depth 1, count 502786780 (estimated locally), maybe hot
;;  prev block 101, next block 103, flags: (RTL)
;;  pred:       102 [89.0% (guessed)]  count:447480234 (estimated locally) (DFS_BACK)
;;              101 [always]  count:55306546 (estimated locally) (FALLTHRU)
(code_label 555 19 551 102 1410 (nil) [1 uses])
(note 551 555 552 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 102 (set (reg:DI 283)
        (mem:DI (plus:DI (reg/f:DI 182 [ _208 ])
                (reg:DI 198 [ ivtmp.2609 ])) [211 MEM[(const struct pair *)_208 + ivtmp.2609_340 * 1]+0 S8 A32])) 74 {*movdi_internal}
     (nil))
(insn 553 552 554 102 (set (mem:DI (plus:DI (reg/v/f:DI 98 [ __cur ])
                (reg:DI 198 [ ivtmp.2609 ])) [211 MEM[(struct pair *)iftmp.102_216 + ivtmp.2609_340 * 1]+0 S8 A32])
        (reg:DI 283)) 74 {*movdi_internal}
     (nil))
(insn 554 553 556 102 (parallel [
            (set (reg:DI 198 [ ivtmp.2609 ])
                (plus:DI (reg:DI 198 [ ivtmp.2609 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 210 {*adddi_1}
     (nil))
(insn 556 554 557 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 198 [ ivtmp.2609 ])
            (reg:DI 203 [ _389 ]))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 12 {*cmpdi_1}
     (nil))
(jump_insn 557 556 558 102 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 555)
            (pc))) "/usr/include/c++/11/bits/stl_uninitialized.h":91:23 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 555)
;;  succ:       102 [89.0% (guessed)]  count:447480234 (estimated locally) (DFS_BACK)
;;              103 [11.0% (guessed)]  count:55306546 (estimated locally) (FALLTHRU)

;; basic block 103, loop depth 0, count 55306546 (estimated locally), maybe hot
;;  prev block 102, next block 104, flags: (RTL)
;;  pred:       102 [11.0% (guessed)]  count:55306546 (estimated locally) (FALLTHRU)
(note 558 557 559 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 559 558 560 103 (parallel [
            (set (reg/v/f:DI 98 [ __cur ])
                (plus:DI (reg/v/f:DI 98 [ __cur ])
                    (reg:DI 203 [ _389 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_uninitialized.h":91:45 210 {*adddi_1}
     (nil))
;;  succ:       104 [always]  count:55306546 (estimated locally) (FALLTHRU)

;; basic block 104, loop depth 0, count 62142186 (estimated locally), maybe hot
;;  prev block 103, next block 105, flags: (RTL)
;;  pred:       103 [always]  count:55306546 (estimated locally) (FALLTHRU)
;;              100 [11.0% (guessed)]  count:6835640 (estimated locally)
(code_label 560 559 561 104 1409 (nil) [1 uses])
(note 561 560 562 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 563 104 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 176 [0xb0])) [140 MEM[(struct vector *)_12 + 168B].D.257921._M_impl.D.257266._M_finish+0 S8 A64])
        (reg/v/f:DI 98 [ __cur ])) "/usr/include/c++/11/bits/stl_vector.h":557:26 74 {*movdi_internal}
     (nil))
(insn 563 562 564 104 (set (reg:DI 4 si)
        (reg/f:DI 206 [ <retval> ])) "/usr/include/boost/python/object/make_instance.hpp":46:84 74 {*movdi_internal}
     (nil))
(insn 564 563 565 104 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _13 ])) "/usr/include/boost/python/object/make_instance.hpp":46:84 74 {*movdi_internal}
     (nil))
(call_insn 565 564 566 104 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python15instance_holder7installEP7_object") [flags 0x41]  <function_decl 0x7f1a3ab70300 install>) [0 install S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/make_instance.hpp":46:84 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python15instance_holder7installEP7_object") [flags 0x41]  <function_decl 0x7f1a3ab70300 install>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 566 565 681 104 (set (mem:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 16 [0x10])) [7 MEM[(struct PyVarObject *)_12].ob_size+0 S8 A64])
        (const_int 48 [0x30])) "/usr/include/python3.10/object.h":164:17 74 {*movdi_internal}
     (nil))
;;  succ:       117 [always]  count:62142186 (estimated locally) (FALLTHRU)

;; basic block 105, loop depth 0, count 0 (precise), probably never executed
;;  prev block 104, next block 106, flags: (RTL)
;;  pred:       95 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              96 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              97 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 681 566 684 105 1427 (nil) [1 uses])
(note 684 681 682 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 682 684 569 105 (set (reg:DI 286)
        (reg:DI 0 ax)) "/usr/include/c++/11/bits/stl_tree.h":984:17 74 {*movdi_internal}
     (nil))
;;  succ:       106 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 106, loop depth 0, count 0 (precise), probably never executed
;;  prev block 105, next block 107, flags: (RTL)
;;  pred:       105 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 569 682 570 106 1411 (nil) [0 uses])
(note 570 569 571 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 571 570 572 106 (set (reg:DI 284)
        (mem/f:DI (plus:DI (reg/f:DI 206 [ <retval> ])
                (const_int 136 [0x88])) [110 MEM[(const struct _Rb_tree *)_12 + 120B]._M_impl.D.255745._M_header._M_parent+0 S8 A64])) "/usr/include/c++/11/bits/stl_tree.h":984:17 74 {*movdi_internal}
     (nil))
(insn 572 571 573 106 (set (reg:DI 5 di)
        (reg:DI 284)) "/usr/include/c++/11/bits/stl_tree.h":984:17 74 {*movdi_internal}
     (nil))
(call_insn 573 572 574 106 (call (mem:QI (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ed00 _M_erase.isra>) [0 _M_erase.isra S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/stl_tree.h":984:17 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8_Rb_treeISt6vectorIS0_I5ColorSaIS1_EESaIS3_EESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E.isra.0") [flags 0x3]  <function_decl 0x7f1a3405ed00 _M_erase.isra>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 574 573 675 106 (set (reg:DI 285)
        (reg:DI 286)) 74 {*movdi_internal}
     (nil))
;;  succ:       108 [always]  count:0 (precise) (FALLTHRU)

;; basic block 107, loop depth 0, count 0 (precise), probably never executed
;;  prev block 106, next block 108, flags: (RTL)
;;  pred:       86 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 675 574 680 107 1426 (nil) [1 uses])
(note 680 675 676 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 676 680 576 107 (set (reg:DI 285)
        (reg:DI 0 ax)) "src/../include/ChineseCheckers.hpp":35:7 74 {*movdi_internal}
     (nil))
;;  succ:       108 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 108, loop depth 0, count 0 (precise), probably never executed
;;  prev block 107, next block 109, flags: (RTL)
;;  pred:       107 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              106 [always]  count:0 (precise) (FALLTHRU)
(code_label 576 676 577 108 1412 (nil) [0 uses])
(note 577 576 578 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 578 577 579 108 (set (reg:DI 5 di)
        (reg/f:DI 108 [ vectp.2581 ])) "src/../include/ChineseCheckers.hpp":35:7 74 {*movdi_internal}
     (nil))
(call_insn 579 578 580 108 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EED1Ev") [flags 0x1]  <function_decl 0x7f1a371b4700 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "src/../include/ChineseCheckers.hpp":35:7 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EED1Ev") [flags 0x1]  <function_decl 0x7f1a371b4700 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 580 579 669 108 (set (reg:DI 275)
        (reg:DI 285)) 74 {*movdi_internal}
     (nil))
;;  succ:       110 [always]  count:0 (precise) (FALLTHRU)

;; basic block 109, loop depth 0, count 0 (precise), probably never executed
;;  prev block 108, next block 110, flags: (RTL)
;;  pred:       39 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              40 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 669 580 674 109 1425 (nil) [1 uses])
(note 674 669 670 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 670 674 582 109 (set (reg:DI 275)
        (reg:DI 0 ax)) "src/../include/ChineseCheckers.hpp":35:7 74 {*movdi_internal}
     (nil))
;;  succ:       110 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 110, loop depth 0, count 0 (precise), probably never executed
;;  prev block 109, next block 111, flags: (RTL)
;;  pred:       109 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
;;              85 [always]  count:0 (precise) (FALLTHRU)
;;              108 [always]  count:0 (precise) (FALLTHRU)
(code_label 582 670 583 110 1403 (nil) [0 uses])
(note 583 582 584 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 584 583 585 110 (set (reg:DI 5 di)
        (reg/f:DI 139 [ vectp.2573 ])) "src/../include/ChineseCheckers.hpp":35:7 74 {*movdi_internal}
     (nil))
(call_insn 585 584 586 110 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIS_I5ColorSaIS0_EESaIS2_EED1Ev") [flags 0x1]  <function_decl 0x7f1a37149300 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "src/../include/ChineseCheckers.hpp":35:7 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIS_I5ColorSaIS0_EESaIS2_EED1Ev") [flags 0x1]  <function_decl 0x7f1a37149300 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 586 585 663 110 (set (reg:DI 241)
        (reg:DI 275)) 74 {*movdi_internal}
     (nil))
;;  succ:       112 [always]  count:0 (precise) (FALLTHRU)

;; basic block 111, loop depth 0, count 0 (precise), probably never executed
;;  prev block 110, next block 112, flags: (RTL)
;;  pred:       9 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 663 586 668 111 1424 (nil) [1 uses])
(note 668 663 664 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 664 668 588 111 (set (reg:DI 241)
        (reg:DI 0 ax)) "/usr/include/boost/python/object/value_holder.hpp":136:5 74 {*movdi_internal}
     (nil))
;;  succ:       112 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 112, loop depth 0, count 0 (precise), probably never executed
;;  prev block 111, next block 113, flags: (RTL)
;;  pred:       36 [always]  count:0 (precise) (FALLTHRU)
;;              110 [always]  count:0 (precise) (FALLTHRU)
;;              111 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 588 664 589 112 1378 (nil) [0 uses])
(note 589 588 590 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 590 589 591 112 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _13 ])) "/usr/include/boost/python/object/value_holder.hpp":136:5 74 {*movdi_internal}
     (nil))
(call_insn 591 590 592 112 (call (mem:QI (symbol_ref:DI ("_ZN5boost6python15instance_holderD2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70a00 __dt_base >) [0 __dt_base  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/value_holder.hpp":136:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python15instance_holderD2Ev") [flags 0x41]  <function_decl 0x7f1a3ab70a00 __dt_base >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 592 591 659 112 (set (reg:DI 289)
        (reg:DI 241)) 74 {*movdi_internal}
     (nil))
;;  succ:       114 [always]  count:0 (precise) (FALLTHRU)

;; basic block 113, loop depth 0, count 0 (precise), probably never executed
;;  prev block 112, next block 114, flags: (RTL)
;;  pred:       5 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 659 592 662 113 1423 (nil) [1 uses])
(note 662 659 660 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 660 662 600 113 (set (reg:DI 289)
        (reg:DI 0 ax)) "/usr/include/python3.10/object.h":492:9 74 {*movdi_internal}
     (nil))
;;  succ:       114 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 114, loop depth 0, count 0 (precise), probably never executed
;;  prev block 113, next block 115, flags: (RTL)
;;  pred:       112 [always]  count:0 (precise) (FALLTHRU)
;;              113 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 600 660 601 114 1413 (nil) [0 uses])
(note 601 600 602 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 114 (set (reg:DI 292)
        (mem:DI (reg/f:DI 206 [ <retval> ]) [7 _12->ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":492:9 74 {*movdi_internal}
     (nil))
(insn 603 602 604 114 (parallel [
            (set (reg:DI 188 [ _229 ])
                (plus:DI (reg:DI 292)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":492:9 210 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem:DI (reg/f:DI 206 [ <retval> ]) [7 _12->ob_refcnt+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 604 603 605 114 (set (mem:DI (reg/f:DI 206 [ <retval> ]) [7 _12->ob_refcnt+0 S8 A64])
        (reg:DI 188 [ _229 ])) "/usr/include/python3.10/object.h":492:25 74 {*movdi_internal}
     (nil))
(insn 605 604 606 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 188 [ _229 ])
            (const_int 0 [0]))) "/usr/include/python3.10/object.h":492:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 606 605 607 114 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 610)
            (pc))) "/usr/include/python3.10/object.h":492:5 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 610)
;;  succ:       116 [never]  count:0 (precise)
;;              115 [never]  count:0 (precise) (FALLTHRU)

;; basic block 115, loop depth 0, count 0 (precise), probably never executed
;;  prev block 114, next block 116, flags: (RTL)
;;  pred:       114 [never]  count:0 (precise) (FALLTHRU)
(note 607 606 608 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 608 607 609 115 (set (reg:DI 5 di)
        (reg/f:DI 206 [ <retval> ])) "/usr/include/python3.10/object.h":500:20 74 {*movdi_internal}
     (nil))
(call_insn 609 608 610 115 (call (mem:QI (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>) [0 _Py_Dealloc S1 A8])
        (const_int 0 [0])) "/usr/include/python3.10/object.h":500:20 813 {*call}
     (expr_list:REG_EH_REGION (const_int -19 [0xffffffffffffffed])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Py_Dealloc") [flags 0x41]  <function_decl 0x7f1a4036f700 _Py_Dealloc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       116 [never]  count:0 (precise) (FALLTHRU)

;; basic block 116, loop depth 0, count 0 (precise), probably never executed
;;  prev block 115, next block 117, flags: (RTL)
;;  pred:       115 [never]  count:0 (precise) (FALLTHRU)
;;              114 [never]  count:0 (precise)
(code_label 610 609 611 116 1414 (nil) [1 uses])
(note 611 610 612 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 612 611 613 116 (set (reg/f:DI 136 [ D.331594 ])
        (reg:DI 289)) 74 {*movdi_internal}
     (nil))
(insn 613 612 614 116 (set (reg:DI 5 di)
        (reg/f:DI 136 [ D.331594 ])) 74 {*movdi_internal}
     (nil))
(call_insn 614 613 616 116 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 117, loop depth 0, count 733993182 (estimated locally), maybe hot
;;  prev block 116, next block 1, flags: (RTL)
;;  pred:       104 [always]  count:62142186 (estimated locally) (FALLTHRU)
;;              3 [always]  count:322122543 (estimated locally) (FALLTHRU)
;;              4 [46.5% (guessed)]  count:349728451 (estimated locally)
(code_label 616 614 619 117 1360 (nil) [1 uses])
(note 619 616 617 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 617 619 618 117 (set (reg/i:DI 0 ax)
        (reg/f:DI 206 [ <retval> ])) "/usr/include/boost/python/converter/as_to_python_function.hpp":41:5 74 {*movdi_internal}
     (nil))
(insn 618 617 0 117 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/converter/as_to_python_function.hpp":41:5 -1
     (nil))
;;  succ:       EXIT [always]  count:733993182 (estimated locally) (FALLTHRU)


;; Function boost::python::objects::caller_py_function_impl<boost::python::detail::caller<bool (ChineseCheckers::*)(int, const std::vector<std::vector<int> >&), boost::python::default_call_policies, boost::mpl::vector4<bool, ChineseCheckers&, int, const std::vector<std::vector<int> >&> > >::operator() (_ZN5boost6python7objects23caller_py_function_implINS0_6detail6callerIM15ChineseCheckersFbiRKSt6vectorIS6_IiSaIiEESaIS8_EEENS0_21default_call_policiesENS_3mpl7vector4IbRS5_iSC_EEEEEclEP7_objectSN_, funcdef_no=13492, decl_uid=294205, cgraph_uid=5403, symbol_order=7130)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/f:DI 131 [ this ])
        (reg:DI 5 di [ this ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(insn 3 2 5 2 (set (reg/v/f:DI 132 [ args ])
        (reg:DI 4 si [ args ])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(note 5 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 7 2 (set (reg/f:DI 134)
        (const_int 40 [0x28])) "/usr/include/boost/python/object/py_function.hpp":36:15 74 {*movdi_internal}
     (nil))
(insn 7 6 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [43 D.331701+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (reg/f:DI 134) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/object/py_function.hpp":36:15 1159 {stack_protect_set_1_di}
     (nil))
(insn 11 7 12 2 (set (reg/f:DI 135)
        (mem/f:DI (plus:DI (reg/v/f:DI 132 [ args ])
                (const_int 8 [0x8])) [9 args_4(D)->ob_type+0 S8 A64])) "/usr/include/python3.10/object.h":729:11 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 137)
        (mem:DI (plus:DI (reg/f:DI 135)
                (const_int 168 [0xa8])) [7 _30->tp_flags+0 S8 A64])) "/usr/include/python3.10/object.h":731:20 74 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 136)
                (and:DI (reg:DI 137)
                    (const_int 67108864 [0x4000000])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":731:20 486 {*anddi_1}
     (expr_list:REG_EQUAL (and:DI (mem:DI (plus:DI (reg/f:DI 135)
                    (const_int 168 [0xa8])) [7 _30->tp_flags+0 S8 A64])
            (const_int 67108864 [0x4000000]))
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 136)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":48:12 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":48:12 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 26)
;;  succ:       4 [100.0% (guessed)]  count:1073312328 (estimated locally)
;;              3 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)

;; basic block 3, loop depth 0, count 429496 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [0.0% (guessed)]  count:429496 (estimated locally) (FALLTHRU)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 138)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 2 cx)
        (reg:DI 138)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f1a33b8d000 *.LC0>)
        (nil)))
(insn 19 18 20 3 (set (reg:SI 1 dx)
        (const_int 48 [0x30])) "/usr/include/boost/python/detail/caller.hpp":48:12 75 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 139)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 4 si)
        (reg:DI 139)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 140)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg:DI 140)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)
        (nil)))
(call_insn 24 23 26 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":48:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 4, loop depth 0, count 1073312329 (estimated locally), maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [100.0% (guessed)]  count:1073312328 (estimated locally)
(code_label 26 24 27 4 1466 (nil) [1 uses])
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg/f:DI 141)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:DI 142)
        (mem/f:DI (plus:DI (reg/v/f:DI 132 [ args ])
                (const_int 24 [0x18])) [31 MEM[(struct PyTupleObject *)args_4(D)].ob_item[0]+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 141) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 5 di)
        (reg:DI 142)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(call_insn 32 31 33 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>) [0 get_lvalue_from_python S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter22get_lvalue_from_pythonEP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235d00 get_lvalue_from_python>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 4 (set (reg/f:DI 130 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/arg_from_python.hpp":282:97 74 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 130 [ <retval> ])
            (const_int 0 [0]))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 35 34 36 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 221)
            (pc))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":34:9 806 {*jcc}
     (int_list:REG_BR_PROB 166107868 (nil))
 -> 221)
;;  succ:       34 [15.5% (guessed)]  count:166041421 (estimated locally)
;;              5 [84.5% (guessed)]  count:907270908 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 907270908 (estimated locally), maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [84.5% (guessed)]  count:907270908 (estimated locally) (FALLTHRU)
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg/f:DI 143)
        (mem/f:DI (plus:DI (reg/v/f:DI 132 [ args ])
                (const_int 8 [0x8])) [9 args_4(D)->ob_type+0 S8 A64])) "/usr/include/python3.10/object.h":729:11 74 {*movdi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:DI 145)
        (mem:DI (plus:DI (reg/f:DI 143)
                (const_int 168 [0xa8])) [7 _35->tp_flags+0 S8 A64])) "/usr/include/python3.10/object.h":731:20 74 {*movdi_internal}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:DI 144)
                (and:DI (reg:DI 145)
                    (const_int 67108864 [0x4000000])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":731:20 486 {*anddi_1}
     (expr_list:REG_EQUAL (and:DI (mem:DI (plus:DI (reg/f:DI 143)
                    (const_int 168 [0xa8])) [7 _35->tp_flags+0 S8 A64])
            (const_int 67108864 [0x4000000]))
        (nil)))
(insn 40 39 41 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 144)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":48:12 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":48:12 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 52)
;;  succ:       7 [100.0% (guessed)]  count:906908000 (estimated locally)
;;              6 [0.0% (guessed)]  count:362908 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 362908 (estimated locally)
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [0.0% (guessed)]  count:362908 (estimated locally) (FALLTHRU)
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg:DI 146)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f1a33460630 *.LC24>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:DI 2 cx)
        (reg:DI 146)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f1a33460630 *.LC24>)
        (nil)))
(insn 45 44 46 6 (set (reg:SI 1 dx)
        (const_int 48 [0x30])) "/usr/include/boost/python/detail/caller.hpp":48:12 75 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (set (reg:DI 147)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 47 46 48 6 (set (reg:DI 4 si)
        (reg:DI 147)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)
        (nil)))
(insn 48 47 49 6 (set (reg:DI 148)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 49 48 50 6 (set (reg:DI 5 di)
        (reg:DI 148)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)
        (nil)))
(call_insn 50 49 52 6 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":48:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 7, loop depth 0, count 906908000 (estimated locally), maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5 [100.0% (guessed)]  count:906908000 (estimated locally)
(code_label 52 50 53 7 1468 (nil) [1 uses])
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg/f:DI 99 [ _38 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 132 [ args ])
                (const_int 32 [0x20])) [31 MEM[(struct PyTupleObject *)args_4(D)].ob_item[1]+0 S8 A64])) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 55 54 56 7 (set (reg/f:DI 149)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKiE10convertersE")  <var_decl 0x7f1a35a59bd0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 74 {*movdi_internal}
     (nil))
(insn 56 55 57 7 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 149) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 74 {*movdi_internal}
     (nil))
(insn 57 56 58 7 (set (reg:DI 5 di)
        (reg/f:DI 99 [ _38 ])) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 74 {*movdi_internal}
     (nil))
(call_insn 58 57 59 7 (set (reg:TI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage1EP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235f00 rvalue_from_python_stage1>) [0 rvalue_from_python_stage1 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage1EP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235f00 rvalue_from_python_stage1>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 59 58 60 7 (set (reg:TI 128 [ D.331639 ])
        (reg:TI 0 ax)) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 73 {*movti_internal}
     (nil))
(insn 60 59 61 7 (set (mem/c:TI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [237 MEM[(struct rvalue_from_python_data *)&c1].D.315521.stage1+0 S16 A128])
        (reg:TI 128 [ D.331639 ])) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":122:5 73 {*movti_internal}
     (nil))
(insn 61 60 62 7 (clobber (reg:TI 128 [ D.331639 ])) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 -1
     (nil))
(insn 62 61 63 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -88 [0xffffffffffffffa8])) [31 MEM[(struct arg_rvalue_from_python *)&c1].m_source+0 S8 A64])
        (reg/f:DI 99 [ _38 ])) "/usr/include/boost/python/converter/arg_from_python.hpp":298:7 74 {*movdi_internal}
     (nil))
(insn 63 62 64 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -112 [0xffffffffffffff90])) [43 MEM[(const struct arg_rvalue_from_python *)&c1].m_data.D.315521.stage1.convertible+0 S8 A128])
            (const_int 0 [0]))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":37:9 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 64 63 97 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":37:9 806 {*jcc}
     (int_list:REG_BR_PROB 741418732 (nil))
 -> 68)
;;  succ:       8 [31.0% (guessed)]  count:280688027 (estimated locally) (FALLTHRU)
;;              9 [69.0% (guessed)]  count:626219973 (estimated locally)

;; basic block 8, loop depth 0, count 474425583 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [31.0% (guessed)]  count:280688027 (estimated locally) (FALLTHRU)
;;              11 [31.0% (guessed)]  count:193737556 (estimated locally)
(code_label 97 64 65 8 1472 (nil) [1 uses])
(note 65 97 8 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 8 65 68 8 (set (reg/f:DI 130 [ <retval> ])
        (const_int 0 [0])) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":37:9 74 {*movdi_internal}
     (nil))
;;  succ:       34 [always]  count:474425583 (estimated locally) (FALLTHRU)

;; basic block 9, loop depth 0, count 626219973 (estimated locally), maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7 [69.0% (guessed)]  count:626219973 (estimated locally)
(code_label 68 8 69 9 1469 (nil) [1 uses])
(note 69 68 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 9 (set (reg/f:DI 150)
        (mem/f:DI (plus:DI (reg/v/f:DI 132 [ args ])
                (const_int 8 [0x8])) [9 args_4(D)->ob_type+0 S8 A64])) "/usr/include/python3.10/object.h":729:11 74 {*movdi_internal}
     (nil))
(insn 71 70 72 9 (set (reg:DI 152)
        (mem:DI (plus:DI (reg/f:DI 150)
                (const_int 168 [0xa8])) [7 _40->tp_flags+0 S8 A64])) "/usr/include/python3.10/object.h":731:20 74 {*movdi_internal}
     (nil))
(insn 72 71 73 9 (parallel [
            (set (reg:DI 151)
                (and:DI (reg:DI 152)
                    (const_int 67108864 [0x4000000])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":731:20 486 {*anddi_1}
     (expr_list:REG_EQUAL (and:DI (mem:DI (plus:DI (reg/f:DI 150)
                    (const_int 168 [0xa8])) [7 _40->tp_flags+0 S8 A64])
            (const_int 67108864 [0x4000000]))
        (nil)))
(insn 73 72 74 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 151)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/caller.hpp":48:12 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 74 73 75 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) "/usr/include/boost/python/detail/caller.hpp":48:12 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 85)
;;  succ:       11 [100.0% (guessed)]  count:625969485 (estimated locally)
;;              10 [0.0% (guessed)]  count:250488 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 0, count 250488 (estimated locally)
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [0.0% (guessed)]  count:250488 (estimated locally) (FALLTHRU)
(note 75 74 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 10 (set (reg:DI 153)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f1a334606c0 *.LC25>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 77 76 78 10 (set (reg:DI 2 cx)
        (reg:DI 153)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f1a334606c0 *.LC25>)
        (nil)))
(insn 78 77 79 10 (set (reg:SI 1 dx)
        (const_int 48 [0x30])) "/usr/include/boost/python/detail/caller.hpp":48:12 75 {*movsi_internal}
     (nil))
(insn 79 78 80 10 (set (reg:DI 154)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 80 79 81 10 (set (reg:DI 4 si)
        (reg:DI 154)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f1a33b8d090 *.LC1>)
        (nil)))
(insn 81 80 82 10 (set (reg:DI 155)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 82 81 83 10 (set (reg:DI 5 di)
        (reg:DI 155)) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f1a33b8d120 *.LC2>)
        (nil)))
(call_insn 83 82 85 10 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/caller.hpp":48:12 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f1a40fdc600 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      

;; basic block 11, loop depth 0, count 625969485 (estimated locally), maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9 [100.0% (guessed)]  count:625969485 (estimated locally)
(code_label 85 83 86 11 1471 (nil) [1 uses])
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 11 (set (reg/f:DI 103 [ _43 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 132 [ args ])
                (const_int 40 [0x28])) [31 MEM[(struct PyTupleObject *)args_4(D)].ob_item[2]+0 S8 A64])) "/usr/include/boost/python/detail/caller.hpp":48:12 74 {*movdi_internal}
     (nil))
(insn 88 87 89 11 (set (reg/f:DI 156)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IiSaIiEESaIS6_EEE10convertersE")  <var_decl 0x7f1a34cc7a20 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 74 {*movdi_internal}
     (nil))
(insn 89 88 90 11 (set (reg:DI 4 si)
        (mem/f/c:DI (reg/f:DI 156) [42 converters+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 74 {*movdi_internal}
     (nil))
(insn 90 89 91 11 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _43 ])) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 74 {*movdi_internal}
     (nil))
(call_insn 91 90 92 11 (set (reg:TI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage1EP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235f00 rvalue_from_python_stage1>) [0 rvalue_from_python_stage1 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter25rvalue_from_python_stage1EP7_objectRKNS1_12registrationE") [flags 0x41]  <function_decl 0x7f1a3a235f00 rvalue_from_python_stage1>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 92 91 93 11 (set (reg:TI 129 [ D.331638 ])
        (reg:TI 0 ax)) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 73 {*movti_internal}
     (nil))
(insn 93 92 94 11 (set (mem/c:TI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [237 MEM[(struct rvalue_from_python_data *)&c2].D.316124.stage1+0 S16 A128])
        (reg:TI 129 [ D.331638 ])) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":122:5 73 {*movti_internal}
     (nil))
(insn 94 93 95 11 (clobber (reg:TI 129 [ D.331638 ])) "/usr/include/boost/python/converter/arg_from_python.hpp":297:50 -1
     (nil))
(insn 95 94 96 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [31 MEM[(struct arg_rvalue_from_python *)&c2].m_source+0 S8 A128])
        (reg/f:DI 103 [ _43 ])) "/usr/include/boost/python/converter/arg_from_python.hpp":298:7 74 {*movdi_internal}
     (nil))
(insn 96 95 98 11 (set (reg/f:DI 95 [ pretmp_34 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [43 MEM[(const struct arg_rvalue_from_python *)&c2].m_data.D.316124.stage1.convertible+0 S8 A128])) "/usr/include/boost/python/converter/arg_from_python.hpp":305:26 74 {*movdi_internal}
     (nil))
(insn 98 96 99 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ pretmp_34 ])
            (const_int 0 [0]))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":40:9 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 99 98 100 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "/usr/include/boost/preprocessor/iteration/detail/local.hpp":40:9 806 {*jcc}
     (int_list:REG_BR_PROB 332323100 (nil))
 -> 97)
;;  succ:       8 [31.0% (guessed)]  count:193737556 (estimated locally)
;;              12 [69.0% (guessed)]  count:432231929 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 432231928 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [69.0% (guessed)]  count:432231929 (estimated locally) (FALLTHRU)
(note 100 99 101 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 12 (set (reg/f:DI 89 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 131 [ this ])
                (const_int 8 [0x8])) [0 MEM <bool ChineseCheckers::<T285b9> (struct ChineseCheckers *, int, const struct vector &) *> [(struct  &)this_2(D) + 8]+0 S8 A64])) 74 {*movdi_internal}
     (nil))
(insn 102 101 103 12 (set (reg:DI 105 [ _46 ])
        (reg/f:DI 89 [ _27 ])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 103 102 104 12 (set (reg:DI 157)
        (mem:DI (plus:DI (reg/f:DI 131 [ this ])
                (const_int 16 [0x10])) [0 MEM <long int> [(struct  &)this_2(D) + 16]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 104 103 105 12 (parallel [
            (set (reg/f:DI 104 [ _45 ])
                (plus:DI (reg/f:DI 130 [ <retval> ])
                    (reg:DI 157)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:25 210 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 130 [ <retval> ])
            (mem:DI (plus:DI (reg/f:DI 131 [ this ])
                    (const_int 16 [0x10])) [0 MEM <long int> [(struct  &)this_2(D) + 16]+0 S8 A64]))
        (nil)))
(insn 105 104 106 12 (parallel [
            (set (reg:DI 158)
                (and:DI (reg:DI 105 [ _46 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/invoke.hpp":86:25 486 {*anddi_1}
     (nil))
(insn 106 105 107 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 158)
            (const_int 0 [0]))) "/usr/include/boost/python/detail/invoke.hpp":86:25 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 107 106 108 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) "/usr/include/boost/python/detail/invoke.hpp":86:25 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 111)
;;  succ:       13 [50.0% (guessed)]  count:216115964 (estimated locally) (FALLTHRU)
;;              14 [50.0% (guessed)]  count:216115964 (estimated locally)

;; basic block 13, loop depth 0, count 216115964 (estimated locally), maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [50.0% (guessed)]  count:216115964 (estimated locally) (FALLTHRU)
(note 108 107 109 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 13 (set (reg/f:DI 159)
        (mem/f:DI (reg/f:DI 104 [ _45 ]) [5 MEM[(int (*) () * *)_45]+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 110 109 111 13 (set (reg/f:DI 89 [ _27 ])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 159)
                    (reg:DI 105 [ _46 ]))
                (const_int -1 [0xffffffffffffffff])) [38 *_54+0 S8 A64])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
;;  succ:       14 [always]  count:216115964 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 432231928 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       12 [50.0% (guessed)]  count:216115964 (estimated locally)
;;              13 [always]  count:216115964 (estimated locally) (FALLTHRU)
(code_label 111 110 112 14 1473 (nil) [1 uses])
(note 112 111 113 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 14 (set (reg/f:DI 111 [ _59 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [238 MEM[(struct arg_rvalue_from_python *)&c2].m_data.D.316124.stage1.construct+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":312:23 74 {*movdi_internal}
     (nil))
(insn 114 113 115 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 111 [ _59 ])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/arg_from_python.hpp":312:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 115 114 116 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) "/usr/include/boost/python/converter/arg_from_python.hpp":312:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 123)
;;  succ:       15 [70.0% (guessed)]  count:302562351 (estimated locally) (FALLTHRU)
;;              17 [30.0% (guessed)]  count:129669577 (estimated locally)

;; basic block 15, loop depth 0, count 302562351 (estimated locally), maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [70.0% (guessed)]  count:302562351 (estimated locally) (FALLTHRU)
(note 116 115 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 15 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/arg_from_python.hpp":313:23 210 {*adddi_1}
     (nil))
(insn 118 117 119 15 (set (reg:DI 4 si)
        (reg:DI 160)) "/usr/include/boost/python/converter/arg_from_python.hpp":313:23 74 {*movdi_internal}
     (nil))
(insn 119 118 120 15 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _43 ])) "/usr/include/boost/python/converter/arg_from_python.hpp":313:23 74 {*movdi_internal}
     (nil))
(call_insn 120 119 121 15 (call (mem:QI (reg/f:DI 111 [ _59 ]) [0 *_59 S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/converter/arg_from_python.hpp":313:23 813 {*call}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       16 [always]  count:302562351 (estimated locally) (FALLTHRU)
;;              30 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 16, loop depth 0, count 302562351 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 [always]  count:302562351 (estimated locally) (FALLTHRU)
(note 121 120 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 16 (set (reg/f:DI 95 [ pretmp_34 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [43 MEM[(struct rvalue_from_python_data *)&c2].D.316124.stage1.convertible+0 S8 A128])) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:22 74 {*movdi_internal}
     (nil))
;;  succ:       17 [always]  count:302562351 (estimated locally) (FALLTHRU)

;; basic block 17, loop depth 0, count 432231928 (estimated locally), maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       14 [30.0% (guessed)]  count:129669577 (estimated locally)
;;              16 [always]  count:302562351 (estimated locally) (FALLTHRU)
(code_label 123 122 124 17 1474 (nil) [1 uses])
(note 124 123 125 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 17 (set (reg/f:DI 112 [ _63 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -104 [0xffffffffffffff98])) [238 MEM[(struct arg_rvalue_from_python *)&c1].m_data.D.315521.stage1.construct+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":312:23 74 {*movdi_internal}
     (nil))
(insn 126 125 127 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 112 [ _63 ])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/arg_from_python.hpp":312:5 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 127 126 128 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) "/usr/include/boost/python/converter/arg_from_python.hpp":312:5 806 {*jcc}
     (int_list:REG_BR_PROB 322122548 (nil))
 -> 134)
;;  succ:       18 [70.0% (guessed)]  count:302562351 (estimated locally) (FALLTHRU)
;;              19 [30.0% (guessed)]  count:129669577 (estimated locally)

;; basic block 18, loop depth 0, count 302562351 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [70.0% (guessed)]  count:302562351 (estimated locally) (FALLTHRU)
(note 128 127 129 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 18 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/arg_from_python.hpp":313:23 210 {*adddi_1}
     (nil))
(insn 130 129 131 18 (set (reg:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -88 [0xffffffffffffffa8])) [31 MEM[(struct arg_rvalue_from_python *)&c1].m_source+0 S8 A64])) "/usr/include/boost/python/converter/arg_from_python.hpp":313:23 74 {*movdi_internal}
     (nil))
(insn 131 130 132 18 (set (reg:DI 4 si)
        (reg:DI 161)) "/usr/include/boost/python/converter/arg_from_python.hpp":313:23 74 {*movdi_internal}
     (nil))
(insn 132 131 133 18 (set (reg:DI 5 di)
        (reg:DI 162)) "/usr/include/boost/python/converter/arg_from_python.hpp":313:23 74 {*movdi_internal}
     (nil))
(call_insn 133 132 134 18 (call (mem:QI (reg/f:DI 112 [ _63 ]) [0 *_63 S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/converter/arg_from_python.hpp":313:23 813 {*call}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       19 [always]  count:302562351 (estimated locally) (FALLTHRU)
;;              30 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)

;; basic block 19, loop depth 0, count 432231928 (estimated locally), maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       17 [30.0% (guessed)]  count:129669577 (estimated locally)
;;              18 [always]  count:302562351 (estimated locally) (FALLTHRU)
(code_label 134 133 135 19 1475 (nil) [1 uses])
(note 135 134 136 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 19 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -112 [0xffffffffffffff90])) [43 MEM[(struct arg_rvalue_from_python *)&c1].m_data.D.315521.stage1.convertible+0 S8 A128])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 137 136 138 19 (set (reg:DI 1 dx)
        (reg/f:DI 95 [ pretmp_34 ])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(insn 138 137 139 19 (set (reg:SI 4 si)
        (mem:SI (reg/f:DI 163) [35 MEM[(int &)_66]+0 S4 A32])) "/usr/include/boost/python/detail/invoke.hpp":86:25 75 {*movsi_internal}
     (nil))
(insn 139 138 140 19 (set (reg:DI 5 di)
        (reg/f:DI 104 [ _45 ])) "/usr/include/boost/python/detail/invoke.hpp":86:25 74 {*movdi_internal}
     (nil))
(call_insn 140 139 231 19 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 89 [ _27 ]) [0 *iftmp.183_68 S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/detail/invoke.hpp":86:25 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       30 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 [always (adjusted)]  count:432231928 (estimated locally) (FALLTHRU)

;; basic block 20, loop depth 0, count 432231928 (estimated locally), maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [always (adjusted)]  count:432231928 (estimated locally) (FALLTHRU)
(note 231 140 141 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 141 231 143 20 (set (reg:QI 116 [ _69 ])
        (reg:QI 0 ax)) "/usr/include/boost/python/detail/invoke.hpp":86:25 77 {*movqi_internal}
     (nil))
(insn 143 141 144 20 (set (reg:DI 164)
        (zero_extend:DI (reg:QI 116 [ _69 ]))) "/usr/include/boost/python/converter/builtin_converters.hpp":113:1 139 {zero_extendqidi2}
     (nil))
(insn 144 143 145 20 (set (reg:DI 5 di)
        (reg:DI 164)) "/usr/include/boost/python/converter/builtin_converters.hpp":113:1 74 {*movdi_internal}
     (nil))
(call_insn 145 144 232 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyBool_FromLong") [flags 0x41]  <function_decl 0x7f1a40492c00 PyBool_FromLong>) [0 PyBool_FromLong S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/builtin_converters.hpp":113:1 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("PyBool_FromLong") [flags 0x41]  <function_decl 0x7f1a40492c00 PyBool_FromLong>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       30 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 [always (adjusted)]  count:432231928 (estimated locally) (FALLTHRU)

;; basic block 21, loop depth 0, count 432231928 (estimated locally), maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [always (adjusted)]  count:432231928 (estimated locally) (FALLTHRU)
(note 232 145 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 146 232 148 21 (set (reg/f:DI 130 [ <retval> ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/builtin_converters.hpp":113:1 74 {*movdi_internal}
     (nil))
(insn 148 146 149 21 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 149 148 150 21 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg:DI 165)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 150 149 151 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])) [43 MEM[(struct rvalue_from_python_data *)&c2].D.316124.stage1.convertible+0 S8 A128])
            (reg:DI 166))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 12 {*cmpdi_1}
     (nil))
(jump_insn 151 150 152 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 221)
            (pc))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 806 {*jcc}
     (int_list:REG_BR_PROB 802701716 (nil))
 -> 221)
;;  succ:       22 [25.2% (guessed)]  count:109106479 (estimated locally) (FALLTHRU)
;;              34 [74.8% (guessed)]  count:323125449 (estimated locally)

;; basic block 22, loop depth 0, count 109106481 (estimated locally), maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 [25.2% (guessed)]  count:109106479 (estimated locally) (FALLTHRU)
(note 152 151 153 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 22 (set (reg/f:DI 118 [ _73 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [124 MEM[(struct vector *)&c2 + 16B].D.262944._M_impl.D.262289._M_finish+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 154 153 155 22 (set (reg/v/f:DI 126 [ __first ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [124 MEM[(struct vector *)&c2 + 16B].D.262944._M_impl.D.262289._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 155 154 156 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 118 [ _73 ])
            (reg/v/f:DI 126 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 156 155 180 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 186)
;;  succ:       23 [89.0% (guessed)]  count:97104768 (estimated locally) (FALLTHRU)
;;              28 [11.0% (guessed)]  count:12001713 (estimated locally)

;; basic block 23, loop depth 1, count 882770628 (estimated locally), maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       26 [always]  count:785665859 (estimated locally) (FALLTHRU)
;;              22 [89.0% (guessed)]  count:97104768 (estimated locally) (FALLTHRU)
(code_label 180 156 157 23 1480 (nil) [0 uses])
(note 157 180 158 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 23 (set (reg/f:DI 121 [ _82 ])
        (mem/f:DI (reg/v/f:DI 126 [ __first ]) [142 MEM[(int * *)__first_79]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":680:15 74 {*movdi_internal}
     (nil))
(insn 159 158 160 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 121 [ _82 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 160 159 161 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 173)
;;  succ:       24 [53.5% (guessed)]  count:472017454 (estimated locally) (FALLTHRU)
;;              25 [46.5% (guessed)]  count:410753174 (estimated locally)

;; basic block 24, loop depth 1, count 472017453 (estimated locally), maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       23 [53.5% (guessed)]  count:472017454 (estimated locally) (FALLTHRU)
(note 161 160 162 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 24 (set (reg/f:DI 168)
        (mem/f:DI (plus:DI (reg/v/f:DI 126 [ __first ])
                (const_int 16 [0x10])) [142 MEM[(int * *)__first_79 + 16B]+0 S8 A64])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 163 162 164 24 (parallel [
            (set (reg:DI 167)
                (minus:DI (reg/f:DI 168)
                    (reg/f:DI 121 [ _82 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 126 [ __first ])
                    (const_int 16 [0x10])) [142 MEM[(int * *)__first_79 + 16B]+0 S8 A64])
            (reg/f:DI 121 [ _82 ]))
        (nil)))
(insn 164 163 165 24 (set (reg:DI 4 si)
        (reg:DI 167)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 165 164 166 24 (set (reg:DI 5 di)
        (reg/f:DI 121 [ _82 ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 166 165 167 24 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 167 166 168 24 (parallel [
            (set (reg/v/f:DI 126 [ __first ])
                (plus:DI (reg/v/f:DI 126 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 168 167 169 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 118 [ _73 ])
            (reg/v/f:DI 126 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 169 168 173 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 178)
;;  succ:       26 [89.0% (guessed)]  count:420095533 (estimated locally)
;;              27 [11.0% (guessed)]  count:51921920 (estimated locally) (FALLTHRU)

;; basic block 25, loop depth 1, count 410753175 (estimated locally), maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       23 [46.5% (guessed)]  count:410753174 (estimated locally)
(code_label 173 169 174 25 1477 (nil) [1 uses])
(note 174 173 175 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 25 (parallel [
            (set (reg/v/f:DI 126 [ __first ])
                (plus:DI (reg/v/f:DI 126 [ __first ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_construct.h":162:4 210 {*adddi_1}
     (nil))
(insn 176 175 177 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 118 [ _73 ])
            (reg/v/f:DI 126 [ __first ]))) "/usr/include/c++/11/bits/stl_construct.h":162:19 12 {*cmpdi_1}
     (nil))
(jump_insn 177 176 178 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "/usr/include/c++/11/bits/stl_construct.h":162:19 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 183)
;;  succ:       26 [89.0% (guessed)]  count:365570326 (estimated locally) (FALLTHRU)
;;              27 [11.0% (guessed)]  count:45182849 (estimated locally)

;; basic block 26, loop depth 1, count 785665859 (estimated locally), maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [89.0% (guessed)]  count:365570326 (estimated locally) (FALLTHRU)
;;              24 [89.0% (guessed)]  count:420095533 (estimated locally)
(code_label 178 177 179 26 1478 (nil) [1 uses])
(note 179 178 183 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
;;  succ:       23 [always]  count:785665859 (estimated locally) (FALLTHRU)

;; basic block 27, loop depth 0, count 97104769 (estimated locally), maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       25 [11.0% (guessed)]  count:45182849 (estimated locally)
;;              24 [11.0% (guessed)]  count:51921920 (estimated locally) (FALLTHRU)
(code_label 183 179 184 27 1479 (nil) [1 uses])
(note 184 183 185 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 27 (set (reg/v/f:DI 126 [ __first ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [124 MEM[(struct _Vector_base *)&c2 + 16B]._M_impl.D.262289._M_start+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:45 74 {*movdi_internal}
     (nil))
;;  succ:       28 [always]  count:97104769 (estimated locally) (FALLTHRU)

;; basic block 28, loop depth 0, count 109106481 (estimated locally), maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 [always]  count:97104769 (estimated locally) (FALLTHRU)
;;              22 [11.0% (guessed)]  count:12001713 (estimated locally)
(code_label 186 185 187 28 1476 (nil) [1 uses])
(note 187 186 188 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 126 [ __first ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/stl_vector.h":353:2 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 189 188 190 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 221)
            (pc))) "/usr/include/c++/11/bits/stl_vector.h":353:2 806 {*jcc}
     (int_list:REG_BR_PROB 499612076 (nil))
 -> 221)
;;  succ:       29 [53.5% (guessed)]  count:58339235 (estimated locally) (FALLTHRU)
;;              34 [46.5% (guessed)]  count:50767246 (estimated locally)

;; basic block 29, loop depth 0, count 58339235 (estimated locally), maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       28 [53.5% (guessed)]  count:58339235 (estimated locally) (FALLTHRU)
(note 190 189 191 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 29 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [124 MEM[(struct _Vector_base *)&c2 + 16B]._M_impl.D.262289._M_end_of_storage+0 S8 A128])) "/usr/include/c++/11/bits/stl_vector.h":336:35 74 {*movdi_internal}
     (nil))
(insn 192 191 193 29 (parallel [
            (set (reg:DI 169)
                (minus:DI (reg/f:DI 170)
                    (reg/v/f:DI 126 [ __first ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/bits/stl_vector.h":336:35 283 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])) [124 MEM[(struct _Vector_base *)&c2 + 16B]._M_impl.D.262289._M_end_of_storage+0 S8 A128])
            (reg/v/f:DI 126 [ __first ]))
        (nil)))
(insn 193 192 194 29 (set (reg:DI 4 si)
        (reg:DI 169)) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(insn 194 193 195 29 (set (reg:DI 5 di)
        (reg/v/f:DI 126 [ __first ])) "/usr/include/c++/11/ext/new_allocator.h":145:19 74 {*movdi_internal}
     (nil))
(call_insn 195 194 235 29 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ext/new_allocator.h":145:19 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f1a51926c00 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       34 [always]  count:58339235 (estimated locally) (FALLTHRU)

;; basic block 30, loop depth 0, count 0 (precise), probably never executed
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       15 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              18 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              19 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 [never]  count:0 (precise) (ABNORMAL,ABNORMAL_CALL,EH)
(code_label/s 235 195 237 30 1485 (nil) [1 uses])
(note 237 235 236 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 236 237 204 30 (set (reg:DI 176)
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 74 {*movdi_internal}
     (nil))
;;  succ:       31 [always]  count:0 (precise) (FALLTHRU,PRESERVE)

;; basic block 31, loop depth 0, count 0 (precise), probably never executed
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 [always]  count:0 (precise) (FALLTHRU,PRESERVE)
(code_label 204 236 205 31 1482 (nil) [0 uses])
(note 205 204 206 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 31 (parallel [
            (set (reg:DI 172)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 207 206 208 31 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg:DI 172)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 210 {*adddi_1}
     (nil))
(insn 208 207 209 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])) [43 MEM[(struct rvalue_from_python_data *)&c2].D.316124.stage1.convertible+0 S8 A128])
            (reg:DI 173))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 12 {*cmpdi_1}
     (nil))
(jump_insn 209 208 210 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "/usr/include/boost/python/converter/rvalue_from_python_data.hpp":134:5 806 {*jcc}
     (int_list:REG_BR_PROB 7 (nil))
 -> 215)
;;  succ:       32 [never]  count:0 (precise) (FALLTHRU)
;;              33 [never]  count:0 (precise)

;; basic block 32, loop depth 0, count 0 (precise), probably never executed
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       31 [never]  count:0 (precise) (FALLTHRU)
(note 210 209 211 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 32 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/destroy.hpp":20:14 210 {*adddi_1}
     (nil))
(insn 212 211 213 32 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg:DI 174)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/boost/python/detail/destroy.hpp":20:14 210 {*adddi_1}
     (nil))
(insn 213 212 214 32 (set (reg:DI 5 di)
        (reg:DI 175)) "/usr/include/boost/python/detail/destroy.hpp":20:14 74 {*movdi_internal}
     (nil))
(call_insn 214 213 215 32 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIS_IiSaIiEESaIS1_EED1Ev") [flags 0x1]  <function_decl 0x7f1a36d8b900 __dt_comp >) [0 __dt_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/detail/destroy.hpp":20:14 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIS_IiSaIiEESaIS1_EED1Ev") [flags 0x1]  <function_decl 0x7f1a36d8b900 __dt_comp >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       33 [never]  count:0 (precise) (FALLTHRU)

;; basic block 33, loop depth 0, count 0 (precise), probably never executed
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       31 [never]  count:0 (precise)
;;              32 [never]  count:0 (precise) (FALLTHRU)
(code_label 215 214 216 33 1483 (nil) [1 uses])
(note 216 215 217 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 33 (set (reg/f:DI 127 [ D.331700 ])
        (reg:DI 176)) 74 {*movdi_internal}
     (nil))
(insn 218 217 219 33 (set (reg:DI 5 di)
        (reg/f:DI 127 [ D.331700 ])) 74 {*movdi_internal}
     (nil))
(call_insn 219 218 221 33 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f1a51925900 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

;; basic block 34, loop depth 0, count 1072698934 (estimated locally), maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       29 [always]  count:58339235 (estimated locally) (FALLTHRU)
;;              4 [15.5% (guessed)]  count:166041421 (estimated locally)
;;              8 [always]  count:474425583 (estimated locally) (FALLTHRU)
;;              21 [74.8% (guessed)]  count:323125449 (estimated locally)
;;              28 [46.5% (guessed)]  count:50767246 (estimated locally)
(code_label 221 219 230 34 1465 (nil) [3 uses])
(note 230 221 222 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 222 230 223 34 (set (reg/f:DI 177)
        (const_int 40 [0x28])) "/usr/include/boost/python/object/py_function.hpp":39:5 74 {*movdi_internal}
     (nil))
(insn 223 222 224 34 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [43 D.331701+0 S8 A64])
                        (mem/v/f:DI (reg/f:DI 177) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/boost/python/object/py_function.hpp":39:5 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 224 223 233 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) "/usr/include/boost/python/object/py_function.hpp":39:5 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 227)
;;  succ:       36 [100.0% (guessed)]  count:1072269855 (estimated locally)
;;              35 [0.0% (guessed)]  count:429079 (estimated locally) (FALLTHRU)

;; basic block 35, loop depth 0, count 429079 (estimated locally)
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       34 [0.0% (guessed)]  count:429079 (estimated locally) (FALLTHRU)
(note 233 224 225 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(call_insn 225 233 227 35 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/boost/python/object/py_function.hpp":39:5 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1a33bcd800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

;; basic block 36, loop depth 0, count 1072269855 (estimated locally), maybe hot
;;  prev block 35, next block 1, flags: (RTL)
;;  pred:       34 [100.0% (guessed)]  count:1072269855 (estimated locally)
(code_label 227 225 234 36 1484 (nil) [1 uses])
(note 234 227 228 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 228 234 229 36 (set (reg/i:DI 0 ax)
        (reg/f:DI 130 [ <retval> ])) "/usr/include/boost/python/object/py_function.hpp":39:5 74 {*movdi_internal}
     (nil))
(insn 229 228 0 36 (use (reg/i:DI 0 ax)) "/usr/include/boost/python/object/py_function.hpp":39:5 -1
     (nil))
;;  succ:       EXIT [always]  count:1072269855 (estimated locally) (FALLTHRU)


;; Function _GLOBAL__sub_I_ChineseCheckersWrapper.cpp (_GLOBAL__sub_I_ChineseCheckersWrapper.cpp, funcdef_no=13769, decl_uid=318815, cgraph_uid=5680, symbol_order=7525) (executed once)

Choices when optimizing for size:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Choices when optimizing for speed:
  Splitting mode TI for copy lowering.
  Splitting mode OI for copy lowering.
  Splitting mode XI for copy lowering.
  Splitting mode POI for copy lowering.
  Splitting mode TQ for copy lowering.
  Splitting mode UTQ for copy lowering.
  Splitting mode TA for copy lowering.
  Splitting mode UTA for copy lowering.
  Skipping mode XF for copy lowering.
  Skipping mode TF for copy lowering.
  Splitting mode TD for copy lowering.
  Splitting mode CDI for copy lowering.
  Splitting mode CTI for copy lowering.
  Splitting mode CPOI for copy lowering.
  Splitting mode COI for copy lowering.
  Splitting mode CXI for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode XC for copy lowering.
  Skipping mode TC for copy lowering.
  Splitting mode V12QI for copy lowering.
  Splitting mode V6HI for copy lowering.
  Splitting mode V14QI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V1TI for copy lowering.
  Splitting mode V32QI for copy lowering.
  Splitting mode V16HI for copy lowering.
  Splitting mode V8SI for copy lowering.
  Splitting mode V4DI for copy lowering.
  Splitting mode V2TI for copy lowering.
  Splitting mode V64QI for copy lowering.
  Splitting mode V32HI for copy lowering.
  Splitting mode V16SI for copy lowering.
  Splitting mode V8DI for copy lowering.
  Splitting mode V4TI for copy lowering.
  Splitting mode V128QI for copy lowering.
  Splitting mode V64HI for copy lowering.
  Splitting mode V32SI for copy lowering.
  Splitting mode V16DI for copy lowering.
  Splitting mode V8TI for copy lowering.
  Splitting mode V64SI for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode V8SF for copy lowering.
  Splitting mode V4DF for copy lowering.
  Splitting mode V2TF for copy lowering.
  Splitting mode V16SF for copy lowering.
  Splitting mode V8DF for copy lowering.
  Splitting mode V4TF for copy lowering.
  Splitting mode V32SF for copy lowering.
  Splitting mode V16DF for copy lowering.
  Splitting mode V8TF for copy lowering.
  Splitting mode V64SF for copy lowering.
  Splitting mode V32DF for copy lowering.
  Splitting mode V16TF for copy lowering.
  Skipping mode TI for zero_extend lowering.
  Splitting mode TI for ashift lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for lshiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
  Splitting mode TI for ashiftrt lowering with shift amounts = 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127

Nothing to lower in this function.
;; basic block 2, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [always]  count:1073741824 (estimated locally) (FALLTHRU)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 110)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 6 5 10 2 (set (reg/f:DI 111)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/python3.10/object.h":472:9 74 {*movdi_internal}
     (nil))
(insn 10 6 11 2 (set (reg:DI 115)
        (mem/c:DI (reg/f:DI 111) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg:DI 115)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/python3.10/object.h":472:18 210 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (reg/f:DI 111) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 12 11 13 2 (set (mem/c:DI (reg/f:DI 110) [7 _Py_NoneStruct.ob_refcnt+0 S8 A64])
        (reg:DI 114)) "/usr/include/python3.10/object.h":472:18 74 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 116)
        (symbol_ref:DI ("_ZN5boost6python3apiL1_E") [flags 0x2]  <var_decl 0x7f1a39d1b000 _>)) "/usr/include/boost/python/object_core.hpp":409:7 74 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 118)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/object_core.hpp":409:7 74 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 117)
        (reg:DI 118)) "/usr/include/boost/python/object_core.hpp":409:7 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_Py_NoneStruct") [flags 0x40]  <var_decl 0x7f1a406e0d80 _Py_NoneStruct>)
        (nil)))
(insn 16 15 17 2 (set (mem/f/c:DI (reg/f:DI 116) [31 MEM[(struct object_base *)&_].m_ptr+0 S8 A64])
        (reg/f:DI 117)) "/usr/include/boost/python/object_core.hpp":409:7 74 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 119)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f1a351636c0 __dso_handle>)) "/usr/include/boost/python/slice_nil.hpp":20:24 74 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (reg:DI 119)) "/usr/include/boost/python/slice_nil.hpp":20:24 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f1a351636c0 __dso_handle>)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 120)
        (symbol_ref:DI ("_ZN5boost6python3apiL1_E") [flags 0x2]  <var_decl 0x7f1a39d1b000 _>)) "/usr/include/boost/python/slice_nil.hpp":20:24 74 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg:DI 120)) "/usr/include/boost/python/slice_nil.hpp":20:24 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZN5boost6python3apiL1_E") [flags 0x2]  <var_decl 0x7f1a39d1b000 _>)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 122)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python3api9slice_nilD1Ev") [flags 0x1]  <function_decl 0x7f1a39d18d00 __dt_comp >)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/slice_nil.hpp":20:24 74 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 121)
        (reg:DI 122)) "/usr/include/boost/python/slice_nil.hpp":20:24 74 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg:DI 121)) "/usr/include/boost/python/slice_nil.hpp":20:24 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZN5boost6python3api9slice_nilD1Ev") [flags 0x1]  <function_decl 0x7f1a39d18d00 __dt_comp >)
        (nil)))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f1a3b4b0d00 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/slice_nil.hpp":20:24 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f1a3b4b0d00 __cxa_atexit>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 25 24 26 2 (set (reg:DI 123)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f1a3758aab0 __ioinit>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 123)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f1a3758aab0 __ioinit>)
        (nil)))
(call_insn 27 26 28 2 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f1a3d469500 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/iostream":74:25 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f1a3d469500 __ct_comp >)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 2 (set (reg:DI 124)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f1a351636c0 __dso_handle>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:DI 1 dx)
        (reg:DI 124)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f1a351636c0 __dso_handle>)
        (nil)))
(insn 30 29 31 2 (set (reg:DI 125)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f1a3758aab0 __ioinit>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg:DI 125)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f1a3758aab0 __ioinit>)
        (nil)))
(insn 32 31 33 2 (set (reg:DI 127)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f1a3d469700 __dt_comp >)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:DI 126)
        (reg:DI 127)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:DI 5 di)
        (reg:DI 126)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f1a3d469700 __dt_comp >)
        (nil)))
(call_insn 35 34 36 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f1a3b4b0d00 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/iostream":74:25 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f1a3b4b0d00 __cxa_atexit>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 36 35 37 2 (set (reg/f:DI 128)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKiE10convertersE")  <var_decl 0x7f1a35163750 _ZGVN5boost6python9converter6detail15registered_baseIRVKiE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 128) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKiE10convertersE]+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":118:23 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 38 37 39 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "/usr/include/boost/python/converter/registered.hpp":118:23 806 {*jcc}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 56)
;;  succ:       3 [50.0% (guessed)]  count:536870912 (estimated locally) (FALLTHRU)
;;              6 [50.0% (guessed)]  count:536870912 (estimated locally)

;; basic block 3, loop depth 0, count 536870913 (estimated locally)
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [50.0% (guessed)]  count:536870912 (estimated locally) (FALLTHRU)
(note 39 38 40 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 3 (set (reg/f:DI 129)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKiE10convertersE")  <var_decl 0x7f1a35163750 _ZGVN5boost6python9converter6detail15registered_baseIRVKiE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 41 40 42 3 (set (mem/c:QI (reg/f:DI 129) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKiE10convertersE]+0 S1 A64])
        (const_int 1 [0x1])) "/usr/include/boost/python/converter/registered.hpp":118:23 77 {*movqi_internal}
     (nil))
(insn 42 41 43 3 (set (reg/f:DI 130)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIi") [flags 0x40]  <var_decl 0x7f1a355db6c0 _ZTIi>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 43 42 44 3 (set (reg/f:DI 93 [ _15 ])
        (mem/u/f/c:DI (plus:DI (reg/f:DI 130)
                (const_int 8 [0x8])) [6 MEM[(const struct type_info *)&_ZTIi].__name+0 S8 A64])) "/usr/include/c++/11/typeinfo":100:14 74 {*movdi_internal}
     (nil))
(insn 44 43 45 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 93 [ _15 ]) [0 *_15+0 S1 A8])
            (const_int 42 [0x2a]))) "/usr/include/c++/11/typeinfo":100:31 9 {*cmpqi_1}
     (nil))
(jump_insn 45 44 46 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "/usr/include/c++/11/typeinfo":100:31 806 {*jcc}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 48)
;;  succ:       4 [34.0% (guessed)]  count:182536112 (estimated locally) (FALLTHRU)
;;              5 [66.0% (guessed)]  count:354334801 (estimated locally)

;; basic block 4, loop depth 0, count 182536112 (estimated locally)
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [34.0% (guessed)]  count:182536112 (estimated locally) (FALLTHRU)
(note 46 45 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 4 (parallel [
            (set (reg/f:DI 93 [ _15 ])
                (plus:DI (reg/f:DI 93 [ _15 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/11/typeinfo":100:31 210 {*adddi_1}
     (nil))
;;  succ:       5 [always]  count:182536112 (estimated locally) (FALLTHRU)

;; basic block 5, loop depth 0, count 536870913 (estimated locally)
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3 [66.0% (guessed)]  count:354334801 (estimated locally)
;;              4 [always]  count:182536112 (estimated locally) (FALLTHRU)
(code_label 48 47 49 5 1512 (nil) [1 uses])
(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 5 (set (reg:DI 105 [ D.331728 ])
        (reg/f:DI 93 [ _15 ])) 74 {*movdi_internal}
     (nil))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg:DI 105 [ D.331728 ])) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(call_insn 52 51 53 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":100:30 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 53 52 54 5 (set (reg/f:DI 95 [ _19 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(insn 54 53 55 5 (set (reg/f:DI 131)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKiE10convertersE")  <var_decl 0x7f1a35a59bd0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 55 54 56 5 (set (mem/f/c:DI (reg/f:DI 131) [42 converters+0 S8 A64])
        (reg/f:DI 95 [ _19 ])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
;;  succ:       6 [always]  count:536870913 (estimated locally) (FALLTHRU)

;; basic block 6, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       2 [50.0% (guessed)]  count:536870912 (estimated locally)
;;              5 [always]  count:536870913 (estimated locally) (FALLTHRU)
(code_label 56 55 57 6 1511 (nil) [1 uses])
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg/f:DI 132)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIiSaIiEEE10convertersE")  <var_decl 0x7f1a351637e0 _ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIiSaIiEEE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 59 58 60 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 132) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIiSaIiEEE10convertersE]+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":118:23 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 60 59 61 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "/usr/include/boost/python/converter/registered.hpp":118:23 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 71)
;;  succ:       7 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
;;              8 [67.0% (guessed)]  count:719407024 (estimated locally)

;; basic block 7, loop depth 0, count 354334800 (estimated locally)
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (set (reg/f:DI 133)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIiSaIiEEE10convertersE")  <var_decl 0x7f1a351637e0 _ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIiSaIiEEE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 63 62 64 7 (set (mem/c:QI (reg/f:DI 133) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIiSaIiEEE10convertersE]+0 S1 A64])
        (const_int 1 [0x1])) "/usr/include/boost/python/converter/registered.hpp":118:23 77 {*movqi_internal}
     (nil))
(insn 64 63 65 7 (set (reg:DI 134)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIiSaIiEE")  <var_decl 0x7f1a351561b0 _ZTSSt6vectorIiSaIiEE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 65 64 66 7 (set (reg:DI 104 [ D.331729 ])
        (reg:DI 134)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIiSaIiEE")  <var_decl 0x7f1a351561b0 _ZTSSt6vectorIiSaIiEE>)
        (nil)))
(insn 66 65 67 7 (set (reg:DI 5 di)
        (reg:DI 104 [ D.331729 ])) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(call_insn 67 66 68 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":100:30 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 68 67 69 7 (set (reg/f:DI 97 [ _21 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(insn 69 68 70 7 (set (reg/f:DI 135)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorIiSaIiEEE10convertersE")  <var_decl 0x7f1a35a59d80 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 70 69 71 7 (set (mem/f/c:DI (reg/f:DI 135) [42 converters+0 S8 A64])
        (reg/f:DI 97 [ _21 ])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
;;  succ:       8 [always]  count:354334800 (estimated locally) (FALLTHRU)

;; basic block 8, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6 [67.0% (guessed)]  count:719407024 (estimated locally)
;;              7 [always]  count:354334800 (estimated locally) (FALLTHRU)
(code_label 71 70 72 8 1513 (nil) [1 uses])
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 8 (set (reg/f:DI 136)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorI5ColorSaIS5_EEE10convertersE")  <var_decl 0x7f1a35163870 _ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorI5ColorSaIS5_EEE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 74 73 75 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 136) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorI5ColorSaIS5_EEE10convertersE]+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":118:23 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 75 74 76 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "/usr/include/boost/python/converter/registered.hpp":118:23 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 86)
;;  succ:       9 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
;;              10 [67.0% (guessed)]  count:719407024 (estimated locally)

;; basic block 9, loop depth 0, count 354334800 (estimated locally)
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 9 (set (reg/f:DI 137)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorI5ColorSaIS5_EEE10convertersE")  <var_decl 0x7f1a35163870 _ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorI5ColorSaIS5_EEE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 78 77 79 9 (set (mem/c:QI (reg/f:DI 137) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorI5ColorSaIS5_EEE10convertersE]+0 S1 A64])
        (const_int 1 [0x1])) "/usr/include/boost/python/converter/registered.hpp":118:23 77 {*movqi_internal}
     (nil))
(insn 79 78 80 9 (set (reg:DI 138)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorI5ColorSaIS0_EE")  <var_decl 0x7f1a3511f750 _ZTSSt6vectorI5ColorSaIS0_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 80 79 81 9 (set (reg:DI 103 [ D.331730 ])
        (reg:DI 138)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorI5ColorSaIS0_EE")  <var_decl 0x7f1a3511f750 _ZTSSt6vectorI5ColorSaIS0_EE>)
        (nil)))
(insn 81 80 82 9 (set (reg:DI 5 di)
        (reg:DI 103 [ D.331730 ])) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(call_insn 82 81 83 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":100:30 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 83 82 84 9 (set (reg/f:DI 99 [ _23 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(insn 84 83 85 9 (set (reg/f:DI 139)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorI5ColorSaIS5_EEE10convertersE")  <var_decl 0x7f1a35a8f360 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 85 84 86 9 (set (mem/f/c:DI (reg/f:DI 139) [42 converters+0 S8 A64])
        (reg/f:DI 99 [ _23 ])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
;;  succ:       10 [always]  count:354334800 (estimated locally) (FALLTHRU)

;; basic block 10, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8 [67.0% (guessed)]  count:719407024 (estimated locally)
;;              9 [always]  count:354334800 (estimated locally) (FALLTHRU)
(code_label 86 85 87 10 1514 (nil) [1 uses])
(note 87 86 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 10 (set (reg/f:DI 140)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35163900 _ZGVN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 89 88 90 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 140) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE]+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":118:23 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 90 89 91 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "/usr/include/boost/python/converter/registered.hpp":118:23 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 101)
;;  succ:       11 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
;;              12 [67.0% (guessed)]  count:719407024 (estimated locally)

;; basic block 11, loop depth 0, count 354334800 (estimated locally)
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
(note 91 90 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 11 (set (reg/f:DI 141)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35163900 _ZGVN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 93 92 94 11 (set (mem/c:QI (reg/f:DI 141) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE]+0 S1 A64])
        (const_int 1 [0x1])) "/usr/include/boost/python/converter/registered.hpp":118:23 77 {*movqi_internal}
     (nil))
(insn 94 93 95 11 (set (reg:DI 142)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 95 94 96 11 (set (reg:DI 102 [ D.331731 ])
        (reg:DI 142)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS15ChineseCheckers")  <var_decl 0x7f1a3511fea0 _ZTS15ChineseCheckers>)
        (nil)))
(insn 96 95 97 11 (set (reg:DI 5 di)
        (reg:DI 102 [ D.331731 ])) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(call_insn 97 96 98 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":100:30 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 98 97 99 11 (set (reg/f:DI 101 [ _25 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(insn 99 98 100 11 (set (reg/f:DI 143)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK15ChineseCheckersE10convertersE")  <var_decl 0x7f1a35a8fcf0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 100 99 101 11 (set (mem/f/c:DI (reg/f:DI 143) [42 converters+0 S8 A64])
        (reg/f:DI 101 [ _25 ])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
;;  succ:       12 [always]  count:354334800 (estimated locally) (FALLTHRU)

;; basic block 12, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [always]  count:354334800 (estimated locally) (FALLTHRU)
;;              10 [67.0% (guessed)]  count:719407024 (estimated locally)
(code_label 101 100 102 12 1515 (nil) [1 uses])
(note 102 101 103 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 12 (set (reg/f:DI 144)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IS4_IiSaIiEESaIS6_EESaIS8_EEE10convertersE")  <var_decl 0x7f1a34d677e0 _ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IS4_IiSaIiEESaIS6_EESaIS8_EEE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 104 103 105 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 144) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IS4_IiSaIiEESaIS6_EESaIS8_EEE10convertersE]+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":118:23 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 105 104 106 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "/usr/include/boost/python/converter/registered.hpp":118:23 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 116)
;;  succ:       13 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
;;              14 [67.0% (guessed)]  count:719407024 (estimated locally)

;; basic block 13, loop depth 0, count 354334800 (estimated locally)
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
(note 106 105 107 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 13 (set (reg/f:DI 145)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IS4_IiSaIiEESaIS6_EESaIS8_EEE10convertersE")  <var_decl 0x7f1a34d677e0 _ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IS4_IiSaIiEESaIS6_EESaIS8_EEE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 108 107 109 13 (set (mem/c:QI (reg/f:DI 145) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IS4_IiSaIiEESaIS6_EESaIS8_EEE10convertersE]+0 S1 A64])
        (const_int 1 [0x1])) "/usr/include/boost/python/converter/registered.hpp":118:23 77 {*movqi_internal}
     (nil))
(insn 109 108 110 13 (set (reg:DI 146)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE")  <var_decl 0x7f1a351562d0 _ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 110 109 111 13 (set (reg:DI 109 [ D.331722 ])
        (reg:DI 146)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE")  <var_decl 0x7f1a351562d0 _ZTSSt6vectorIS_IS_IiSaIiEESaIS1_EESaIS3_EE>)
        (nil)))
(insn 111 110 112 13 (set (reg:DI 5 di)
        (reg:DI 109 [ D.331722 ])) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(call_insn 112 111 113 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":100:30 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 113 112 114 13 (set (reg/f:DI 83 [ _5 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(insn 114 113 115 13 (set (reg/f:DI 147)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IS4_IiSaIiEESaIS6_EESaIS8_EEE10convertersE")  <var_decl 0x7f1a34c9fa20 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 115 114 116 13 (set (mem/f/c:DI (reg/f:DI 147) [42 converters+0 S8 A64])
        (reg/f:DI 83 [ _5 ])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
;;  succ:       14 [always]  count:354334800 (estimated locally) (FALLTHRU)

;; basic block 14, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       12 [67.0% (guessed)]  count:719407024 (estimated locally)
;;              13 [always]  count:354334800 (estimated locally) (FALLTHRU)
(code_label 116 115 117 14 1516 (nil) [1 uses])
(note 117 116 118 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 14 (set (reg/f:DI 148)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_I5ColorSaIS5_EESaIS7_EEE10convertersE")  <var_decl 0x7f1a34d67870 _ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_I5ColorSaIS5_EESaIS7_EEE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 119 118 120 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 148) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_I5ColorSaIS5_EESaIS7_EEE10convertersE]+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":118:23 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 120 119 121 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "/usr/include/boost/python/converter/registered.hpp":118:23 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 131)
;;  succ:       15 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
;;              16 [67.0% (guessed)]  count:719407024 (estimated locally)

;; basic block 15, loop depth 0, count 354334800 (estimated locally)
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
(note 121 120 122 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 15 (set (reg/f:DI 149)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_I5ColorSaIS5_EESaIS7_EEE10convertersE")  <var_decl 0x7f1a34d67870 _ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_I5ColorSaIS5_EESaIS7_EEE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 123 122 124 15 (set (mem/c:QI (reg/f:DI 149) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_I5ColorSaIS5_EESaIS7_EEE10convertersE]+0 S1 A64])
        (const_int 1 [0x1])) "/usr/include/boost/python/converter/registered.hpp":118:23 77 {*movqi_internal}
     (nil))
(insn 124 123 125 15 (set (reg:DI 150)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 125 124 126 15 (set (reg:DI 108 [ D.331723 ])
        (reg:DI 150)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE")  <var_decl 0x7f1a351563f0 _ZTSSt6vectorIS_I5ColorSaIS0_EESaIS2_EE>)
        (nil)))
(insn 126 125 127 15 (set (reg:DI 5 di)
        (reg:DI 108 [ D.331723 ])) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(call_insn 127 126 128 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":100:30 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 128 127 129 15 (set (reg/f:DI 85 [ _7 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(insn 129 128 130 15 (set (reg/f:DI 151)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_I5ColorSaIS5_EESaIS7_EEE10convertersE")  <var_decl 0x7f1a34c9fea0 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 130 129 131 15 (set (mem/f/c:DI (reg/f:DI 151) [42 converters+0 S8 A64])
        (reg/f:DI 85 [ _7 ])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
;;  succ:       16 [always]  count:354334800 (estimated locally) (FALLTHRU)

;; basic block 16, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       14 [67.0% (guessed)]  count:719407024 (estimated locally)
;;              15 [always]  count:354334800 (estimated locally) (FALLTHRU)
(code_label 131 130 132 16 1517 (nil) [1 uses])
(note 132 131 133 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 16 (set (reg/f:DI 152)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVK6ResultE10convertersE")  <var_decl 0x7f1a34d67900 _ZGVN5boost6python9converter6detail15registered_baseIRVK6ResultE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 134 133 135 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 152) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVK6ResultE10convertersE]+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":118:23 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 135 134 136 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "/usr/include/boost/python/converter/registered.hpp":118:23 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 146)
;;  succ:       17 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
;;              18 [67.0% (guessed)]  count:719407024 (estimated locally)

;; basic block 17, loop depth 0, count 354334800 (estimated locally)
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
(note 136 135 137 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 17 (set (reg/f:DI 153)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVK6ResultE10convertersE")  <var_decl 0x7f1a34d67900 _ZGVN5boost6python9converter6detail15registered_baseIRVK6ResultE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 138 137 139 17 (set (mem/c:QI (reg/f:DI 153) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVK6ResultE10convertersE]+0 S1 A64])
        (const_int 1 [0x1])) "/usr/include/boost/python/converter/registered.hpp":118:23 77 {*movqi_internal}
     (nil))
(insn 139 138 140 17 (set (reg:DI 154)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTS6Result")  <var_decl 0x7f1a3505d090 _ZTS6Result>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 140 139 141 17 (set (reg:DI 107 [ D.331724 ])
        (reg:DI 154)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTS6Result")  <var_decl 0x7f1a3505d090 _ZTS6Result>)
        (nil)))
(insn 141 140 142 17 (set (reg:DI 5 di)
        (reg:DI 107 [ D.331724 ])) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(call_insn 142 141 143 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":100:30 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 143 142 144 17 (set (reg/f:DI 87 [ _9 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(insn 144 143 145 17 (set (reg/f:DI 155)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVK6ResultE10convertersE")  <var_decl 0x7f1a34cc7360 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 145 144 146 17 (set (mem/f/c:DI (reg/f:DI 155) [42 converters+0 S8 A64])
        (reg/f:DI 87 [ _9 ])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
;;  succ:       18 [always]  count:354334800 (estimated locally) (FALLTHRU)

;; basic block 18, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16 [67.0% (guessed)]  count:719407024 (estimated locally)
;;              17 [always]  count:354334800 (estimated locally) (FALLTHRU)
(code_label 146 145 147 18 1518 (nil) [1 uses])
(note 147 146 148 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 18 (set (reg/f:DI 156)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IiSaIiEESaIS6_EEE10convertersE")  <var_decl 0x7f1a34d67990 _ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IiSaIiEESaIS6_EEE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 149 148 150 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 156) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IiSaIiEESaIS6_EEE10convertersE]+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":118:23 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 150 149 151 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 163)
            (pc))) "/usr/include/boost/python/converter/registered.hpp":118:23 806 {*jcc}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 163)
;;  succ:       19 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
;;              20 [67.0% (guessed)]  count:719407024 (estimated locally)

;; basic block 19, loop depth 0, count 354334800 (estimated locally)
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [33.0% (guessed)]  count:354334800 (estimated locally) (FALLTHRU)
(note 151 150 152 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 19 (set (reg/f:DI 157)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IiSaIiEESaIS6_EEE10convertersE")  <var_decl 0x7f1a34d67990 _ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IiSaIiEESaIS6_EEE10convertersE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 153 152 154 19 (set (mem/c:QI (reg/f:DI 157) [0 MEM[(char *)&_ZGVN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IiSaIiEESaIS6_EEE10convertersE]+0 S1 A64])
        (const_int 1 [0x1])) "/usr/include/boost/python/converter/registered.hpp":118:23 77 {*movqi_internal}
     (nil))
(insn 154 153 155 19 (set (reg:DI 158)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) 74 {*movdi_internal}
     (nil))
(insn 155 154 156 19 (set (reg:DI 106 [ D.331725 ])
        (reg:DI 158)) 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("_ZTSSt6vectorIS_IiSaIiEESaIS1_EE")  <var_decl 0x7f1a35156090 _ZTSSt6vectorIS_IiSaIiEESaIS1_EE>)
        (nil)))
(insn 156 155 157 19 (set (reg:DI 5 di)
        (reg:DI 106 [ D.331725 ])) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(call_insn 157 156 158 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) "/usr/include/boost/python/converter/registered.hpp":100:30 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5boost6python9converter8registry6lookupENS0_9type_infoE") [flags 0x41]  <function_decl 0x7f1a3a981b00 lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 158 157 159 19 (set (reg/f:DI 89 [ _11 ])
        (reg:DI 0 ax)) "/usr/include/boost/python/converter/registered.hpp":100:30 74 {*movdi_internal}
     (nil))
(insn 159 158 160 19 (set (reg/f:DI 159)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN5boost6python9converter6detail15registered_baseIRVKSt6vectorIS4_IiSaIiEESaIS6_EEE10convertersE")  <var_decl 0x7f1a34cc7a20 converters>)
                    ] UNSPEC_GOTPCREL)) [463  S8 A8])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
(insn 160 159 163 19 (set (mem/f/c:DI (reg/f:DI 159) [42 converters+0 S8 A64])
        (reg/f:DI 89 [ _11 ])) "/usr/include/boost/python/converter/registered.hpp":118:23 74 {*movdi_internal}
     (nil))
;;  succ:       20 [always]  count:354334800 (estimated locally) (FALLTHRU)

;; basic block 20, loop depth 0, count 1073741824 (estimated locally), maybe hot
;;  prev block 19, next block 1, flags: (RTL)
;;  pred:       19 [always]  count:354334800 (estimated locally) (FALLTHRU)
;;              18 [67.0% (guessed)]  count:719407024 (estimated locally)
(code_label 163 160 164 20 1510 (nil) [1 uses])
(note 164 163 0 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  count:1073741824 (estimated locally) (FALLTHRU)

